{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/link.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/textFormat/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/utils.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/slideNavigator.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/link/index.js","board/elements/index.js","board/pattern.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","createElementBaseObject","id","initialZoomLevel","styles","width","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","text","link","ShapeCircle","currentState","newState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","postitRect","postitSquare","postitRectV","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","push","shift","getUpdatedPointsBuffer","Line","lineStraight","lineSmooth","lineFreehand","lineStraightArrow","Image","presetWidthAndHeight","imgURL","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Slide","slideName","handleSlideClick","handleSlideDragStart","Link","handleLinkClick","handleLinkDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","More","slide","pdf","iframe","youtube","timer","poll","Toolbar","newStyles","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onMouseUp","PureComponent","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","gridSpace","sizeChecker","textContainer","scrollHeight","clientHeight","newFontSize","elementHeight","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","sizeCheckerInterval","nextProps","nextState","needsUpdateData","needsUpdateFont","needsUpdateLayout","position","alignItems","justifyContent","visibility","textStyles","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","setInterval","clearInterval","themes","light","preDefinedColors","primaryColors","fontColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","property","value","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","target","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","TextFormat","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","FONT_FAMILIES","FontStyle","handleFontChange","handleSizeChange","font","round","CenterIcon","iconColor","LeftIcon","RightIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","leftSelected","centerSelected","rightSelected","currentIcon","handleLinkChange","list","getSlides","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","URL","handleURLChange","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","handleKeyPress","isTextBox","textEditor","tagName","getAttribute","ctrlKey","metaKey","handleDuplicateElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","element","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Resizer","keys","forEach","item","newElementsData","newElementStyles","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","handleSetCurrentElement","selectedItemKeys","filter","isSelected","rawHeight","rawWidth","rawX","rawY","elementKeys","currentElements","prevElements","removedElements","addedElements","updateElementDragPosition","handleElementDragEnd","handleSelect","FileOption","loadFile","fileName","onDoubleClick","handleDblClick","Navbar","handleOpenMenu","menuVisible","subMenu","saveToBrowser","applicationState","getState","stateToSave","boardName","localStorage","getItem","Date","getHours","getMinutes","setItem","JSON","stringify","saveToFile","a","createElement","file","Blob","href","createObjectURL","download","click","loadFileFromBrowser","dataToLoad","parse","handleUpdateElementsAndState","fileInput","accept","onchange","files","reader","FileReader","onload","result","readAsText","getSavedFromBrowser","deleteFile","deleteFileFromLocalStorage","saveToMonday","monday","mondaySdk","storage","instance","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","removeItem","newFile","mondaySaveAvailable","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","iconAnimation","iconFillColor","placeholder","defaultValue","organisation","match","companyName","objectClone","obj","clone","subPropertyKey","createNewObjectsForChangedElements","newData","patch","change","changePath","path","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","slidesNavStyles","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleZoom","dir","sign","deltaY","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","updatePointerPosition","dragHandlers","wasAccidentalMovement","handleMouseUp","interactionTime","wasProbablyClick","interactionMovement","onMouseDown","onMouseMove","onWheel","children","KeyboardManager","copy","cut","paste","shuntSelectedElements","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","colors","HOST","MultiUserManager","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","joinBoard","initializeBoard","shareEnded","owner","boardContents","emit","purgeEmitQueue","checkBoardForUpdates","error","console","log","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","handleTextEdit","shapeProps","overlay","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","isUniqueSelected","setTimeout","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","background","slideNumber","open","linkHitArea","Elements","elementNodes","fontStyles","Pattern","widthHeight","patternTransform","patternUnits","Board","elementData","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","clearCanvasAnimations","canvasAnimations","animation","clearTimeout","dontDeselect","handleDeselectAllElements","newElements","prevElementData","unScaledFontSize","newElementStateData","newSelectedElement","newDragHandlers","newHandlers","bind","newHeight","Number","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","getSelectedElements","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","coOrds","selectedCount","direction","pasteBuffer","calculateSelectedElementsBoundingBox","newX","newY","toLocaleDateString","multiUserUpdate","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","stepCount","valueIncrementX","valueIncrementY","sinValueIncrement","PI","currentValueX","currentValueY","currentSinValue","counter","sin","time","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","gridPosition","in","stdDeviation","ddx","dy","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanStart","handlePanMove","handlePanEnd","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.05461e2f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\"\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"postitSquare\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            postitRect : false,\n            postitSquare : false,\n            postitRectV : false,\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitSquare}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRect}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRectV}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"postit\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"postit\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"lineStraight\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            lineStraight : false,\n            lineSmooth : false,\n            lineFreehand : false,\n            lineStraightArrow : false,\n            lineSmoothArrow : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraight}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmooth}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraightArrow}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmoothArrow}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineFreehand}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Link extends Component {\n\n    handleLinkClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleLinkDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"link\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleLinkClick}\n                handleDragStart={this.handleLinkDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport Link from \"./link\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"slide\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            slide : false,\n            link : false,\n            pdf : false,\n            iframe : false,\n            youtube : false,\n            timer : false,\n            poll : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.slide}\n            />,\n            <Link\n                key={\"tool_link\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.link}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.pdf}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.youtube}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.timer}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.poll}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = () => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        const dontDeselectBoardElements = true;\n        this.props.handleToolSelect(\"pan\", dontDeselectBoardElements);\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onMouseUp={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : true\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24,\n        elementHeight : 0\n      };\n      this.sizeCheckerInterval = null;\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize*this.props.gridSpace.zoomLevel\n        });\n    }\n\n    sizeChecker = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            let newFontSize = 0;\n            newFontSize = (this.state.fontSize/3)*2;\n            this.setState({fontSize : newFontSize});\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            if(this.state.elementHeight !== this.textContainer.scrollHeight) {\n                this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n                this.setState({elementHeight : this.textContainer.scrollHeight});\n            }\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            data\n        } = nextProps;\n\n        const {\n            fontSize,\n            elementHeight\n        } = nextState;\n\n        const needsUpdateData = (data !== this.props.data);\n        const needsUpdateFont = (fontSize !== this.state.fontSize);\n        const needsUpdateLayout = (elementHeight !== this.state.elementHeight);\n\n        if(needsUpdateData || needsUpdateFont || needsUpdateLayout) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       const textStyles = {\n            fontSize : this.state.fontSize\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = this.state.elementHeight;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        if(data.fontStyle.textAlign) {\n            textStyles.textAlign = data.fontStyle.textAlign;\n            if(data.fontStyle.textAlign === \"left\") {\n                styles.justifyContent = \"flex-start\";\n            } else if (data.fontStyle.textAlign === \"right\") {\n                styles.justifyContent = \"flex-end\";\n            }\n        }\n        if(data.fontStyle.color) {\n            textStyles.color = data.fontStyle.color;\n        }\n\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={textStyles}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data && this.props.data.id) {\n            this.textInput.focus();\n            const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n            if(moveCaretToEnd && document.createRange) {\n                let range = document.createRange();\n                range.selectNodeContents(this.textInput);\n                range.collapse(false);\n                let selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            if(!prevProps.data || (this.props.data.id !== prevProps.data.id)) {\n                this.setState({\n                    fontSize :  this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel,\n                    elementHeight : this.props.data.styles.height/this.props.gridSpace.zoomLevel\n                });\n                this.sizeCheckerInterval = setInterval(this.sizeChecker, 100);\n            }\n            \n       } else {\n           clearInterval(this.sizeCheckerInterval);\n       }\n   }\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n    fontColors : [\n      \"#ffffff\", //white\n      \"#999\", //grey\n      \"#080808\" //text grey/black\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      property : \"predefinedColor\",\n      value : this.props.colorID\n    })\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"fill\" : color, fillOpacity : newFillOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, fillOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles.fill \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"stroke\" : color, strokeOpacity : newStrokeOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeWidth : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextFormat\";\n\nclass TextFormat extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontWeight\" : newFontWeight}\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontStyle\" : newFontStyle}\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text format\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextFormat;","import React, {Component} from 'react';\n\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleUpdateColor = (color) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"color\" : color} \n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          property : \"fontStyle\",\n          value : {...this.props.fontStyle, fontFamily : e.target.value}\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, fontSize : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        const theme = this.context;\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.fontColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('fontColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        min=\"0\"\n                        onChange={this.handleSizeChange}\n                        value={Math.round(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  FontStyle.contextType = ThemeContext;\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"left\"}\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"right\"}\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"center\"}\n      });\n    }\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n    \n    this.props.handleUpdateElementProperty({\n      property : \"link\",\n      value : e.target.value\n    });\n\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slideName, i) =>  <option value={`element://${slideName}`} key={`linkOption_${slideName}`}>Slide {(i+1)}</option>)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring to front\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send to back\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      \n      this.props.handleUpdateElementProperty({\n        property : \"imgURL\",\n        value : e.target.value\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.imgURL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport TextFormat from './editors/textFormat';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"textFormat\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textFormat\",  \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textFormat\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements[0].id;\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    \n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = multiElementEditableFeatures;\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textFormat':\n                    return <TextFormat \n                                key={`${selectedElements[0].id}_${button}`}\n                                fontStyle={selectedElements[0].fontStyle}\n                                initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                currentOpenSubMenu={this.state.currentOpenSubMenu}\n                            />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    imgURL={selectedElements[0].imgURL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    newElement.styles.width += e.movementX*currentState.zoomLevel;\n                    newElement.styles.height += e.movementX*currentState.zoomLevel;\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width + (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width + (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n           \n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component, PureComponent} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(this.props.fileName);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDblClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = window.localStorage.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    saveToFile = (e) => {\n        const applicationState = this.props.getState();\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(`miralFile_${fileName}`);\n        const dataToLoad = JSON.parse(file);\n        dataToLoad.boardName = fileName;\n        const state = Object.assign({}, this.props.applicationState, dataToLoad);\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.props.handleUpdateElementsAndState(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                        deleteFile={this.deleteFileFromLocalStorage}\n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const { applicationState } = this.props;\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n\n    deleteFileFromLocalStorage = () => {\n        const applicationState = this.props.getState();\n        const {\n            boardName \n        } = applicationState;\n\n        window.localStorage.removeItem(`miralFile_${boardName}`);\n        this.newFile();\n    }\n\n    newFile = () => {\n        const applicationState = this.props.getState();\n        const blankState = {\n            elements : {},\n            elementState : {},\n            boardName : \"newBoard\",\n            zoomLevel : 100,\n            offsetX : 0,\n            offsetY : 0\n        };\n        const state = Object.assign({}, applicationState, blankState);\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr.com</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.newFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M4.01 2L4 22h16V8l-6-6H4.01zM13 9V3.5L18.5 9H13z\"/>\n                                    </svg>\n                                    <span>New board</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToBrowser}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                    </svg>\n                                    <span>Save to Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.getSavedFromBrowser}\n                                >\n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                        <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                    </svg>\n                                    <span>Load from Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.deleteFileFromLocalStorage}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"/>\n                                    </svg>\n                                    <span>Delete board</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : -1\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n    } \n  \n    render() {\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n\n        return (\n            <div className={\"undoControls\"} style={slidesNavStyles}>\n                <span \n                    className={\"iconButton backward\"}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span>Slide {(this.state.currentSlide+1)} of {slides.length}</span>\n                <span \n                    className={\"iconButton forward\"}\n                    onClick={this.handleSlideForward}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\nimport SlideNavigator from './slideNavigator';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n\n                <SlideNavigator \n                    getSlides={this.props.getSlides}\n                    animateToElement={this.props.animateToElement}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + dir : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            elementID : e.target.id\n        });\n        //console.log(e.target);\n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            const dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            if(drag === \"mouseDown\" && !wasAccidentalMovement) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else \n            if(dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement) {\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -5 && interactionMovement < 5)\n    }\n\n    render() {\n\n        const styles={\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\"\n        }\n        \n        return (\n            <div\n                style={styles}\n\n                onMouseDown={this.handleMouseDown}\n                onMouseMove={this.handleMouseMove}\n                onMouseUp={this.handleMouseUp}\n                onWheel={this.handleZoom}\n                id=\"interActionManager\"\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Return to Miral</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isUniqueSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.imgURL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{data.slideName} {this.props.slideNumber}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Link extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleLinkClick = (e) => {\n        if(this.props.data.link.indexOf(\"element://\") !== -1) {\n            const element = this.props.data.link.split(\"://\")[1];\n            this.props.animateToElement(element, 1);\n        } else if (this.props.data.link.indexOf(\"http\") !== -1) {\n            window.open(this.props.data.link,'_blank');\n        }\n        \n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let shape = null;\n        let overlay = null;\n        let linkHitArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 20*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n        \n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        if(data.link) {\n            \n            linkHitArea = (<rect \n                height={shapeProps.height-strokeWidth}\n                width={shapeProps.width-strokeWidth}\n                x={shapeProps.x+(strokeWidth/2)}\n                y={shapeProps.y+(strokeWidth/2)}\n                fillOpacity={0}\n                onClick={this.handleLinkClick}\n                cursor={\"pointer\"}\n            />);\n\n        }\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {linkHitArea}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Link;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\nimport Link from './link';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            isUniqueSelected,\n            zoomLevel,\n            animateToElement\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    isUniqueSelected={isUniqueSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"link\") {\n                slides.push(element.id);\n                return (<Link\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                    animateToElement={animateToElement}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n\n\n\nclass Pattern extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    \n\n    render() {\n       \n        const widthHeight = 10*this.props.zoomLevel,\n              strokeWidth = 5*this.props.zoomLevel;\n\n        return (\n            <pattern id=\"diagonalHatch\" width={widthHeight} height={widthHeight} patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\">\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2={widthHeight} style={{stroke:\"#ccc\", strokeWidth: strokeWidth, strokeOpacity : 0.2 }} />\n            </pattern>\n        );\n    }\n    \n  }\n\n  export default Pattern;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone} from './utils';\n\n//SVG\nimport Pattern from './pattern';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        userID : Shortid.generate(),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        },\n      };\n      this.canvasAnimations = [];\n    }\n\n    handlePanStart(e, dragStartX, dragStartY) {\n        this.clearCanvasAnimations();\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove(e) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        //get element position\n\n        const elementData = elements[elementID];\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*zoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*zoomLevel)\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentSinValue = 0,\n            counter = 0;\n        \n        this.clearCanvasAnimations();\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, incrementDelay) {\n                this.canvasAnimations.push(setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                    });\n                }, incrementDelay));\n            }.bind(this)(currentValueX, currentValueY, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n    clearCanvasAnimations = () => {\n        this.canvasAnimations.forEach(animation => {\n            clearTimeout(animation);\n        });\n        this.canvasAnimations = [];\n    }\n\n  \n    handleToolSelect = (type, dontDeselect) => {\n        if(!dontDeselect) {\n            this.handleDeselectAllElements();\n        }\n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID)) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = {...this.state.elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newHeight  = Number(height)*this.state.zoomLevel;\n        if(this.state.elements[elementID].styles.height !== newHeight) {\n            const newElementsData = {...this.state.elements};\n            newElementsData[elementID] = {...newElementsData[elementID]};\n            newElementsData[elementID].styles = {...newElementsData[elementID].styles};\n            newElementsData[elementID].styles.height = newHeight;\n            this.setState({elements : newElementsData});\n        }\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement[data.property] = data.value;\n        newElementsData[data.id] = newElement;\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {},\n              newElementState = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(newIdsOrder.length, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(0, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n            newElementState[id] = this.state.elementState[id];\n        });\n        this.setState({\n            elementState : newElementState,\n            elements : newElementsData,\n            storeUndo : true\n        });\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID] = {...newElementsState[elementID]};\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        const newElements = {...elements};\n        const newElementsState = {...elementState};\n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const duplicatesOffsetMargin = 8;\n\n        const duplicatesOffsetPosition = {\n            x : selectedElements[0].styles.x,\n            x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n        };\n\n        //get position for new duplicate elements\n        selectedElements.forEach(element => {\n            if(element.styles.x < duplicatesOffsetPosition.x) {\n                duplicatesOffsetPosition.x = element.styles.x;\n            }\n            const elementX1 = element.styles.x + element.styles.width;\n            if(elementX1 > duplicatesOffsetPosition.x1) {\n                duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n            }\n        });\n\n        //duplicate elements & state\n        selectedElements.forEach(element => {\n            const newID = Shortid.generate();\n            const duplicateElement = objectClone(element);\n            const duplicateElementState = objectClone(elementState[element.id]);\n            duplicateElement.id = newID;\n            duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n            newElements[newID] = duplicateElement;\n            newElementsState[newID] = duplicateElementState;\n            //remove selected status for old items\n            newElementsState[element.id] = {...newElementsState[element.id]};\n            newElementsState[element.id].selected = false;\n        });\n\n        this.setState(\n            {\n                elementState : newElementsState,\n                elements : newElements\n            }\n        );\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        return elementState[elementID].selected === userID;\n    }\n\n    isUniqueSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        const isSelected = elementState[elementID].selected === userID;\n        let selectedCount = 0;\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedCount++;\n            }\n        });\n        const isUniqueSelcted = isSelected && selectedCount === 1;\n        return isUniqueSelcted;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return this.state;\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        return Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (pasteBuffer.boundingBox.rawX - element.styles.x);\n            const newY = pointerPosition.y + (pasteBuffer.boundingBox.rawY - element.styles.y);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n        })\n    }\n\n\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY);\n        const gridPosition = {\n            backgroundPosition : `${(offsetX*-1)/zoomLevel}px ${(offsetY*-1)/zoomLevel}px`\n        };\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <Pattern \n                                zoomLevel={zoomLevel}\n                            />\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                isUniqueSelected={this.isUniqueSelected}\n                                animateToElement={this.animateToElement}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <NavBar \n                            getState={this.getState}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        />\n                        <Altimeter zoomLevel={zoomLevel} />\n                        <BoardControls\n                            elements={this.state.elements}\n                            elementState={this.state.elementState}\n                            storeUndo={this.state.storeUndo}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            boardName={this.state.boardName}\n                            updateBoardName={this.updateBoardName}\n                            toggleBoardShare={this.toggleBoardShare}\n                            getSlides={this.getSlides}\n                            animateToElement={this.animateToElement}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <Tools\n                            handleToolSelect={this.handleToolSelect} \n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            currentSelectedTool={this.state.tool}\n                        />\n                    </InteractionManager>\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <MultiUserManager\n                        userID={this.state.userID} \n                        shareBoard={this.state.shareBoard}\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        multiUserUpdate={this.state.multiUserUpdate}\n                        pointerPosition={this.state.pointerPosition}\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                    />\n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}