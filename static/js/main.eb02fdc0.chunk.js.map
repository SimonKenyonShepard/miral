{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/link.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/textFormat/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/utils.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/slideNavigator.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/link/index.js","board/elements/youtube/index.js","board/elements/index.js","board/pattern.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","createElementBaseObject","id","initialZoomLevel","styles","width","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","alignItems","text","link","ShapeCircle","currentState","newState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","postitRect","postitSquare","postitRectV","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","push","shift","getUpdatedPointsBuffer","Line","lineStraight","lineSmooth","lineFreehand","lineStraightArrow","Image","presetWidthAndHeight","URL","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Slide","slideName","handleSlideClick","handleSlideDragStart","Link","handleLinkClick","handleLinkDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","More","slide","pdf","iframe","youtube","timer","poll","Toolbar","newStyles","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","console","log","target","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onMouseUp","PureComponent","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","gridSpace","sizeChecker","textContainer","scrollHeight","clientHeight","newFontSize","elementHeight","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","sizeCheckerInterval","nextProps","nextState","needsUpdateData","needsUpdateFont","needsUpdateLayout","position","justifyContent","visibility","textStyles","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","setInterval","clearInterval","themes","light","preDefinedColors","primaryColors","fontColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","property","value","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","TextFormat","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","FONT_FAMILIES","FontStyle","handleFontChange","handleSizeChange","font","round","CenterIcon","iconColor","LeftIcon","RightIcon","AlignTopIcon","AlignCenterIcon","AlignBottomIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","handleAlignTop","handleAlignCenter","handleAlignBottom","leftSelected","centerSelected","rightSelected","topAlignSelected","centerAlignSelected","bottomAlignSelected","currentIcon","handleLinkChange","list","getSlides","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","handleURLChange","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","handleKeyPress","isTextBox","textEditor","tagName","getAttribute","ctrlKey","metaKey","handleDuplicateElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","element","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Resizer","keys","forEach","item","newElementsData","calculateSelectedElementsBoundingBox","xPercentageIncrease","rawWidth","yPercentageIncrease","rawHeight","newElementStyles","relativeXOffset","rawX","relativeYOffset","rawY","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","handleSetCurrentElement","selectedItemKeys","filter","isSelected","elementKeys","currentElements","prevElements","removedElements","addedElements","updateElementDragPosition","handleElementDragEnd","handleSelect","FileOption","loadFile","fileName","onDoubleClick","handleDblClick","Navbar","handleOpenMenu","menuVisible","subMenu","autoSave","applicationState","getState","deselectElements","stateToSave","boardName","localStorage","setItem","JSON","stringify","removeItem","saveToBrowser","saveToFile","a","createElement","file","Blob","href","createObjectURL","download","click","loadFileFromBrowser","getItem","dataToLoad","parse","handleUpdateElementsAndState","fileInput","accept","onchange","files","reader","FileReader","onload","result","readAsText","getSavedFromBrowser","deleteFile","deleteFileFromLocalStorage","saveToMonday","monday","mondaySdk","storage","instance","Date","getHours","getMinutes","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","newFile","userConfirmation","confirm","blankState","toLocaleDateString","loadTemplatesAndTutorials","mondaySaveAvailable","newElementStateData","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","iconAnimation","iconFillColor","placeholder","defaultValue","organisation","match","companyName","objectClone","obj","clone","subPropertyKey","createNewObjectsForChangedElements","newData","patch","change","changePath","path","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","slidesNavStyles","slideBackwardsDisabled","slideForwardsDisabled","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleZoom","dir","sign","deltaY","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","updatePointerPosition","dragHandlers","wasAccidentalMovement","handleMouseUp","interactionTime","wasProbablyClick","interactionMovement","onMouseDown","onMouseMove","onWheel","children","KeyboardManager","copy","cut","paste","shuntSelectedElements","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","colors","HOST","MultiUserManager","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","joinBoard","initializeBoard","shareEnded","owner","boardContents","emit","purgeEmitQueue","checkBoardForUpdates","error","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","handleTextEdit","shapeProps","overlay","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","isUniqueSelected","setTimeout","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","background","slideNumber","realURL","loadRemoteBoard","open","linkHitArea","checkFocus","activeElement","currentFocus","disableInteraction","handlePlayIntent","iframePointerEvents","contentWindow","hitArea","playArea","iframeOpacity","src","frameBorder","allow","transformOrigin","Elements","elementNodes","fontStyles","Pattern","widthHeight","patternTransform","patternUnits","Board","elementData","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","clearCanvasAnimations","canvasAnimations","animation","clearTimeout","dontDeselect","handleDeselectAllElements","newElements","prevElementData","unScaledFontSize","newSelectedElement","newDragHandlers","newHandlers","bind","newHeight","Number","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","getSelectedElements","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","coOrds","selectedCount","direction","pasteBuffer","newX","newY","fetch","resp","json","catch","multiUserUpdate","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","stepCount","valueIncrementX","valueIncrementY","sinValueIncrement","PI","currentValueX","currentValueY","currentSinValue","counter","sin","time","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","backgroundGridSize","gridSizeMax","gridPosition","in","stdDeviation","ddx","dy","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanStart","handlePanMove","handlePanEnd","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.eb02fdc0.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\",\n            alignItems : \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\"\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"postitSquare\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            postitRect : false,\n            postitSquare : false,\n            postitRectV : false,\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitSquare}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRect}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRectV}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"postit\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"postit\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"lineStraight\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            lineStraight : false,\n            lineSmooth : false,\n            lineFreehand : false,\n            lineStraightArrow : false,\n            lineSmoothArrow : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraight}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmooth}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraightArrow}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmoothArrow}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineFreehand}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Link extends Component {\n\n    handleLinkClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleLinkDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"link\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleLinkClick}\n                handleDragStart={this.handleLinkDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport Link from \"./link\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"slide\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            slide : false,\n            link : false,\n            pdf : false,\n            iframe : false,\n            youtube : false,\n            timer : false,\n            poll : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.slide}\n            />,\n            <Link\n                key={\"tool_link\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.link}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.pdf}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.youtube}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.timer}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.poll}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = (e) => {\n        console.log(\"handleDrawCanvasHide\", e.target);\n        if(this.state.drawCanvasVisible) {\n            console.log(\"handleDrawCanvasHide if\");\n            const resetSelectArea = {\n                selectAreaVisible : false,\n                selectAreaPosition : {\n                    x : 0,\n                    y : 0,\n                    width : 0,\n                    height : 0,\n                }\n            };\n            const resetDrawCanvas = {\n                drawCanvasVisible : false\n            };\n            this.props.removeDragHandler(\"drawCanvas\");\n            const dontDeselectBoardElements = true;\n            this.props.handleToolSelect(\"pan\", dontDeselectBoardElements);\n            this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n        }\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onMouseUp={this.handleDrawCanvasHide}\n                    //onPointerOut={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : false\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24,\n        elementHeight : 0\n      };\n      this.sizeCheckerInterval = null;\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize*this.props.gridSpace.zoomLevel\n        });\n    }\n\n    sizeChecker = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n        //TODO : HOW TO FIGURE OUT IF THE TEXT GOT SHORTER AGAIN & INCREASE FONT SIZE\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            let newFontSize = 0;\n            newFontSize = (this.state.fontSize/3)*2;\n            this.setState({fontSize : newFontSize});\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            if(this.state.elementHeight !== this.textContainer.scrollHeight) {\n                this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n                this.setState({elementHeight : this.textContainer.scrollHeight});\n            }\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            data\n        } = nextProps;\n\n        const {\n            fontSize,\n            elementHeight\n        } = nextState;\n\n        const needsUpdateData = (data !== this.props.data);\n        const needsUpdateFont = (fontSize !== this.state.fontSize);\n        const needsUpdateLayout = (elementHeight !== this.state.elementHeight);\n\n        if(needsUpdateData || needsUpdateFont || needsUpdateLayout) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       const textStyles = {\n            fontSize : this.state.fontSize\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = this.state.elementHeight;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        if(data.fontStyle.textAlign) {\n            textStyles.textAlign = data.fontStyle.textAlign;\n            if(data.fontStyle.textAlign === \"left\") {\n                styles.justifyContent = \"flex-start\";\n            } else if (data.fontStyle.textAlign === \"right\") {\n                styles.justifyContent = \"flex-end\";\n            }\n        }\n\n        //TOTEST : text aligns correctly\n        if(data.fontStyle.alignItems) {\n            textStyles.alignItems = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                styles.alignItems = \"flex-start\";\n            } else if (data.fontStyle.alignItems === \"bottom\") {\n                styles.alignItems = \"flex-end\";\n            }\n        }\n        if(data.fontStyle.color) {\n            textStyles.color = data.fontStyle.color;\n        }\n\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={textStyles}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data && this.props.data.id) {\n            this.textInput.focus();\n            const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n            if(moveCaretToEnd && document.createRange) {\n                let range = document.createRange();\n                range.selectNodeContents(this.textInput);\n                range.collapse(false);\n                let selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            if(!prevProps.data || (this.props.data.id !== prevProps.data.id)) {\n                this.setState({\n                    fontSize :  this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel,\n                    elementHeight : this.props.data.styles.height/this.props.gridSpace.zoomLevel\n                });\n                this.sizeCheckerInterval = setInterval(this.sizeChecker, 100);\n            }\n            \n       } else {\n           clearInterval(this.sizeCheckerInterval);\n       }\n   }\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n    fontColors : [\n      \"#ffffff\", //white\n      \"#999\", //grey\n      \"#080808\" //text grey/black\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      property : \"predefinedColor\",\n      value : this.props.colorID\n    })\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"fill\" : color, fillOpacity : newFillOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, fillOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles.fill \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"stroke\" : color, strokeOpacity : newStrokeOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeWidth : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextFormat\";\n\nclass TextFormat extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontWeight\" : newFontWeight}\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontStyle\" : newFontStyle}\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text format\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextFormat;","import React, {Component} from 'react';\n\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleUpdateColor = (color) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"color\" : color} \n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          property : \"fontStyle\",\n          value : {...this.props.fontStyle, fontFamily : e.target.value}\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, fontSize : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        const theme = this.context;\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.fontColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('fontColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        min=\"0\"\n                        onChange={this.handleSizeChange}\n                        value={Math.round(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  FontStyle.contextType = ThemeContext;\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction AlignTopIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignCenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignBottomIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"left\"}\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"right\"}\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"center\"}\n      });\n    }\n\n    handleAlignTop = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"alignItems\" : \"top\"}\n      });\n    }\n\n    handleAlignCenter = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"alignItems\" : \"center\"}\n      });\n    }\n\n    handleAlignBottom = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"alignItems\" : \"bottom\"}\n      });\n    }\n\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null,\n            topAlignSelected = (this.props.fontStyle.alignItems === \"top\") ? \"selected\" : null,\n            centerAlignSelected = (this.props.fontStyle.alignItems === \"center\") ? \"selected\" : null,\n            bottomAlignSelected = (this.props.fontStyle.alignItems === \"bottom\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${topAlignSelected}`} onClick={this.handleAlignTop}>\n                      <AlignTopIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerAlignSelected}`} onClick={this.handleAlignCenter}>\n                      <AlignCenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${bottomAlignSelected}`} onClick={this.handleAlignBottom}>\n                      <AlignBottomIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n    \n    this.props.handleUpdateElementProperty({\n      property : \"link\",\n      value : e.target.value\n    });\n\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slideName, i) =>  <option value={`element://${slideName}`} key={`linkOption_${slideName}`}>Slide {(i+1)}</option>)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring to front\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send to back\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      \n      this.props.handleUpdateElementProperty({\n        property : \"URL\",\n        value : e.target.value\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.URL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport TextFormat from './editors/textFormat';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"textFormat\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textFormat\",  \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textFormat\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"lock\", \"delete\", \"menu\"],\n    \"youtube\" : [\"url\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements[0].id;\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    \n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = multiElementEditableFeatures;\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textFormat':\n                    return <TextFormat \n                                key={`${selectedElements[0].id}_${button}`}\n                                fontStyle={selectedElements[0].fontStyle}\n                                initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                currentOpenSubMenu={this.state.currentOpenSubMenu}\n                            />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    URL={selectedElements[0].URL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, currentState.zoomLevel, currentState.offsetX, currentState.offsetY);\n                const xPercentageIncrease = (boundingBox.rawWidth + (e.movementX*currentState.zoomLevel))/boundingBox.rawWidth,\n                      yPercentageIncrease = (boundingBox.rawHeight + (e.movementY*currentState.zoomLevel))/boundingBox.rawHeight;\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    //TOTEST : Multi-selected elements resize correctly \n                    newElement.styles.width *= xPercentageIncrease;\n                    newElement.styles.height *= yPercentageIncrease;\n                    const relativeXOffset = newElement.styles.x-boundingBox.rawX,\n                          relativeYOffset = newElement.styles.y-boundingBox.rawY;\n\n                    newElement.styles.x = (newElement.styles.x-relativeXOffset)+(relativeXOffset*xPercentageIncrease);\n                    newElement.styles.y = (newElement.styles.y-relativeYOffset)+(relativeYOffset*yPercentageIncrease);\n\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width + (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                //TOTEST : Fixed ratio elements resize correctly \n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width + (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                //TOTEST : Single elements resize correctly\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n           \n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component, PureComponent} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(`miralFile_${this.props.fileName}`);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDblClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\nconst autosave_fileName = `miral_autoSave`;\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n\n    deselectElements(elementState) {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(item.selected !== false) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n\n    autoSave = () => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        if(Object.keys(applicationState.elements).length > 0) {\n            const stateToSave = {\n                elements : applicationState.elements,\n                elementState : applicationState.elementState,\n                boardName : applicationState.boardName,\n                zoomLevel : applicationState.zoomLevel,\n                offsetX : applicationState.offsetX,\n                offsetY : applicationState.offsetY\n            };\n            window.localStorage.setItem(autosave_fileName, JSON.stringify(stateToSave));\n        } else {\n            window.localStorage.removeItem(autosave_fileName);\n        }\n       \n        \n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        \n        let fileName = `miralFile_${applicationState.boardName}`;\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    saveToFile = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(fileName);\n        const dataToLoad = JSON.parse(file);\n        const state = Object.assign({}, this.props.applicationState, dataToLoad);\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.props.handleUpdateElementsAndState(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                        deleteFile={this.deleteFileFromLocalStorage}\n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n\n    deleteFileFromLocalStorage = () => {\n        const applicationState = this.props.getState();\n        const {\n            boardName \n        } = applicationState;\n\n        window.localStorage.removeItem(`miralFile_${boardName}`);\n        this.newFile();\n    }\n\n    newFile = () => {\n        //TODO write robust mechanism to determine whether file has changed.\n        const checkWillLoseChanges = window.localStorage.getItem(autosave_fileName);\n        let userConfirmation = true;\n        if(checkWillLoseChanges) {\n            userConfirmation = window.confirm(\"All changes in current board will be lost, are you sure?\");\n        }\n        if(userConfirmation) {\n            const applicationState = this.props.getState();\n            const blankState = {\n                elements : {},\n                elementState : {},\n                boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n                zoomLevel : 100,\n                offsetX : 0,\n                offsetY : 0\n            };\n            const state = Object.assign({}, applicationState, blankState);\n            this.props.handleUpdateElementsAndState(state);\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        }\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.props.loadTemplatesAndTutorials();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr.com</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.newFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M4.01 2L4 22h16V8l-6-6H4.01zM13 9V3.5L18.5 9H13z\"/>\n                                    </svg>\n                                    <span>New board</span>\n                                </div>\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                {(!mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToBrowser}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                                <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                            </svg>\n                                            <span>Save to Browser</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromBrowser}\n                                        >\n                                            <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                                <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                            </svg>\n                                            <span>Load from Browser</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.deleteFileFromLocalStorage}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"/>\n                                    </svg>\n                                    <span>Delete board</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadTemplatesAndTutorials}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 8v12H2V10h20zm-6 6l-6-3.27v6.53L16 16z\"/>\n                                    </svg>\n                                    <span>Templates &amp; Guides</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        //enable monday.com save options & disable browser save\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n        //load previous autosave\n        const checkIfAlreadyExists = window.localStorage.getItem(autosave_fileName);\n        if(checkIfAlreadyExists) {\n            this.loadFileFromBrowser(autosave_fileName);\n        }\n        //start autosave\n        //setInterval(this.autoSave, 5000);\n\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : 0\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        \n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n    } \n  \n    render() {\n\n        const {\n            currentSlide\n        } = this.state;\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n        //TOTEST : Buttons are disabled when user cannot go to next slide\n        let slideBackwardsDisabled = \"buttonDisabled\";\n        if(currentSlide !== 0) {\n            slideBackwardsDisabled = \"\";\n        }\n\n        let slideForwardsDisabled = \"buttonDisabled\";\n        if(currentSlide < slides.length-1) {\n            slideForwardsDisabled = \"\";\n        }\n\n        return (\n            <div className={\"undoControls\"} style={slidesNavStyles}>\n                <span \n                    className={`iconButton backward ${slideBackwardsDisabled}`}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span>Slide {(this.state.currentSlide+1)} of {slides.length}</span>\n                <span \n                    className={`iconButton forward ${slideForwardsDisabled}`}\n                    onClick={this.handleSlideForward}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\nimport SlideNavigator from './slideNavigator';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n\n                <SlideNavigator \n                    getSlides={this.props.getSlides}\n                    animateToElement={this.props.animateToElement}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + dir : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            elementID : e.target.id\n        });\n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            const dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            if(drag === \"mouseDown\" && !wasAccidentalMovement) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else \n            if(dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement) {\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -5 && interactionMovement < 5)\n    }\n\n    render() {\n\n        const styles={\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\"\n        }\n        \n        return (\n            <div\n                style={styles}\n\n                onMouseDown={this.handleMouseDown}\n                onMouseMove={this.handleMouseMove}\n                onMouseUp={this.handleMouseUp}\n                onWheel={this.handleZoom}\n                id=\"interActionManager\"\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mouseleave\", (e) => {\n            const {\n                drag\n            } = this.state;\n            if(drag === \"mouseDown\" || drag === \"dragging\") {\n                //this.handleMouseUp(e); TODO Figure out how to do this while still keeping toolbar happy.\n            }\n        });\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Return to Miral</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            let textAlign = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                textAlign = \"flex-start\";\n            } else if(data.fontStyle.alignItems === \"bottom\") {\n                textAlign = \"flex-end\";\n            }\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                        style={{\n                            alignItems : textAlign\n                        }}\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            let textAlign = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                textAlign = \"flex-start\";\n            } else if(data.fontStyle.alignItems === \"bottom\") {\n                textAlign = \"flex-end\";\n            }\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                        style={{\n                            alignItems : textAlign\n                        }}\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isUniqueSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.URL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{data.slideName} {this.props.slideNumber}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Link extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleLinkClick = (e) => {\n        if(this.props.data.link.indexOf(\"element://\") !== -1) {\n            const element = this.props.data.link.split(\"://\")[1];\n            this.props.animateToElement(element, 1);\n        } else if (this.props.data.link.indexOf(\"wswb\") !== -1) {\n            const realURL = this.props.data.link.replace(/wswb/, \"http\");\n            this.props.loadRemoteBoard(realURL);\n        } else if (this.props.data.link.indexOf(\"http\") !== -1) {\n            window.open(this.props.data.link,'_blank');\n        }\n        \n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let shape = null;\n        let overlay = null;\n        let linkHitArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 15*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n        \n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        if(data.link) {\n            \n            linkHitArea = (<rect \n                height={shapeProps.height-strokeWidth}\n                width={shapeProps.width-strokeWidth}\n                x={shapeProps.x+(strokeWidth/2)}\n                y={shapeProps.y+(strokeWidth/2)}\n                fillOpacity={0}\n                onClick={this.handleLinkClick}\n                cursor={\"pointer\"}\n            />);\n\n        }\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {linkHitArea}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Link;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Youtube extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n          iframePointerEvents : \"none\"\n      };\n      this.iframe = null;\n      this.currentFocus = null;\n    }\n\n    checkFocus = () => {\n        if(document.activeElement.title !== this.currentFocus) {\n          this.disableInteraction();\n        } else {\n            setTimeout(this.checkFocus, 1000);\n        }\n      }\n\n    handlePlayIntent = () => {\n        this.setState({iframePointerEvents : \"auto\"});\n        this.iframe.contentWindow.focus();\n        this.currentFocus = document.activeElement.title;\n        setTimeout(this.checkFocus, 1000);\n    }\n\n    disableInteraction = () => {\n        this.setState({iframePointerEvents : \"none\"});\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let iframe = null;\n        let overlay = null;\n        let hitArea = null;\n        let playArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 20*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n\n        let iframeOpacity = 1;\n        if(this.state.iframePointerEvents === \"none\") {\n            iframeOpacity = 0.6;\n        }\n        \n        iframe = \n            <foreignObject\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n                fill=\"#000\"\n                pointerEvents={this.state.iframePointerEvents}\n\n            >\n                <iframe\n                    title={\"youtubeVideo\"+data.id}\n                    width={(shapeProps.width/data.initialZoomLevel)}\n                    height={(shapeProps.height/data.initialZoomLevel)} \n                    src={data.URL} \n                    frameBorder=\"0\" \n                    allow=\"clipboard-write; encrypted-media; picture-in-picture\"\n                    style={{\n                        transform : `scale(${data.initialZoomLevel})`,\n                        transformOrigin : \"top\",\n                        opacity: iframeOpacity\n                    }}\n                    ref={(container) => { this.iframe = container; }}\n                />\n            \n            </foreignObject>;\n            \n        hitArea = (<rect\n            id={data.id} \n            x={shapeProps.x}\n            y={shapeProps.y}\n            height={shapeProps.height}\n            width={shapeProps.width}\n            fillOpacity={0}\n        />);\n\n        if(this.state.iframePointerEvents === \"none\") {\n            playArea = (\n                <rect\n                    x={(shapeProps.x+(shapeProps.width/2)-(68*data.initialZoomLevel)/2)}\n                    y={(shapeProps.y+(shapeProps.height/2)-(48*data.initialZoomLevel)/2)}\n                    height={(48*data.initialZoomLevel)}\n                    width={(68*data.initialZoomLevel)}\n                    fillOpacity={0}\n                    cursor={\"pointer\"}\n                    onClick={this.handlePlayIntent}\n                />\n            );\n        }\n        \n\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {hitArea}\n                {iframe}\n                {playArea}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\nimport Link from './link';\nimport Youtube from './youtube';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            isUniqueSelected,\n            zoomLevel,\n            animateToElement,\n            loadRemoteBoard\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    isUniqueSelected={isUniqueSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"link\") {\n                slides.push(element.id);\n                return (<Link\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                    animateToElement={animateToElement}\n                    loadRemoteBoard={loadRemoteBoard}\n                />);\n            } else if (element.type === \"youtube\") {\n                return (<Youtube\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n\n\n\nclass Pattern extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    \n\n    render() {\n       \n        const widthHeight = 10*this.props.zoomLevel,\n              strokeWidth = 5*this.props.zoomLevel;\n\n        return (\n            <pattern id=\"diagonalHatch\" width={widthHeight} height={widthHeight} patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\">\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2={widthHeight} style={{stroke:\"#ccc\", strokeWidth: strokeWidth, strokeOpacity : 0.2 }} />\n            </pattern>\n        );\n    }\n    \n  }\n\n  export default Pattern;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone} from './utils';\n\n//SVG\nimport Pattern from './pattern';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        boardID : Shortid.generate(),\n        userID : Shortid.generate(),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        },\n      };\n      this.canvasAnimations = [];\n    }\n\n    handlePanStart(e, dragStartX, dragStartY) {\n        this.clearCanvasAnimations();\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove(e) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        //get element position\n\n        const elementData = elements[elementID];\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*zoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*zoomLevel)\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentSinValue = 0,\n            counter = 0;\n        \n        this.clearCanvasAnimations();\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, incrementDelay) {\n                this.canvasAnimations.push(setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                    });\n                }, incrementDelay));\n            }.bind(this)(currentValueX, currentValueY, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n    clearCanvasAnimations = () => {\n        this.canvasAnimations.forEach(animation => {\n            clearTimeout(animation);\n        });\n        this.canvasAnimations = [];\n    }\n\n  \n    handleToolSelect = (type, dontDeselect) => {\n        if(!dontDeselect) {\n            this.handleDeselectAllElements();\n        }\n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID)) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = {...this.state.elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newHeight  = Number(height)*this.state.zoomLevel;\n        if(this.state.elements[elementID].styles.height !== newHeight) {\n            const newElementsData = {...this.state.elements};\n            newElementsData[elementID] = {...newElementsData[elementID]};\n            newElementsData[elementID].styles = {...newElementsData[elementID].styles};\n            newElementsData[elementID].styles.height = newHeight;\n            this.setState({elements : newElementsData});\n        }\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement[data.property] = data.value;\n        newElementsData[data.id] = newElement;\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {},\n              newElementState = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(newIdsOrder.length, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(0, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n            newElementState[id] = this.state.elementState[id];\n        });\n        this.setState({\n            elementState : newElementState,\n            elements : newElementsData,\n            storeUndo : true\n        });\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID] = {...newElementsState[elementID]};\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        //TOTEST : nothing happens when no elements selected\n        if(selectedElements.length) { \n            const newElements = {...elements};\n            const newElementsState = {...elementState};\n            const duplicatesOffsetMargin = 8;\n\n            const duplicatesOffsetPosition = {\n                x : selectedElements[0].styles.x,\n                x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n            };\n\n            //get position for new duplicate elements\n            selectedElements.forEach(element => {\n                if(element.styles.x < duplicatesOffsetPosition.x) {\n                    duplicatesOffsetPosition.x = element.styles.x;\n                }\n                const elementX1 = element.styles.x + element.styles.width;\n                if(elementX1 > duplicatesOffsetPosition.x1) {\n                    duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n                }\n            });\n\n            //duplicate elements & state\n            selectedElements.forEach(element => {\n                const newID = Shortid.generate();\n                const duplicateElement = objectClone(element);\n                const duplicateElementState = objectClone(elementState[element.id]);\n                duplicateElement.id = newID;\n                duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n                newElements[newID] = duplicateElement;\n                newElementsState[newID] = duplicateElementState;\n                //remove selected status for old items\n                newElementsState[element.id] = {...newElementsState[element.id]};\n                newElementsState[element.id].selected = false;\n            });\n\n            this.setState(\n                {\n                    elementState : newElementsState,\n                    elements : newElements\n                }\n            );\n        }\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        return elementState[elementID].selected === userID;\n    }\n\n    isUniqueSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        const isSelected = elementState[elementID].selected === userID;\n        let selectedCount = 0;\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedCount++;\n            }\n        });\n        const isUniqueSelcted = isSelected && selectedCount === 1;\n        return isUniqueSelcted;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return {...this.state};\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        return Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (pasteBuffer.boundingBox.rawX - element.styles.x);\n            const newY = pointerPosition.y + (pasteBuffer.boundingBox.rawY - element.styles.y);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n        })\n    }\n\n    loadRemoteBoard = (url) => {\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => {\n                const newState = Object.assign({}, this.state, data);\n                this.setState(newState);\n            })\n            .catch(e => console.log(e));\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.loadRemoteBoard(\"https://raw.githubusercontent.com/SimonKenyonShepard/miral_templates/main/whiteboardFile_splashScreen.wswb\");\n    }\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY);\n        const gridSizeMin = 24,\n              gridSizeMax = 96;\n        const gridRange = gridSizeMax-gridSizeMin;\n        const percentageGridSize = (zoomLevel-(Math.floor(zoomLevel/100)*100))/100;\n        const backgroundGridSize = gridSizeMax-(gridRange*percentageGridSize);\n        const gridPosition = {\n            backgroundPosition : `${(offsetX*-1)/zoomLevel}px ${(offsetY*-1)/zoomLevel}px`,\n            backgroundSize : `${backgroundGridSize}px ${backgroundGridSize}px`\n        };\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <Pattern \n                                zoomLevel={zoomLevel}\n                            />\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                isUniqueSelected={this.isUniqueSelected}\n                                animateToElement={this.animateToElement}\n                                loadRemoteBoard={this.loadRemoteBoard}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <NavBar \n                            getState={this.getState}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            loadTemplatesAndTutorials={this.loadTemplatesAndTutorials}\n                        />\n                        <Altimeter zoomLevel={zoomLevel} />\n                        <BoardControls\n                            elements={this.state.elements}\n                            elementState={this.state.elementState}\n                            storeUndo={this.state.storeUndo}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            boardName={this.state.boardName}\n                            updateBoardName={this.updateBoardName}\n                            toggleBoardShare={this.toggleBoardShare}\n                            getSlides={this.getSlides}\n                            animateToElement={this.animateToElement}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <Tools\n                            handleToolSelect={this.handleToolSelect} \n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            currentSelectedTool={this.state.tool}\n                        />\n                    </InteractionManager>\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <MultiUserManager\n                        userID={this.state.userID} \n                        shareBoard={this.state.shareBoard}\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        multiUserUpdate={this.state.multiUserUpdate}\n                        pointerPosition={this.state.pointerPosition}\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                    />\n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        const isNotFirstUse = window.localStorage.getItem(\"miral_isFirstUse\");\n        if(!isNotFirstUse) {\n            this.loadTemplatesAndTutorials();\n            window.localStorage.setItem(\"miral_isFirstUse\", true);\n        }\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}