{"version":3,"sources":["board/context/tools.js","board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/emoji.js","board/ui/tools/toolbar/emojis.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/link.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/tools/drawCanvas.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/textFormat/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/editors/elementVisibility/index.js","board/ui/elementEditor/editors/elementGroup/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/utils.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/ui/slideNavigator/index.js","board/elements/shared/visibilityOverlay.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/link/index.js","board/elements/youtube/index.js","board/elements/emoji/index.js","board/elements/index.js","board/pattern.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","tool","currentOpenSubMenu","autoActivate","previousSelectedTools","selectAreaVisible","selectAreaPosition","x","y","width","height","store","createContext","Provider","ToolsProvider","Consumer","children","useReducer","state","action","newState","type","data","subMenu","defaultTool","Error","dispatch","value","Tool","props","context","handleToolSelect","e","handleDeselectAllElements","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","content","Component","contextType","Select","handleSelectStart","dragStartX","dragStartY","movementX","movementY","setState","x1","y1","handleSelectMove","selectionAreaCoords","positionUpdate","Object","assign","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","handleDrawCanvasShow","MultiTool","handleToggleSubMenu","stopPropagation","toolSubMenuOpen","submenuCSS","subMenuItems","subMenuItemColumns","counter","columnCounter","forEach","item","push","toolbarIcon","noIconChange","map","column","i","key","createElementBaseObject","id","initialZoomLevel","styles","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","alignItems","text","link","hidden","groups","ShapeCircle","currentState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","subMenuType","subMenuTools","handleSetCurrentOpenSubMenu","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","shift","getUpdatedPointsBuffer","Line","Emoji","presetWidthAndHeight","emojiCharacterCode","window","workshoppr","emojiCharacter","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Emojis","String","fromCodePoint","toString","target","emojiEntity","uglyHack","Image","URL","Slide","slideName","handleSlideClick","handleSlideDragStart","Link","handleLinkClick","handleLinkDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","More","Toolbar","openSubMenu","newStyles","multiplier","handleShowSelectionArea","handleUpdateSelectionArea","handleElementDragMove","prevProps","prevState","Tools","PureComponent","DrawCanvas","handleDrawCanvasHide","drawCanvasVisible","selectAreaStyle","display","transform","drawCanvasStyles","style","onPointerUp","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","newText","textInput","innerText","textContent","trim","gridSpace","sizeChecker","textContainer","scrollHeight","clientHeight","newFontSize","elementHeight","handleSetElementHeight","handlePaste","event","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","sizeCheckerInterval","nextProps","nextState","needsUpdateData","needsUpdateFont","needsUpdateLayout","position","justifyContent","visibility","textStyles","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","line","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","setInterval","clearInterval","themes","light","preDefinedColors","primaryColors","fontColors","dark","ThemeContext","React","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","update","colorID","backgroundColor","PredefinedColorPicker","handleOpenSubMenu","subMenuOpen","theme","selectedColor","fillColor","title","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","TextFormat","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","FONT_FAMILIES","FontStyle","handleFontChange","handleSizeChange","font","round","CenterIcon","iconColor","LeftIcon","RightIcon","AlignTopIcon","AlignCenterIcon","AlignBottomIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","handleAlignTop","handleAlignCenter","handleAlignBottom","leftSelected","centerSelected","rightSelected","topAlignSelected","centerAlignSelected","bottomAlignSelected","currentIcon","handleLinkChange","list","getSlides","slide","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","handleURLChange","ElementVisibility","isHidden","ElementGroup","areElementsAlreadyGrouped","areGrouped","lastGroup","element","handleToggleGroup","remove","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","handleKeyPress","isTextBox","textEditor","tagName","getAttribute","ctrlKey","metaKey","handleDuplicateElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","areAllShapes","unshift","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Guides","hideGuides","leftGuideVisible","rightGuideVisible","topGuideVisible","bottomGuideVisible","hideGuidesTimeout","leftGuideStyles","rightGuideStyles","topGuideStyles","bottomGuideStyles","movingRight","movingLeft","resizingWidth","movingUp","movingDown","resizingHeight","clearTimeout","setTimeout","keys","Resizer","newElementsData","calculateSelectedElementsBoundingBox","xPercentageIncrease","rawWidth","yPercentageIncrease","rawHeight","newElementStyles","relativeXOffset","rawX","relativeYOffset","rawY","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","handleSetCurrentElement","console","log","selectedElementIds","getSelectedElements","selectedItemKeys","filter","isSelected","elementKeys","currentElements","prevElements","removedElements","addedElements","handleElementDragStart","updateElementDragPosition","handleElementDragEnd","handleSelect","FileOption","loadFile","fileName","onDoubleClick","handleDblClick","Navbar","handleOpenMenu","menuVisible","autoSave","applicationState","getState","deselectElements","stateToSave","boardName","localStorage","setItem","JSON","stringify","removeItem","saveToBrowser","saveToFile","a","createElement","file","Blob","href","createObjectURL","download","click","loadFileFromBrowser","getItem","dataToLoad","parse","handleUpdateElementsAndState","fileInput","accept","onchange","files","reader","FileReader","onload","result","readAsText","getSavedFromBrowser","deleteFile","deleteFileFromLocalStorage","saveToMonday","monday","mondaySdk","storage","instance","Date","getHours","getMinutes","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","newFile","userConfirmation","confirm","blankState","toLocaleDateString","loadTemplatesAndTutorials","mondaySaveAvailable","newElementStateData","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","handleJoinBoard","joinBoard","organisation","iconAnimation","iconFillColor","placeholder","defaultValue","match","companyName","objectClone","obj","clone","subPropertyKey","Array","isArray","concat","createNewObjectsForChangedElements","newData","patch","change","changePath","path","isObjectAndNotNull","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleMouseWheel","handleZoom","simulatedPanEvent","deltaX","deltaY","handlePanMove","dir","sign","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","SAFARIHACK_SCREENX","screenX","SAFARIHACK_SCREENY","screenY","updatePointerPosition","dragHandlers","wasAccidentalMovement","wasStartOfDrag","wasMiddleOfDrag","handleMouseUp","interactionTime","wasProbablyClick","containerElement","interactionMovement","touchAction","onPointerDown","onPointerMove","passive","KeyboardManager","copy","cut","paste","shuntSelectedElements","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","cancelJoinCreds","colors","HOST","MultiUserManager","getJoinCreds","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","initializeBoard","shareEnded","owner","boardContents","emit","purgeEmitQueue","checkBoardForUpdates","error","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","SlideListItem","handleToggleEditMode","editMode","handleJumpToSlide","slideID","slideNumber","handleSlideNameChange","changeSlideName","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","toggleSlideList","slideNav","slidesNavStyles","slideBackwardsDisabled","slideForwardsDisabled","slideNavVisible","slideNavIcon","slideNames","VisibilityOverlay","shapeProps","iconSize","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","handleTextEdit","overlay","outlineWidth","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","outline","isUniqueSelected","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","background","slideTitle","realURL","loadRemoteBoard","open","linkHitArea","checkFocus","activeElement","currentFocus","disableInteraction","handlePlayIntent","iframePointerEvents","iframe","contentWindow","hitArea","playArea","iframeOpacity","youtubeURL","exec","src","frameBorder","allow","allowFullScreen","transformOrigin","emoji","dy","textLength","userSelect","Elements","elementNodes","fontStyles","Pattern","widthHeight","patternTransform","patternUnits","Board","handlePanStart","clearCanvasAnimations","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","heightZoomLevel","widthZoomLevel","elementData","elementHeightInReal","elementWidthInReal","finalZoomLevel","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","canvasAnimations","animation","newElements","prevElementData","unScaledFontSize","selectGroupedElements","group","groupedElement","newSelectedElement","newDragHandlers","newHandlers","bind","newHeight","Number","mergeObjects","primaryObject","mergeObject","mergedObject","removeData","itemToRemove","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","duplicatesOffsetPosition","elementX1","newDuplicateElements","duplicateElement","duplicateElementState","allPreviousGroupIDs","newDuplicateElement","oldGroup","newGroups","newGroupID","newBoardName","coOrds","selectedCount","slideKey","newName","newSlideElement","direction","pasteBuffer","newX","newY","fetch","resp","json","catch","multiUserUpdate","stepCount","valueIncrementX","valueIncrementY","valueIncrementZoom","sinValueIncrement","PI","currentValueX","currentValueY","currentZoomLevel","currentSinValue","sin","time","newZoomLevel","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","percentageGridSize","backgroundGridSize","gridSizeMax","backgroundPositionY","gridPosition","in","stdDeviation","ddx","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanEnd","App","handleWindowResize","innerWidth","innerHeight","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"08BAEMA,EAAe,CACnBC,KAAO,KACPC,mBAAqB,KACrBC,aAAe,KACfC,sBAAwB,GACxBC,mBAAoB,EACpBC,mBAAqB,CACnBC,EAAI,EACJC,EAAI,EACJC,MAAQ,EACRC,OAAS,IAIPC,EAAQC,wBAAcZ,GACpBa,EAAuBF,EAAvBE,SAEFC,GAFyBH,EAAbI,SAEI,SAAC,GAAoB,IAAjBC,EAAgB,EAAhBA,SAAgB,EACdC,sBAAW,SAACC,EAAOC,GAC3C,IAAMC,EAAQ,eAAOF,GACrB,OAAOC,EAAOE,MACZ,IAAK,eAKH,OAJAD,EAASnB,KAAOkB,EAAOG,KAAKrB,KACzBiB,EAAMhB,qBACPkB,EAAShB,sBAAsBc,EAAMhB,oBAAsBiB,EAAOG,KAAKrB,MAElEmB,EACT,IAAK,kBAOH,OANAA,EAASlB,mBAAqBiB,EAAOG,KAAKC,QACvCH,EAAShB,sBAAsBgB,EAASlB,qBAA+C,OAAxBiB,EAAOG,KAAKC,QAC5EH,EAASjB,aAAeiB,EAAShB,sBAAsBgB,EAASlB,oBACvDiB,EAAOG,KAAKE,cACrBJ,EAASjB,aAAegB,EAAOG,KAAKE,aAE/BJ,EACT,IAAK,eAIH,OAHAA,EAASnB,KAAO,KAChBmB,EAASlB,mBAAqB,KAC9BkB,EAASjB,aAAe,KACjBiB,EACT,IAAK,oBAEH,OADAA,EAASjB,aAAe,KACjBiB,EACT,IAAK,qBAGH,OAFAA,EAASf,mBAAoB,EAC7Be,EAASd,mBAAqBa,EAAOG,KAAKhB,mBACnCc,EACT,IAAK,mBAEH,OADAA,EAASd,mBAAqBa,EAAOG,KAAKhB,mBACnCc,EACT,IAAK,kBAGH,OAFAA,EAASf,mBAAoB,EAC7Be,EAASd,mBAAqBN,EAAaM,mBACpCc,EACT,QACE,MAAM,IAAIK,SArCoB,eAuC7BzB,IAxCiC,mBACjCkB,EADiC,KAC1BQ,EAD0B,KA0CxC,OAAO,kBAACb,EAAD,CAAUc,MAAO,CAAET,QAAOQ,aAAaV,KCxD1CY,G,uDAEF,WAAYC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAIjBC,iBAAmB,SAACC,GAChB,EAAKF,QAAQJ,SAAS,CAACL,KAAO,eAAgBC,KAAO,CAACrB,KAAO,EAAK4B,MAAMR,QACxE,EAAKQ,MAAMI,4BACX,EAAKJ,MAAMK,oBAAoB,aAAc,CACzC,iBAAqB,EAAKL,MAAMM,gBAChC,gBAAoB,EAAKN,MAAMO,eAC/B,eAAmB,EAAKP,MAAMQ,cAC9B,aAAiB,EAAKR,MAAMS,eAVhC,EAAKpB,MAAQ,GAFW,E,0CAgB5B,WAAU,IAAD,EAKDqB,KAAKV,MAFLW,EAHC,EAGDA,oBAIAC,EAAgB,GAMpB,OAbK,EAIDpB,OAKQmB,IACRC,EAAgB,yBAIhB,yBACIC,UAAS,+BAA0BH,KAAKV,MAAMR,KAArC,YAA6CoB,GACtDE,QAASJ,KAAKR,kBACfQ,KAAKV,MAAMe,SAAW,Q,gCAIjC,WAEOL,KAAKT,QAAQZ,MAAMf,eAAiBoC,KAAKV,MAAMR,OAC9CkB,KAAKR,mBACLQ,KAAKT,QAAQJ,SAAS,CAACL,KAAO,2B,GA3CvBwB,cAmDjBjB,EAAKkB,YAAcnC,EAEJiB,QCnDXmB,E,kDAEF,WAAYlB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IASjBkB,kBAAoB,SAAChB,EAAGiB,EAAYC,GAChC,EAAKpB,QAAQJ,SACT,CACIL,KAAO,qBACPC,KAAO,CACHhB,mBAAqB,CACjBC,EAAI0C,EACJzC,EAAI0C,EACJzC,MAAQuB,EAAEmB,UACVzC,OAASsB,EAAEoB,cAM3B,EAAKC,SAAS,CACV9C,EAAI0C,EACJzC,EAAI0C,EACJI,GAAKL,EACLM,GAAKL,KA7Be,EAiC5BM,iBAAmB,SAACxB,GAEhB,IAAMyB,EAAsB,CACxBlD,EAAI,EAAKW,MAAMX,EACfC,EAAI,EAAKU,MAAMV,EACf8C,GAAK,EAAKpC,MAAMoC,GAAGtB,EAAEmB,UACrBI,GAAK,EAAKrC,MAAMqC,GAAGvB,EAAEoB,WAGnBM,EAAiB,CACnBjD,MAAQgD,EAAoBH,GAAGG,EAAoBlD,EACnDG,OAAS+C,EAAoBF,GAAGE,EAAoBjD,GAGrDiD,EAAoBlD,EAAIkD,EAAoBH,KAC3CI,EAAenD,EAAIkD,EAAoBH,GACvCI,EAAejD,MAAQgD,EAAoBlD,EAAEkD,EAAoBH,IAGlEG,EAAoBjD,EAAIiD,EAAoBF,KAC3CG,EAAelD,EAAIiD,EAAoBF,GACvCG,EAAehD,OAAS+C,EAAoBjD,EAAEiD,EAAoBF,IAGtE,EAAKzB,QAAQJ,SACT,CACIL,KAAO,mBACPC,KAAO,CACHhB,mBAAqBqD,OAAOC,OAAO,GAAI,EAAK9B,QAAQZ,MAAMZ,mBAAoBoD,MAK1F,EAAKL,SAASI,IAlEU,EAqE5BI,gBAAkB,SAAC7B,GAAO,IAAD,EAMjB,EAAKd,MAJLX,EAFiB,EAEjBA,EACAC,EAHiB,EAGjBA,EACA8C,EAJiB,EAIjBA,GACAC,EALiB,EAKjBA,GAEEO,EAAgB,CAClBvD,IACAC,IACA8C,KACAC,MAEDhD,EAAI+C,IACHQ,EAAcvD,EAAI+C,EAClBQ,EAAcR,GAAK/C,GAEpBC,EAAI+C,IACHO,EAActD,EAAI+C,EAClBO,EAAcP,GAAK/C,GAEvB,EAAKqB,MAAMkC,+BAA+BD,EAAcvD,EAAGuD,EAActD,EAAGsD,EAAcR,GAAIQ,EAAcP,IAC5G,EAAKzB,QAAQJ,SACT,CACIL,KAAO,qBA3Ff,EAAKH,MAAQ,CACXX,EAAI,EACJC,EAAI,EACJ8C,GAAK,EACLC,GAAK,GANiB,E,0CAkG5B,WAAU,IAAD,EAMDhB,KAAKV,MAJLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAM,EALC,EAKDA,oBAGJ,OACI,kBAAC,EAAD,CAAMnB,KAAK,SACPY,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBC,gBAAiBI,KAAKS,kBACtBZ,eAAgBG,KAAKiB,iBACrBnB,cAAeE,KAAKsB,gBACpBrB,oBAAqBA,Q,GApHhBK,aA2HnBE,EAAOD,YAAcnC,EAENoC,QC/HXkB,E,kDAEF,WAAYpC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAMjBoC,oBAAsB,SAAClC,GACnBA,EAAEmC,kBAGE,EAAKjD,MADLkD,iBAKA,EAAKf,SAAS,CACVe,iBAAkB,IAEtB,EAAKtC,QAAQJ,SACT,CACIL,KAAO,kBACPC,KAAO,CACHC,QAAU,UAOtB,EAAK8B,SAAS,CACVe,iBAAkB,IAGtB,EAAKtC,QAAQJ,SACT,CACIL,KAAO,kBACPC,KAAO,CACHC,QAAU,EAAKM,MAAMR,KACrBG,YAAc,EAAKK,MAAML,iBApCzC,EAAKN,MAAQ,CACTkD,iBAAkB,GAHE,E,0CA+C5B,WAEI,IAAIC,EAAU,0CAAsC9B,KAAKV,MAAMR,MAC5DkB,KAAKrB,MAAMkD,iBAAmB7B,KAAKV,MAAMyC,eAC1CD,GAAc,sBAGhB,IACME,EAAqB,CAAC,IACxBC,EAAU,EACVC,EAAgB,EACpBlC,KAAKV,MAAMyC,aAAaI,SAAQ,SAACC,GAC1BH,EALiB,GAMhBD,EAAmBE,GAAeG,KAAKD,GACvCH,MAEAA,EAAU,EACVC,IACAF,EAAmBE,GAAiB,GACpCF,EAAmBE,GAAeG,KAAKD,GACvCH,QAIR,IAAIK,EAAW,kBAActC,KAAKV,MAAMR,MAMxC,OAJGkB,KAAKT,QAAQZ,MAAMd,sBAAsBmC,KAAKV,MAAMR,QAAUkB,KAAKV,MAAMiD,eACxED,EAAW,kBAActC,KAAKT,QAAQZ,MAAMd,sBAAsBmC,KAAKV,MAAMR,QAI7E,yBACIqB,UAAS,uBAAkBmC,GAC3BlC,QAASJ,KAAK2B,qBAEd,yBAAKxB,UAAW2B,GACZ,yBAAK3B,UAAW,cAChB,yBAAKA,UAAW,mCAEZ6B,EAAmBQ,KAAI,SAACC,EAAQC,GAAT,OACnB,yBAAKvC,UAAU,yBAAyBwC,IAAG,yBAAoBD,IAC1DD,EAAOD,KAAI,SAAAJ,GAAI,OAAIA,c,gCAUhD,WACgCpC,KAAKT,QAAQZ,MAAMhB,qBAAuBqC,KAAKV,MAAMR,MACvDkB,KAAKrB,MAAMkD,iBACjC7B,KAAKc,SAAS,CAACe,iBAAkB,Q,GAvGrBvB,aA6GtBoB,EAAUnB,YAAcnC,EAETsD,Q,gBCpHV,SAASkB,EAAwBC,EAAI/D,EAAMgE,GAC9C,MAAO,CACHD,KACA/D,OACAiE,OAAS,CACL/E,EAAI,EACJC,EAAI,EACJC,MAAQ,EACRC,OAAQ,EACR6E,YAAa,EACbC,KAAM,UACNC,OAAS,UACTC,cAAgB,EAChBC,YAAc,EAAEN,EAChBO,gBAAkB,KAEtBC,UAAY,CACRC,SAAW,GAAGT,EACdU,WAAa,GACbC,WAAa,SACbH,UAAY,SACZI,mBAAqB,GACrBC,MAAQ,UACRC,UAAW,SACXC,WAAa,UAEjBC,KAAO,GACPhB,mBACAiB,KAAO,GACPC,QAAS,EACTC,OAAS,I,ICgEAC,E,sKAnFb,SAAiBzE,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAWE,WAAa,OACxBF,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAUC,GAAeV,EAAaK,UAC7GC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAUD,GAAeV,EAAaK,UAC7GC,EAAW1B,OAAO7E,MATE,IASkBiG,EAAaK,UACnDC,EAAW1B,OAAO5E,OAVE,IAUmBgG,EAAaK,UAEpD3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,GAC5C,IAAMiG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAEtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAWE,WAAa,OACxBF,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASD,EAAMiG,EAAaK,UAE9C3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAGJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,cACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA7EJ0C,aCoFTiF,E,sKAnFb,SAAiB9F,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,IAASiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,GAAUgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MATJ,IASkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OATH,IASmBgG,EAAaK,UAE/C3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAEtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAE/C3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,YACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA7EN0C,aCwGPkF,E,sKArGb,SAAiB/F,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,GAASiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,GAAUgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MATJ,IASkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OATH,IASmBgG,EAAaK,UAE/C3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WACtB1F,EAASuF,SAASC,GAAS,CACvBxB,GAAKwB,EACLvF,KAAO,QACP4F,UAAY,EACZ3B,OAAS,CACL/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACrD3G,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACrD5G,MAAQA,EAAMiG,EAAaK,UAC3BrG,OAAQA,EAAOgG,EAAaK,UAC5BxB,YAAa,EACbC,KAAM,UACNC,OAAS,UACTC,cAAgB,EAChBC,YAAc,EAAEe,EAAaK,UAC7BnB,gBAAkB,KAEtBC,UAAY,CACRC,SAAW,GAAGY,EAAaK,UAC3BhB,WAAa,GACbC,WAAa,SACbH,UAAY,SACZI,mBAAqB,GACrBC,MAAQ,UACRC,UAAW,UAEfE,KAAO,GACPhB,iBAAmBqB,EAAaK,WAEpC3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,gBACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA/FF0C,aCCtBmF,E,kDAEF,WAAYnG,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,GAEb,EAAK+G,YAAc,QAJK,E,0CAO5B,WAAU,IAAD,EAQD1F,KAAKV,MANLmC,EAFC,EAEDA,qBACA9B,EAHC,EAGDA,oBACAE,EAJC,EAIDA,eACAC,EALC,EAKDA,cACAG,EANC,EAMDA,oBACAP,EAPC,EAODA,0BAGEiG,EAAe,CACjB,kBAAC,EAAD,CACIhD,IAAK,iBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,mBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAGzB,kBAAC,EAAD,CACI0C,IAAK,qBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,KAI7B,OAEI,kBAAC,EAAD,CACInB,KAAMkB,KAAK0F,YACX3D,aAAc4D,EACdC,4BAA6B5F,KAAKV,MAAMsG,4BACxC3G,YAAa,kB,GAxDTqB,aAgElBmF,EAAMlF,YAAcnC,EAELqH,QCgCAI,E,uKAjGb,SAAkBpG,EAAGiB,EAAYC,GAC7B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,SAAUF,EAAaK,WAEjF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWqB,QAAU,SACrBrB,EAAWE,WAAa,OACxBF,EAAWsB,gBAAkB,EAC7BtB,EAAWuB,cAAe,EAE1BvB,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAUqB,GAAkB9B,EAAaK,UAChHC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAUmB,GAAkB9B,EAAaK,UAChHC,EAAW1B,OAAO7E,MAZK,IAYkBiG,EAAaK,UACtDC,EAAW1B,OAAO5E,OAbK,IAamBgG,EAAaK,UACvDC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAI5BpG,EAASkG,aAAaV,GAAOK,UAAYwB,KAAKC,MAAM,EAAAD,KAAKE,UAF/C,EAIVvH,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,mCAGlB,SAAsBY,EAAGiB,EAAYC,GACjC,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,SAAUF,EAAaK,WAEjF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWqB,QAAU,SACrBrB,EAAWE,WAAa,OACxBF,EAAWsB,gBAAkB,EAC7BtB,EAAWuB,cAAe,EAE1BvB,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAVhD,IAUwET,EAAaK,UAC5GC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAXhD,IAWwEX,EAAaK,UAC5GC,EAAW1B,OAAO7E,MAZK,IAYkBiG,EAAaK,UACtDC,EAAW1B,OAAO5E,OAbK,IAamBgG,EAAaK,UACvDC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAI5BpG,EAASkG,aAAaV,GAAOK,UAAYwB,KAAKC,MAAM,EAAAD,KAAKE,UAF/C,EAGVvH,EAASqG,WAAY,EACrBrG,EAASuG,kBAAoBf,EAC7BrE,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAG,EAPC,EAODA,oBACArC,EARC,EAQDA,aAGJ,OACI,kBAAC,EAAD,CAAMkB,KAAK,eACPY,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqG,kBAClBzG,gBAAiBI,KAAKsG,sBACtBzG,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,EACrBrC,aAAcA,Q,GA5FH0C,aCqGViG,E,uKAnGb,SAAkB9G,EAAGiB,EAAYC,GAC7B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,SAAUF,EAAaK,WAEjF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWqB,QAAU,OACrBrB,EAAWsB,gBAAkB,EAC7BtB,EAAWE,WAAa,OACxBF,EAAWuB,cAAe,EAE1BvB,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,IAASiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,GAAUgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MAZJ,IAYkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAdH,IAcmBgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAI5BpG,EAASkG,aAAaV,GAAOK,UAAYwB,KAAKC,MAAM,EAAAD,KAAKE,UAF/C,EAIVvH,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,mCAGlB,SAAsBY,EAAGiB,EAAYC,GACjC,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAKtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,SAAUF,EAAaK,WAEjF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWqB,QAAU,OACrBrB,EAAWsB,gBAAkB,EAC7BtB,EAAWE,WAAa,OACxBF,EAAWuB,cAAe,EAE1BvB,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAVzD,IAUwET,EAAaK,UACnGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAZxD,IAYwEX,EAAaK,UACpGC,EAAW1B,OAAO7E,MAZJ,IAYkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAdH,IAcmBgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAI5BpG,EAASkG,aAAaV,GAAOK,UAAYwB,KAAKC,MAAM,EAAAD,KAAKE,UAF/C,EAGVvH,EAASqG,WAAY,EACrBrG,EAASuG,kBAAoBf,EAC7BrE,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAG,EAPC,EAODA,oBACArC,EARC,EAQDA,aAGJ,OACI,kBAAC,EAAD,CAAMkB,KAAK,aACPY,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqG,kBAClBzG,gBAAiBI,KAAKsG,sBACtBzG,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,EACrBrC,aAAcA,Q,GA9FL0C,aCoGRkG,E,uKAlGb,SAAkB/G,EAAGiB,EAAYC,GAC7B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,SAAUF,EAAaK,WAEjF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWqB,QAAU,QACrBrB,EAAWsB,gBAAkB,EAC7BtB,EAAWE,WAAa,OACxBF,EAAWuB,cAAe,EAE1BvB,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,GAASiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,IAAUgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MAZL,IAYmBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAdH,IAcmBgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAI5BpG,EAASkG,aAAaV,GAAOK,UAAYwB,KAAKC,MAAM,EAAAD,KAAKE,UAF/C,EAGVvH,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,mCAGlB,SAAsBY,EAAGiB,EAAYC,GACjC,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAKtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,SAAUF,EAAaK,WAEjF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWqB,QAAU,QACrBrB,EAAWsB,gBAAkB,EAC7BtB,EAAWE,WAAa,OACxBF,EAAWuB,cAAe,EAE1BvB,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAV1D,IAUyET,EAAaK,UACnGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAZxD,IAYwEX,EAAaK,UACpGC,EAAW1B,OAAO7E,MAZL,IAYmBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAdH,IAcmBgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAI5BpG,EAASkG,aAAaV,GAAOK,UAAYwB,KAAKC,MAAM,EAAAD,KAAKE,UAF/C,EAGVvH,EAASqG,WAAY,EACrBrG,EAASuG,kBAAoBf,EAC7BrE,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAG,EAPC,EAODA,oBACArC,EARC,EAQDA,aAGJ,OACI,kBAAC,EAAD,CAAMkB,KAAK,cACPY,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqG,kBAClBzG,gBAAiBI,KAAKsG,sBACtBzG,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,EACrBrC,aAAcA,Q,GA7FJ0C,aCCpBmG,E,kDAEF,WAAYnH,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,GACb,EAAK+G,YAAc,SAHK,E,0CAM5B,WAAU,IAAD,EAQD1F,KAAKV,MANLmC,EAFC,EAEDA,qBACA9B,EAHC,EAGDA,oBACAE,EAJC,EAIDA,eACAC,EALC,EAKDA,cACAG,EANC,EAMDA,oBACAP,EAPC,EAODA,0BAGEiG,EAAe,CACjB,kBAAC,EAAD,CACIhD,IAAK,oBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,kBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAGzB,kBAAC,EAAD,CACI0C,IAAK,mBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,KAK7B,OAEI,kBAAC,EAAD,CACInB,KAAMkB,KAAK0F,YACX3D,aAAc4D,EACd1G,YAAa,qB,GAvDRqB,aA+DnBmG,EAAOlG,YAAcnC,EAENqI,QCcAC,E,qKA/Eb,SAAgBjH,EAAGiB,EAAYC,GAC3B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAOtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAUC,IAAeV,EAAaK,UAC7GC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QARtD,GACE,IAO2E,EAAGX,EAAaK,UAC9GC,EAAW1B,OAAO7E,MAVE,IAUkBiG,EAAaK,UACnDC,EAAW1B,OAAO5E,OAVD,GACE,IASqBgG,EAAaK,UACrDC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBsC,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,iCAGlB,SAAoBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GAClD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAEtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,EAAM,EAAGiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,EAAO,EAAGgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BrE,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EAQDmB,KAAKV,MANLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAG,EAPC,EAODA,oBAGJ,OACI,kBAAC,EAAD,CAAMnB,KAAK,OACPY,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAK2G,gBAClB/G,gBAAiBI,KAAK4G,oBACtB/G,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,Q,GA1ElBK,aCsFFuG,E,sKAnFb,SAAiBpH,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAE7D3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAE7D3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,eACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA7EH0C,aCqFVmF,E,sKAnFb,SAAiBhG,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAE7D3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAE7D3F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,aACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA7EV0C,aCuFHwG,E,sKArFb,SAAiBrH,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAC7DC,EAAW1B,OAAOgE,UAAY,cAE9BlI,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAC7DC,EAAW1B,OAAOgE,UAAY,cAE9BlI,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,oBACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA/EE0C,aCuFf0G,E,sKArFb,SAAiBvH,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAC7DC,EAAW1B,OAAOgE,UAAY,cAE9BlI,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAP1C,IAOwEX,EAAaK,UAClHC,EAAW1B,OAAO7E,MARW,IAQkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OATW,IASmBgG,EAAaK,UAC7DC,EAAW1B,OAAOgE,UAAY,cAE9BlI,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,kBACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA/EA0C,aC4JbmF,E,0KA1Jb,SAAqBhG,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAChB0C,EAAYvG,EAAWyD,EAAaK,UAAWL,EAAaS,QAC5DsC,EAAYvG,EAAWwD,EAAaK,UAAWL,EAAaW,QAElEjG,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAIiJ,EACtBxC,EAAW1B,OAAO9E,EAAIiJ,EACtBzC,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAW1B,OAAOK,YAAce,EAAaK,UAC7CC,EAAW1B,OAAOoE,EAAI,GAEtBtI,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,OACxBmC,WAAa,GACbC,eAAiB,EACjBC,YAAW,YAAQL,EAAR,YAAoBC,IAEnCrI,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,4BAGlB,SAAeY,GAEX,IA2CI8H,EAAkB,SAASC,EAAQC,EAAQJ,GAC3C,IAAIK,EAAMD,EAAOE,OACjB,GAAID,EAAM,IAAM,GAAKA,GAAOL,EAAgB,CACxC,IAEIO,EAAIlF,EAFJmF,EAAS,EACTC,EAAS,EAETC,EAAQ,EACZ,IAAKrF,EAAI8E,EAAQ9E,EAAIgF,EAAKhF,IACtBqF,IAEAF,IADAD,EAAKH,EAAO/E,IACC1E,EACb8J,GAAUF,EAAG3J,EAEjB,MAAO,CACHD,EAAG6J,EAASE,EACZ9J,EAAG6J,EAASC,GAGpB,OAAO,MAGL5D,EAAenE,KAAKrB,MACpBE,EAAW,GACjB,GAAsC,OAAnCsF,EAAaiB,kBAA4B,CACxC,IAAM4C,EAAe,eAAO7D,EAAaC,UACrC6D,EAAe,eAAO9D,EAAaY,cACvCiD,EAAgB7D,EAAaiB,mBAAmBrC,OAAhD,eAA6DiF,EAAgB7D,EAAaiB,mBAAmBrC,QAI7G,IAIMmF,EAxDc,SAASZ,EAAaG,EAAQJ,GAClD,IAAIO,EAAKL,EAAgB,EAAGE,EAAQJ,GAChCc,EAAU,GAEd,GAAIP,EAAI,CAEJN,GAAe,KAAOM,EAAG5J,EAAI,IAAM4J,EAAG3J,EAKtC,IAAK,IAAIuJ,EAAS,EAAGA,EAASC,EAAOE,OAAQH,GAAU,EAEnDW,GAAW,MADXP,EAAKL,EAAgBC,EAAQC,EAAQJ,IAChBrJ,EAAI,IAAM4J,EAAG3J,EAG1C,MAAO,CACHqJ,cACAa,WAsCYC,EANhBH,EAvEyB,SAASxI,EAAG0E,EAAc8D,GAAkB,IAEjEzD,EAIAL,EAJAK,UACAI,EAGAT,EAHAS,QACAE,EAEAX,EAFAW,QAIEuD,EAAsBJ,EAFxB9D,EADAiB,mBAKEpH,EAAKyB,EAAE6I,QAAQ9D,EAAWI,EAC1B3G,EAAKwB,EAAE8I,QAAQ/D,EAAWM,EAIhC,IAFAuD,EAAoBjB,WAAW/E,KAAK,CAAErE,IAAGC,MAElCoK,EAAoBjB,WAAWO,OAASU,EAAoBhB,gBAC/DgB,EAAoBjB,WAAWoB,QAEnC,OAAOP,EAqDWQ,CAAuBhJ,EAAG0E,EAAc8D,IAEtB9D,EAAaiB,mBAAmBkC,YAE1CW,EAAgB9D,EAAaiB,mBAAmBgC,WACnDa,EAAgB9D,EAAaiB,mBAAmBiC,gBAGvEW,EAAgB7D,EAAaiB,mBAAmBrC,OAAOoE,EAAIe,EAAQZ,YAAYY,EAAQC,QACvFF,EAAgB9D,EAAaiB,mBAAmBkC,YAAcY,EAAQZ,YAEtEzI,EAASuF,SAAW4D,EACpBnJ,EAASkG,aAAekD,EAE5BjI,KAAKc,SAASjC,K,2BAGlB,WACI,IAAMA,EAAW,CACjBA,KAAgB,OAChBmB,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EAODmB,KAAKV,MALLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACA/B,EALC,EAKDA,aACAqC,EANC,EAMDA,oBAGJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,eACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBC,gBAAiBI,KAAKsF,qBACtBzF,eAAgBG,KAAKH,eACrBC,cAAeE,KAAKF,cACpBlC,aAAcA,Q,GApJV0C,aCGdoI,E,kDAEF,WAAYpJ,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,GACb,EAAK+G,YAAc,OAHK,E,0CAM5B,WAAU,IAAD,EAQD1F,KAAKV,MANLmC,EAFC,EAEDA,qBACA9B,EAHC,EAGDA,oBACAE,EAJC,EAIDA,eACAC,EALC,EAKDA,cACAG,EANC,EAMDA,oBACAP,EAPC,EAODA,0BAGEiG,EAAe,CACjB,kBAAC,EAAD,CACIhD,IAAK,oBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,kBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAGzB,kBAAC,EAAD,CACI0C,IAAK,yBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,uBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAGzB,kBAAC,EAAD,CACI0C,IAAK,oBACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,KAI7B,OAEI,kBAAC,EAAD,CACInB,KAAMkB,KAAK0F,YACX3D,aAAc4D,EACd1G,YAAa,qB,GAzEVqB,aAiFjBoI,EAAKnI,YAAcnC,EAEJsK,QCMAC,E,sKA1Fb,SAAiBlJ,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAUgE,GAAwBzE,EAAaK,UACtHC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU8D,GAAwBzE,EAAaK,UACtHC,EAAW1B,OAAO7E,MAPW,GAOkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OARW,GAQmBgG,EAAaK,UAC7DC,EAAW1B,OAAOI,cAAgB,EAClCsB,EAAWoE,mBAAqBC,OAAOC,WAAWC,eAClDvE,EAAWE,WAAa,OAExB9F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASoK,iBAAmB,KAC5BpK,EAASqK,gBAAkB,KAC3BrK,EAASsK,eAAiB,KAC1BtK,EAASuK,aAAe,KACxBvK,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WACtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAClCsB,EAAWoE,mBAAqBC,OAAOC,WAAWC,eAClDvE,EAAWE,WAAa,OAExB9F,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EAWDmB,KAAKV,MATL0J,EAFC,EAEDA,eACAH,EAHC,EAGDA,mBACAnJ,EAJC,EAIDA,0BACA+B,EALC,EAKDA,qBACA9B,EANC,EAMDA,oBACAE,EAPC,EAODA,eACAC,EARC,EAQDA,cACAlC,EATC,EASDA,aACAqC,EAVC,EAUDA,oBAGJ,OAEI,kBAAC,EAAD,CAAMnB,KAAM,SAAS+J,EACjBxI,QAAS2I,EACTtJ,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GApFV0C,aCDd+I,E,kDAEF,WAAY/J,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,GAEb,EAAK+G,YAAc,QACfoD,OAAOC,aACPD,OAAOC,WAAa,IAExBD,OAAOC,WAAWC,eAAiBM,OAAOC,cAAeD,OAAO,UAAUE,SAAS,KAR3D,E,4CAW5B,SAAS/J,GAELqJ,OAAOC,WAAWC,eAAiBM,OAAOC,cAAeD,OAAO7J,EAAEgK,OAAO5G,IAAI2G,SAAS,O,oBAG1F,WAAU,IAAD,SAQDxJ,KAAKV,MANLmC,EAFC,EAEDA,qBACA9B,EAHC,EAGDA,oBACAE,EAJC,EAIDA,eACAC,EALC,EAKDA,cACAG,EANC,EAMDA,oBACAP,EAPC,EAODA,0BAKEiG,EAAe,GAuBrB,MAzBknFxD,SAAQ,SAAAnE,GACd,IAAM0L,EAAcJ,OAAOC,cAAeD,OAAOtL,GAAGwL,SAAS,KAC3D7D,EAAatD,KACX,kBAAC,EAAD,CACI2G,eACA,0BAAM7I,UAAW,iBAAkB0C,GAAI7E,EAAGoC,QAAS,EAAKuJ,UACnDD,GAGLb,mBAAoBa,EACpB/G,IAAK,cAAc3E,EACnB0B,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,QAO7B,kBAAC,EAAD,CACInB,KAAMkB,KAAK0F,YACX3D,aAAc4D,EACd1G,YAAa,qBACbsD,cAAc,Q,GA3DTjC,aAmEnB+I,EAAO9I,YAAcnC,EAENiL,QCoBAO,E,sKAtFb,SAAiBnK,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAGtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAUgE,GAAwBzE,EAAaK,UACtHC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU8D,GAAwBzE,EAAaK,UACtHC,EAAW1B,OAAO7E,MAPW,IAOkBiG,EAAaK,UAC5DC,EAAW1B,OAAO5E,OARW,IAQmBgG,EAAaK,UAC7DC,EAAW1B,OAAOI,cAAgB,EAClCsB,EAAWoF,IAAM,wCAEjBhL,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASoK,iBAAmB,KAC5BpK,EAASqK,gBAAkB,KAC3BrK,EAASsK,eAAiB,KAC1BtK,EAASuK,aAAe,KACxBvK,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WACtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAClCsB,EAAWoF,IAAM,wCAEjBhL,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,QACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GAhFV0C,aC2FHwJ,E,sKAzFb,SAAiBrK,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAUzG,IAAUgG,EAAaK,UACxGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU5G,IAASiG,EAAaK,UACvGC,EAAW1B,OAAO7E,MAPJ,IAOkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OATH,IASmBgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAClCsB,EAAW1B,OAAOE,KAAO,UACzBwB,EAAWsF,UAAY,UAEvBlL,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASoK,iBAAmB,KAC5BpK,EAASqK,gBAAkB,KAC3BrK,EAASsK,eAAiB,KAC1BtK,EAASuK,aAAe,KACxBvK,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WACtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,QAASF,EAAaK,WAEhF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAClCsB,EAAW1B,OAAOE,KAAO,UACzBwB,EAAWsF,UAAY,UAEvBlL,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,QACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKgK,iBAClBpK,gBAAiBI,KAAKiK,qBACtBpK,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GAnFV0C,aCsFH4J,E,qKArFb,SAAgBzK,EAAGiB,EAAYC,GAC3B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,IAASiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,GAAUgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MATJ,IASkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OATH,IASmBgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,iCAGlB,SAAoBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GAClD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAEtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,OAAQF,EAAaK,WAE/E,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAWC,UAAY,EACvBD,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAW1B,OAAOI,cAAgB,EAElCtE,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,OACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKmK,gBAClBvK,gBAAiBI,KAAKoK,oBACtBvK,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA/EX0C,aCwGF+J,E,sKAvGb,SAAiB5K,EAAGiB,EAAYC,GAC5B2J,MAAM,iI,kCAuCV,SAAqB7K,EAAGiB,EAAYC,EAAYzC,EAAOC,M,oBAgCvD,WAAU,IAAD,EASD6B,KAAKV,MAPLE,EAFC,EAEDA,iBACAiC,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,MACPU,iBAAkBA,EAClBS,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GAjGZ0C,aCyGDiK,E,sKAvGb,SAAiB9K,EAAGiB,EAAYC,GAC5B2J,MAAM,iI,kCAuCV,SAAqB7K,EAAGiB,EAAYC,EAAYzC,EAAOC,M,oBAgCvD,WAAU,IAAD,EASD6B,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,SACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GAjGT0C,aCuFJkK,E,sKAnFb,SAAiB/K,EAAGiB,EAAYC,GAC5B,IAAMwD,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAItB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,UAAWF,EAAaK,WAElF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QAAU1G,IAASiG,EAAaK,UACvGC,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QAAU3G,GAAUgG,EAAaK,UACxGC,EAAW1B,OAAO7E,MARJ,IAQkBiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OARH,IAQmBgG,EAAaK,UAC/CC,EAAWoF,IAAM,4CAEjBhL,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAG5BpG,EAASnB,KAAO,MAChBmB,EAASqG,WAAY,EACrBlF,KAAKmF,kBAAkB,cACvBnF,KAAKc,SAASjC,K,kCAGlB,SAAqBY,EAAGiB,EAAYC,EAAYzC,EAAOC,GACnD,IAAMgG,EAAenE,KAAKrB,MACpBE,EAAW,GACjBA,EAASuF,SAAT,eAAwBD,EAAaC,UACrC,IAAMC,EAAQC,IAAQC,WAEtB1F,EAASuF,SAASC,GAASzB,EAAwByB,EAAO,UAAWF,EAAaK,WAElF,IAAMC,EAAa5F,EAASuF,SAASC,GACrCI,EAAW1B,OAAO/E,EAAK0C,EAAWyD,EAAaK,UAAWL,EAAaS,QACvEH,EAAW1B,OAAO9E,EAAK0C,EAAWwD,EAAaK,UAAWL,EAAaW,QACvEL,EAAW1B,OAAO7E,MAAQA,EAAMiG,EAAaK,UAC7CC,EAAW1B,OAAO5E,OAASA,EAAOgG,EAAaK,UAC/CC,EAAWoF,IAAM,4CAEjBhL,EAASkG,aAAT,eAA4BZ,EAAaY,cACzClG,EAASkG,aAAaV,GAAS,CAC3BW,SAAWb,EAAac,QAE5BpG,EAASuG,kBAAoBf,EAC7BxF,EAASqG,WAAY,EACrBlF,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACA+B,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,UACPY,0BAA2BA,EAC3BO,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GA7ER0C,aCuGLmK,G,sKAvGb,SAAiBhL,EAAGiB,EAAYC,GAC5B2J,MAAM,iI,kCAuCV,SAAqB7K,EAAGiB,EAAYC,EAAYzC,EAAOC,M,oBAgCvD,WAAU,IAAD,EASD6B,KAAKV,MAPLE,EAFC,EAEDA,iBACAiC,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,QACPU,iBAAkBA,EAClBS,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GAjGV0C,aCyGHoK,G,sKAvGb,SAAiBjL,EAAGiB,EAAYC,GAC5B2J,MAAM,iI,kCAuCV,SAAqB7K,EAAGiB,EAAYC,EAAYzC,EAAOC,M,oBAgCvD,WAAU,IAAD,EASD6B,KAAKV,MAPLE,EAFC,EAEDA,iBACAiC,EAHC,EAGDA,qBACA9B,EAJC,EAIDA,oBACAE,EALC,EAKDA,eACAC,EANC,EAMDA,cACAlC,EAPC,EAODA,aACAqC,EARC,EAQDA,oBAIJ,OAEI,kBAAC,EAAD,CAAMnB,KAAK,OACPU,iBAAkBA,EAClBS,oBAAqBA,EACrBwB,qBAAsBA,EACtB9B,oBAAqBA,EACrBI,YAAaC,KAAKqF,iBAClBzF,gBAAiBI,KAAKsF,qBACtBzF,eAAgBA,EAChBC,cAAeA,EACflC,aAAcA,Q,GAjGX0C,aCSbqK,G,kDAEF,WAAYrL,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,GACb,EAAK+G,YAAc,OAHK,E,0CAM5B,WAAU,IAAD,EAQD1F,KAAKV,MANLmC,EAFC,EAEDA,qBACA9B,EAHC,EAGDA,oBACAE,EAJC,EAIDA,eACAC,EALC,EAKDA,cACAG,EANC,EAMDA,oBACAP,EAPC,EAODA,0BAGEiG,EAAe,CACjB,kBAAC,EAAD,CACIhD,IAAK,aACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,YACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,WACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAGzB,kBAAC,EAAD,CACI0C,IAAK,cACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,EAAD,CACI0C,IAAK,eACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,GAAD,CACI0C,IAAK,aACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,IAEzB,kBAAC,GAAD,CACI0C,IAAK,YACLjD,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBA,EAChBC,cAAeA,EACfG,oBAAqBA,KAI7B,OAEI,kBAAC,EAAD,CACInB,KAAMkB,KAAK0F,YACX3D,aAAc4D,EACd1G,YAAa,QACbsD,cAAc,Q,GA3FXjC,aAmGjBqK,GAAKpK,YAAcnC,EAEJuM,UCqDAC,G,kDA3Jb,WAAYtL,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAOjBqG,4BAA8B,SAACiF,GAC3B,EAAKvL,MAAMI,4BACX,EAAKoB,SAAS,CAAC+J,iBARf,EAAKlM,MAAQ,CACXkM,YAAc,MAHQ,E,yDAa5B,SAAsBpL,GAClB,IAAM0E,EAAenE,KAAKrB,MACpBE,EAAW,GACjB,GAAsC,OAAnCsF,EAAaiB,kBAA4B,CACxC,IAAM4C,EAAe,eAAO7D,EAAaC,UACnC0G,EAAS,eAAO9C,EAAgB7D,EAAaiB,mBAAmBrC,QAEtE,GADAiF,EAAgB7D,EAAaiB,mBAAmBrC,OAAS+H,EACtD9C,EAAgB7D,EAAaiB,mBAAmBT,WAAY,CAC3D,IAAIoG,EAAatL,EAAEmB,UAChBnB,EAAEoB,UAAYkK,IACbA,EAAatL,EAAEoB,WAEnBmH,EAAgB7D,EAAaiB,mBAAmBrC,OAAO7E,OAAS6M,EAAW5G,EAAaK,UACxFwD,EAAgB7D,EAAaiB,mBAAmBrC,OAAO5E,QAAU4M,EAAW5G,EAAaK,eAGzFwD,EAAgB7D,EAAaiB,mBAAmBrC,OAAO7E,OAASuB,EAAEmB,UAAUuD,EAAaK,UACzFwD,EAAgB7D,EAAaiB,mBAAmBrC,OAAO5E,QAAUsB,EAAEoB,UAAUsD,EAAaK,UAE9F3F,EAASuF,SAAW4D,EAExBhI,KAAKc,SAASjC,K,2BAGlB,WACI,IAAMA,EAAW,CAEjBA,KAAgB,OAEhBmB,KAAKc,SAASjC,K,oBAGlB,WAAU,IAAD,EASDmB,KAAKV,MAPLI,EAFC,EAEDA,0BACAC,EAHC,EAGDA,oBACAqL,EAJC,EAIDA,wBACAC,EALC,EAKDA,0BACAxJ,EANC,EAMDA,qBACAD,EAPC,EAODA,+BACAvB,EARC,EAQDA,oBAGJ,OACI,yBAAKE,UAAU,qBAEX,yBAAKA,UAAU,WACX,kBAAC,EAAD,CACIT,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBqL,wBAAyBA,EACzBC,0BAA2BA,EAC3BzJ,+BAAgCA,EAChCvB,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,8BAEtC,kBAAC,EAAD,CACIlG,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,8BAEtC,kBAAC,EAAD,CACIlG,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,8BAEtC,kBAAC,EAAD,CACIlG,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,8BAEtC,kBAAC,EAAD,CACIlG,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,8BAEtC,kBAAC,EAAD,CACIlG,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,8BAEtC,kBAAC,EAAD,CAAOlG,0BAA2BA,EAC9B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,IAEzB,kBAAC,GAAD,CACKP,0BAA2BA,EAC3B+B,qBAAsBA,EACtB9B,oBAAqBA,EACrBE,eAAgBG,KAAKkL,sBACrBpL,cAAeE,KAAKF,cACpBG,oBAAqBA,EACrB4K,YAAa7K,KAAKrB,MAAMkM,YACxBjF,4BAA6B5F,KAAK4F,kC,gCAOvD,SAAmBuF,EAAWC,GAEa,QAAnCpL,KAAKV,MAAMW,qBACgB,OAA3BD,KAAKrB,MAAMkM,aACXO,EAAUP,cAAgB7K,KAAKrB,MAAMkM,aAErC7K,KAAKc,SAAS,CAAC+J,YAAc,W,GAvJnBvK,aCgCL+K,I,wDArCb,WAAY/L,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,CACXZ,mBAAqB,CACnBC,EAAI,EACJC,EAAI,EACJC,MAAQ,EACRC,OAAS,IAPW,E,0CAY5B,WAAU,IAAD,EAMD6B,KAAKV,MAJLI,EAFC,EAEDA,0BACAC,EAHC,EAGDA,oBACA6B,EAJC,EAIDA,+BACAvB,EALC,EAKDA,oBAEJ,OACI,yBAAKE,UAAU,SACX,kBAAC,GAAD,CACIT,0BAA2BA,EAC3BC,oBAAqBA,EACrB8B,qBAAsBzB,KAAKyB,qBAC3BuJ,wBAAyBhL,KAAKgL,wBAC9BC,0BAA2BjL,KAAKiL,0BAChCzJ,+BAAgCA,EAChCvB,oBAAqBA,S,GA9BrBqL,kBCDdC,G,kDAEF,WAAYjM,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAIjBiM,qBAAuB,SAAC/L,GAapB,EAAKH,MAAM6F,kBAAkB,cAC7B,EAAK5F,QAAQJ,SAAS,CAACL,KAAO,iBAC9B,EAAKgC,SAASM,OAAOC,OAAO,GAdJ,CACpBvD,mBAAoB,EACpBC,mBAAqB,CACjBC,EAAI,EACJC,EAAI,EACJC,MAAQ,EACRC,OAAS,IAGO,CACpBsN,mBAAoB,MAdxB,EAAK9M,MAAQ,GAFW,E,0CAuB5B,WAAU,IAAD,EAIDqB,KAAKT,QAAQZ,MAFbb,EAFC,EAEDA,kBACAC,EAHC,EAGDA,mBAGE2N,EAAkB,CACpBC,QAAU,QAGX7N,IACC4N,EAAgBC,QAAU,QAC1BD,EAAgBE,UAAhB,sBAA4C7N,EAAmBC,EAA/D,cAAwED,EAAmBE,EAA3F,UACAyN,EAAgBxN,MAAhB,UAA2BH,EAAmBG,MAA9C,MACAwN,EAAgBvN,OAAhB,UAA4BJ,EAAmBI,OAA/C,OAGJ,IAAM0N,EAAmB,CACrBF,QAAU,QAMd,OAJG3L,KAAKT,QAAQZ,MAAMjB,MAAoC,QAA5BsC,KAAKT,QAAQZ,MAAMjB,OAC7CmO,EAAiBF,QAAU,SAIvB,yBACI9I,GAAG,aACHiJ,MAAOD,EACPE,YAAa/L,KAAKwL,sBAGlB,yBAAKrL,UAAW,gBAAiB2L,MAAOJ,S,GAxDnCJ,iBA+DvBC,GAAWhL,YAAcnC,EAEVmN,UCvDAS,I,kKARb,WACI,OACI,yBAAK7L,UAAW,aAAhB,WAAsCH,KAAKV,MAAMkF,UAAjD,S,GAJYlE,cCDlB2L,I,MAA0B,CAC5BnI,KAAO,CACHoI,eAAgB,EAChBC,cAAe,GAEnBC,MAAQ,CACJF,eAAgB,EAChBC,cAAe,GAEnBE,OAAS,CACLH,eAAgB,EAChBC,cAAe,KAsLNG,G,kDAhLb,WAAYhN,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAQfgN,gBAAkB,SAAC9M,GACf,EAAKH,MAAMkN,kBAAkB,CACzB3J,GAAK,EAAKvD,MAAMP,KAAK8D,GACrB4J,SAAW,EAAKC,UAAUC,WAAa,EAAKD,UAAUE,aAAaC,OACnEtJ,SAAW,EAAK5E,MAAM4E,SAAS,EAAKjE,MAAMwN,UAAUtI,aAbhC,EAiB5BuI,YAAc,WAAO,IAAD,EAEwBd,GAAwB,EAAK3M,MAAMP,KAAKD,MAAxEqN,EAFQ,EAERA,aAAcD,EAFN,EAEMA,cAEtB,GAAGC,GAAiB,EAAKa,cAAcC,aAAe,EAAKD,cAAcE,aAAe,CACpF,IAAMC,EAAe,EAAKxO,MAAM4E,SAAS,EAAG,EAC5C,EAAKzC,SAAS,CAACyC,SAAW4J,SACvB,GAAGhB,GAAiB,EAAKO,UAAUQ,aAAe,EAAKF,cAAcE,cAAiB,EAAKvO,MAAM4E,SAAW,GAAI,CAGnH,GAD4B,EAAKmJ,UAAUQ,cADxB,EAAE,EAAE,EAC4C,KAAM,IACjD,EAAKF,cAAcE,aAAc,CACrD,IAAMC,EAAe,EAAKxO,MAAM4E,UAHjB,EAAE,EAAE,EAGiC,KAAM,IAC1D,EAAKzC,SAAS,CAACyC,SAAW4J,UAExBjB,GAAkB,EAAKc,cAAcC,aAAe,EAAKD,cAAcE,cAC1E,EAAKvO,MAAMyO,gBAAkB,EAAKJ,cAAcC,eAC/C,EAAK3N,MAAM+N,uBAAuB,EAAK/N,MAAMP,KAAK8D,GAAI,EAAKmK,cAAcC,cACzE,EAAKnM,SAAS,CAACsM,cAAgB,EAAKJ,cAAcC,iBAlClC,EAuC5BK,YAAc,SAACC,GACXA,EAAMC,iBACNC,SAASC,YAAY,cAAc,EAAOH,EAAMI,cAAcC,QAAQ,gBAzC9C,EA4C5BC,eAAiB,SAACpO,GACd,EAAKqB,SAAS,CACVyC,SAAW,EAAKjE,MAAMP,KAAKuE,UAAUC,YA5C3C,EAAK5E,MAAQ,CACX4E,SAAW,GACX6J,cAAgB,GAElB,EAAKU,oBAAsB,KAND,E,yDAkD5B,SAAsBC,EAAWC,GAAY,IAErCjP,EACAgP,EADAhP,KAIAwE,EAEAyK,EAFAzK,SACA6J,EACAY,EADAZ,cAGEa,EAAmBlP,IAASiB,KAAKV,MAAMP,KACvCmP,EAAmB3K,IAAavD,KAAKrB,MAAM4E,SAC3C4K,EAAqBf,IAAkBpN,KAAKrB,MAAMyO,cAExD,SAAGa,GAAmBC,GAAmBC,K,oBAM7C,WAAU,IAAD,SACoBnO,KAAKV,MAAxBP,EADD,EACCA,KAAM+N,EADP,EACOA,UACP/J,EAAS,CACXqL,SAAW,WACXzC,QAAU,OACV9H,WAAa,SACbwK,eAAiB,SACjBC,WAAY,UAEVC,EAAa,CACdhL,SAAWvD,KAAKrB,MAAM4E,UAEvBiL,EAAc,GACdC,EAAY,QAChB,GAAG1P,GAAQA,EAAK8D,IAAM9D,EAAKgE,OAAQ,CAClC,IAAM2L,EAAkB3P,EAAKgE,OACzB/E,GAAM0Q,EAAgB1Q,GAAK0Q,EAAgBC,IAAI7B,EAAUtI,UAAYsI,EAAUlI,QAAQkI,EAAUtI,UACjGvG,GAAMyQ,EAAgBzQ,GAAKyQ,EAAgBE,IAAI9B,EAAUtI,UAAYsI,EAAUhI,QAAQgI,EAAUtI,UACjGtG,EAAQwQ,EAAgBxQ,MAAM4O,EAAUtI,UACxCrG,EAAS6B,KAAKrB,MAAMyO,cACxBrK,EAAO8L,IAAP,UAAgB5Q,EAAhB,MACA8E,EAAO+L,KAAP,UAAiB9Q,EAAjB,MACA+E,EAAO5E,OAAP,UAAmBA,EAAnB,MACA4E,EAAO7E,MAAP,UAAkBA,EAAlB,MACA6E,EAAOuL,WAAa,UACpBvL,EAAOgM,SAAW,SACfhQ,EAAK+E,KAAK6D,OAAS,IAClB6G,EAAczP,EAAK+E,KAAKkL,MAAM,SAASxM,KAAI,SAACyM,EAAMvM,GAC9C,OAAO,yBAAKC,IAAG,iBAAY5D,EAAK8D,GAAjB,YAAuBoM,EAAvB,YAA+BvM,IAAMuM,OAGzDlQ,EAAKuE,UAAUM,YACd2K,EAAW3K,UAAY7E,EAAKuE,UAAUM,UACN,SAA7B7E,EAAKuE,UAAUM,UACdb,EAAOsL,eAAiB,aACY,UAA7BtP,EAAKuE,UAAUM,YACtBb,EAAOsL,eAAiB,aAK7BtP,EAAKuE,UAAUO,aACd0K,EAAW1K,WAAa,SACS,QAA9B9E,EAAKuE,UAAUO,WACdd,EAAOc,WAAa,aACiB,WAA9B9E,EAAKuE,UAAUO,aACtBd,EAAOc,WAAa,aAGzB9E,EAAKuE,UAAUK,QACd4K,EAAW5K,MAAQ5E,EAAKuE,UAAUK,OAGtC8K,EAAUzO,KAAKV,MAAMP,KAAK8D,GAI1B,OACI,yBACIiJ,MAAO/I,EACPmM,IAAK,SAACC,GAAgB,EAAKnC,cAAgBmC,IAE3C,yBACIxM,IAAG,qBAAgB8L,GACnBW,iBAAiB,EACjBF,IAAK,SAACG,GAAY,EAAK3C,UAAY2C,GACnClP,UAAU,gBACVmP,OAAQtP,KAAKuM,gBACbgD,QAASvP,KAAK6N,eACd2B,QAASxP,KAAKsN,YACdmC,gCAAgC,EAChC3D,MAAOyC,GAENC,M,gCAMlB,SAAmBrD,EAAWC,GAC1B,GAAGpL,KAAKV,MAAMP,MAAQiB,KAAKV,MAAMP,KAAK8D,GAAI,CAGrC,GAFA7C,KAAK0M,UAAUgD,UACQ1P,KAAKV,MAAMP,MAAOiB,KAAKV,MAAMP,KAAK+E,KAAK6D,OAAS,GAClD8F,SAASkC,YAAa,CACvC,IAAIC,EAAQnC,SAASkC,cACrBC,EAAMC,mBAAmB7P,KAAK0M,WAC9BkD,EAAME,UAAS,GACf,IAAIC,EAAYjH,OAAOkH,eACvBD,EAAUE,kBACVF,EAAUG,SAASN,GAEnBzE,EAAUpM,MAASiB,KAAKV,MAAMP,KAAK8D,KAAOsI,EAAUpM,KAAK8D,KACzD7C,KAAKc,SAAS,CACVyC,SAAYvD,KAAKV,MAAMP,KAAKuE,UAAUC,SAASvD,KAAKV,MAAMwN,UAAUtI,UACpE4I,cAAgBpN,KAAKV,MAAMP,KAAKgE,OAAO5E,OAAO6B,KAAKV,MAAMwN,UAAUtI,YAEvExE,KAAK8N,oBAAsBqC,YAAYnQ,KAAK+M,YAAa,WAI9DqD,cAAcpQ,KAAK8N,yB,GA5KLxN,aCjBZ+P,GAAS,CACpBC,MAAO,CACLC,iBAAmB,CAMjB,UACA,UACA,OACA,UACA,UACA,UACA,UACA,WAEFC,cAAgB,CACd,UACA,UACA,QAEFC,WAAa,CACX,UACA,OACA,YAGJC,KAAM,IAKKC,GAAeC,IAAMvS,cAChCgS,GAAOC,OC/BHO,I,kNAEJC,kBAAoB,WAClB,EAAKxR,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjL,gBAAkB,EAAKzG,MAAM2R,Y,4CAKnC,WACI,OAAO,yBACC9Q,UAAW,iBACX2L,MAAO,CAACoF,gBAAiBlR,KAAKV,MAAMqE,OACpCvD,QAASJ,KAAK8Q,wB,GAdQxQ,cAsB9B6Q,G,kDAEF,WAAY7R,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbI,0BAMf,EAAKjH,MAAQ,CACX0S,aAAc,GAHU,E,sDAY5B,WACKrR,KAAKrB,MAAM0S,aAjBC,0BAiBcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAIjC,WAAU,IAAD,OACCC,EAAQtR,KAAKT,QACbgS,EAAgB,CACpBL,gBAAkBI,EAAMf,iBAAiBvQ,KAAKV,MAAMkS,YAElD1P,EAAa,gCAKjB,OAJG9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAIZ,yBAAK3B,UAAW,yBACZ,yBACEA,UAAW,gBACX2L,MAAOyF,EACPnR,QAASJ,KAAKoR,kBACdK,MAAO,iBAET,yBACEtR,UAAW2B,EACX1B,QAASJ,KAAKoR,mBAEZ,yBAAKjR,UAAW,UAEdmR,EAAMf,iBAAiB/N,KAAI,SAACmB,EAAOjB,GACjC,OAAO,kBAAC,GAAD,CACCC,IAAM,yBAAyBgB,EAC/BA,MAAOA,EACPsN,QAASvO,EACTqO,4BAA6B,EAAKzR,MAAMyR,uC,GAjDpCzQ,aA6DlC6Q,GAAsB5Q,YAAcoQ,GAErBQ,UCrFXO,I,kNAEJZ,kBAAoB,WACnB,EAAKxR,MAAMqS,kBAAkB,EAAKrS,MAAMqE,Q,4CAGzC,WACI,OAAO,yBACCxD,UAAW,iBACX2L,MAAO,CAACoF,gBAAiBlR,KAAKV,MAAMqE,OACpCvD,QAASJ,KAAK8Q,wB,GAVIxQ,cAgB1BsR,G,4MAEJd,kBAAoB,WACnB,EAAKxR,MAAMuS,oBAAoB,CAACpI,OAAS,CAAErK,MAAQ,M,4CAGpD,WACI,OAAO,yBACCe,UAAW,iBACX2L,MAAO,CAACoF,gBAAiB,OAAQY,OAAQ,kBACzC1R,QAASJ,KAAK8Q,mBAEhB,yBAAK3Q,UAAU,yB,GAZUG,aAoB/ByR,G,kDAEF,WAAYzS,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbI,sBAIW,EAY5B+L,kBAAoB,SAAChO,GACnB,IAAIqO,EAAiB,EAAK1S,MAAM2S,cAAc,GAAGlP,OAAOC,YACjC,IAAnBgP,IACFA,EAAiB,GAEnB,EAAK1S,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPE,KAAOU,EACPX,YAAcgP,OArBM,EA2B5BH,oBAAsB,SAACpS,GACrB,EAAKH,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPC,YAAcvD,EAAEgK,OAAOrK,WA7B7B,EAAKT,MAAQ,CACX0S,aAAc,GAHU,E,sDAqC5B,WACKrR,KAAKrB,MAAM0S,aA1CC,sBA0CcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAIjC,WAAU,IAAD,OACCC,EAAQtR,KAAKT,QAEfuC,EAAa,gCACd9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAGhB,IAAMkB,EAAchD,KAAKV,MAAM2S,cAAc,GAAGlP,OAAOC,YAEjDuO,EAAgB,CACpBL,gBAAkBlR,KAAKV,MAAM2S,cAAc,GAAGlP,OAAOE,MAIvD,OACI,yBAAK9C,UAAW,yBACZ,yBACEA,UAAW,gBACX2L,MAAOyF,EACPnR,QAASJ,KAAKoR,kBACdK,MAAO,iBAET,yBACEtR,UAAW2B,GAET,yBAAK3B,UAAW,UAChB,kBAAC,GAAD,CACEwC,IAAM,gCACNkP,oBAAqB7R,KAAK6R,sBAG1BP,EAAMf,iBAAiB/N,KAAI,SAACmB,EAAOjB,GACjC,OAAO,kBAAC,GAAD,CACCC,IAAM,yBAAyBgB,EAC/BA,MAAOA,EACPsN,QAASvO,EACTiP,kBAAmB,EAAKA,uBAIpC,yBACCxR,UAAU,iBAET,yBAAMA,UAAU,gBAAhB,YACA,2BACErB,KAAK,SACL+D,GAAG,UACHqP,KAAK,UACLC,IAAI,IACJC,IAAI,IACJC,KAAK,MACLC,SAAUtS,KAAK6R,oBACfzS,MAAQ4D,GAAe,W,GAlGf1C,aA6G9ByR,GAAkBxR,YAAcoQ,GAEjBoB,UCnJXQ,I,kNAEJzB,kBAAoB,WACnB,EAAKxR,MAAMqS,kBAAkB,EAAKrS,MAAMqE,Q,4CAGzC,WACI,OAAO,yBACCxD,UAAW,iBACX2L,MAAO,CAACoF,gBAAiBlR,KAAKV,MAAMqE,OACpCvD,QAASJ,KAAK8Q,wB,GAVUxQ,cAgBhCkS,G,4MAEJ1B,kBAAoB,WACnB,EAAKxR,MAAMuS,oBAAoB,CAACpI,OAAS,CAAErK,MAAQ,M,4CAGpD,WACI,OAAO,yBACCe,UAAW,iBACX2L,MAAO,CAACoF,gBAAiB,OAAQY,OAAQ,kBACzC1R,QAASJ,KAAK8Q,mBAEhB,yBAAK3Q,UAAU,yB,GAZgBG,aAoBrCmS,G,kDAEF,WAAYnT,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbI,4BAIW,EAY5B+L,kBAAoB,SAAChO,GACnB,IAAI+O,EAAmB,EAAKpT,MAAM2S,cAAc9O,cACvB,IAArBuP,IACFA,EAAmB,GAErB,EAAKpT,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPG,OAASS,EACTR,cAAgBuP,OArBI,EA2B5Bb,oBAAsB,SAACpS,GACrB,EAAKH,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPI,cAAgB1D,EAAEgK,OAAOrK,WA7B/B,EAAKT,MAAQ,CACX0S,aAAc,GAHU,E,sDAqC5B,WACKrR,KAAKrB,MAAM0S,aA1CC,4BA0CcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAIjC,WAAU,IAAD,OACCC,EAAQtR,KAAKT,QACbgS,EAAgB,CACpBoB,YAAc3S,KAAKV,MAAM2S,cAAc/O,QAErCpB,EAAa,gCAKjB,OAJG9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAIZ,yBAAK3B,UAAW,yBACZ,yBACEA,UAAW,sBACX2L,MAAOyF,EACPnR,QAASJ,KAAKoR,kBACdK,MAAO,wBAET,yBACEtR,UAAW2B,GAET,yBAAK3B,UAAW,UAChB,kBAAC,GAAD,CACEwC,IAAM,gCACNkP,oBAAqB7R,KAAK6R,sBAG1BP,EAAMd,cAAchO,KAAI,SAACmB,EAAOjB,GAC9B,OAAO,kBAAC,GAAD,CACCC,IAAM,yBAAyBgB,EAC/BA,MAAOA,EACPsN,QAASvO,EACTiP,kBAAmB,EAAKA,uBAIpC,yBACCxR,UAAU,iBAET,yBAAMA,UAAU,gBAAhB,YACA,2BACErB,KAAK,SACL+D,GAAG,UACHqP,KAAK,UACLC,IAAI,IACJC,IAAI,IACJC,KAAK,MACLC,SAAUtS,KAAK6R,oBACfzS,MAAQY,KAAKV,MAAM2S,cAAc9O,eAAiB,W,GA7FpC7C,aAwGpCmS,GAAwBlS,YAAcoQ,GAEvB8B,UCPAG,I,wDAlIb,WAAYtT,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbI,gBAIW,EAkB5BiN,kBAAoB,WAGlB,EAAKvT,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPM,gBALkB,SAnBE,EA8B5ByP,mBAAqB,WACnB,IAAMzP,EAAmB,EAAE,EAAK/D,MAAMwD,iBAAkB,IAAK,EAAE,EAAKxD,MAAMwD,iBAE1E,EAAKxD,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPM,uBApCoB,EA0C5B0P,mBAAqB,WACnB,IAAM1P,EAAkBiG,OAAO,EAAE,EAAKhK,MAAMwD,kBAE5C,EAAKxD,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPM,uBAhDoB,EAuD5B2P,kBAAoB,SAACvT,GACnB,EAAKH,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjO,OAAS,CACPK,YAAe3D,EAAEgK,OAAOrK,MAAM,EAAKE,MAAMwD,sBAzD/C,EAAKnE,MAAQ,CACX0S,aAAc,GAHU,E,sDAY5B,WACKrR,KAAKrB,MAAM0S,aAjBC,gBAiBcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAmDjC,WAEI,IAAIvP,EAAa,gCACd9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAGhB,IAAImR,EAA8D,MAA7CjT,KAAKV,MAAM2S,cAAc5O,gBAA2B,WAAa,KAClF6P,EAAkBlT,KAAKV,MAAM2S,cAAc5O,kBAAqB,EAAErD,KAAKV,MAAMwD,iBAAkB,IAAK,EAAE9C,KAAKV,MAAMwD,iBAAqB,WAAa,KACnJqQ,EAAkBnT,KAAKV,MAAM2S,cAAc5O,kBAAoBiG,OAAO,EAAEtJ,KAAKV,MAAMwD,kBAAqB,WAAa,KAEnHsQ,EAAsBlN,KAAKmN,KAAKrT,KAAKV,MAAM2S,cAAc7O,YAAYpD,KAAKV,MAAMwD,kBAEtF,OACI,yBAAK3C,UAAW,aACd,yBACEA,UAAW,cACXC,QAASJ,KAAKoR,kBACdK,MAAO,wBAEP,yBAAK6B,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAMiJ,EAAE,gBAAgBlE,KAAK,SAC7B,0BAAMA,KA7FN,OA6FuBkE,EAAE,+KAG7B,yBACIhH,UAAW2B,GAET,yBAAK3B,UAAW,UAChB,yBAAKA,UAAS,8BAAyB8S,GAAiB7S,QAASJ,KAAK6S,mBACpE,yBAAKU,QAAQ,YAAYrV,MAAM,KAAKC,OAAO,KAAKmV,MAAM,8BACpD,0BAAMrQ,KAtGZ,OAsG6BkE,EAAE,iCAG7B,yBAAKhH,UAAS,8BAAyB+S,GAAkB9S,QAASJ,KAAK8S,oBACrE,yBAAKQ,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KA3GZ,OA2G6BkE,EAAE,iFAG7B,yBAAKhH,UAAS,8BAAyBgT,GAAkB/S,QAASJ,KAAK+S,oBACrE,yBAAKQ,QAAQ,YAAYrV,MAAM,KAAKC,OAAO,KAAKmV,MAAM,8BACpD,0BAAMrQ,KAhHZ,OAgH6BkE,EAAE,2HAG7B,yBAAKhH,UAAU,iBACb,yBAAMA,UAAU,gBAAhB,UACA,2BACErB,KAAK,SACL+D,GAAG,UACHqP,KAAK,UACLC,IAAI,IACJC,IAAI,KACJC,KAAK,IACLC,SAAUtS,KAAKgT,kBACf5T,MAAOgU,W,GAzHL9S,cCuITkT,I,wDArIb,WAAYlU,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbI,eAIW,EAkB5B6N,iBAAmB,WACjB,IAAIC,EAAgB,SACmB,WAApC,EAAKpU,MAAMgE,UAAUG,aACtBiQ,EAAgB,QAElB,EAAKpU,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,WAAeoQ,OA1BK,EAgC5BC,mBAAqB,WACnB,IAAIC,EAAe,SACmB,WAAnC,EAAKtU,MAAMgE,UAAUA,YACtBsQ,EAAe,UAEjB,EAAKtU,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,UAAcsQ,OAxCM,EA8C5BC,sBAAwB,WACtB,IAAInQ,EAAqB,EAAKpE,MAAMgE,UAAUI,mBAE5CA,GADmE,IAAlE,EAAKpE,MAAMgE,UAAUI,mBAAmBoQ,QAAQ,aAC5B,aAAepQ,EAEfA,EAAmBqQ,QAAQ,YAAa,IAE/D,EAAKzU,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACVI,0BAxDoB,EA8D5BsQ,0BAA4B,WAC1B,IAAItQ,EAAqB,EAAKpE,MAAMgE,UAAUI,oBAC0B,IAArE,EAAKpE,MAAMgE,UAAUI,mBAAmBoQ,QAAQ,gBACjDpQ,GAA0C,gBAE1CA,EAAqBA,EAAmBqQ,QAAQ,eAAgB,IAElE,EAAKzU,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACVI,0BAtEN,EAAK/E,MAAQ,CACX0S,aAAc,GAHU,E,sDAY5B,WACKrR,KAAKrB,MAAM0S,aAjBC,eAiBcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAgEjC,WAEI,IAAIvP,EAAa,gCACd9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAGhB,IAAImS,EAAoD,SAApCjU,KAAKV,MAAMgE,UAAUG,WAAyB,WAAa,KAC3EyQ,EAAqD,WAAnClU,KAAKV,MAAMgE,UAAUA,UAA0B,WAAa,KAC9E6Q,GAAuF,IAAlEnU,KAAKV,MAAMgE,UAAUI,mBAAmBoQ,QAAQ,aAAuB,WAAa,KACzGM,GAA8F,IAArEpU,KAAKV,MAAMgE,UAAUI,mBAAmBoQ,QAAQ,gBAA0B,WAAa,KAEpH,OACI,yBAAK3T,UAAW,aACd,yBACEA,UAAW,cACXC,QAASJ,KAAKoR,kBACdK,MAAO,sBAEP,yBAAK6B,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAxGN,OAwGuBkE,EAAE,4GAG7B,yBACIhH,UAAW2B,GAET,yBAAK3B,UAAW,UAChB,yBAAKA,UAAS,8BAAyB8T,GAAgB7T,QAASJ,KAAKyT,kBACnE,yBAAKH,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAjHZ,OAiH6BkE,EAAE,4OAG7B,yBAAKhH,UAAS,8BAAyB+T,GAAkB9T,QAASJ,KAAK2T,oBACrE,yBAAKL,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAtHZ,OAsH6BkE,EAAE,0DAG7B,yBAAKhH,UAAS,8BAAyBgU,GAAqB/T,QAASJ,KAAK6T,uBACxE,yBAAKP,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KA3HZ,OA2H6BkE,EAAE,0HAG7B,yBAAKhH,UAAS,8BAAyBiU,GAAyBhU,QAASJ,KAAKgU,2BAC5E,yBAAKV,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAhIZ,OAgI6BkE,EAAE,mE,GA5HxB7G,cCEnB+T,I,MAAgB,CACpB,QACA,cACA,eACA,wBACA,cACA,cACA,UACA,gBACA,yBACA,WACA,SACA,kBACA,eACA,YAGI3C,G,4MAEJZ,kBAAoB,WACnB,EAAKxR,MAAMqS,kBAAkB,EAAKrS,MAAMqE,Q,4CAGzC,WACI,OAAO,yBACCxD,UAAW,iBACX2L,MAAO,CAACoF,gBAAiBlR,KAAKV,MAAMqE,OACpCvD,QAASJ,KAAK8Q,wB,GAVIxQ,aAgB1BgU,G,kDAEF,WAAYhV,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BA9CI,cAqCW,EAkB5B+L,kBAAoB,SAAChO,GACnB,EAAKrE,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACVK,aAtBoB,EA4B5B4Q,iBAAmB,SAAC9U,GACC,EAAKH,MAAMgE,UAAzBE,aACa/D,EAAEgK,OAAOrK,OACzB,EAAKE,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACVE,WAAa/D,EAAEgK,OAAOrK,WAlCJ,EAyC5BoV,iBAAmB,SAAC/U,GAClB,EAAKH,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACVC,SAAY9D,EAAEgK,OAAOrK,MAAM,EAAKE,MAAMwD,sBA3C5C,EAAKnE,MAAQ,CACX0S,aAAc,GAHU,E,sDAY5B,WACKrR,KAAKrB,MAAM0S,aAlDC,cAkDcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAqCjC,WAAU,IAAD,OACCC,EAAQtR,KAAKT,QAEfuC,EAAa,gCAKjB,OAJG9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAIZ,yBAAK3B,UAAW,aACd,yBACEA,UAAW,cACXC,QAASJ,KAAKoR,kBACdK,MAAO,sBAEP,yBAAK6B,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KA1GN,OA0GuBkE,EAAE,oDAG7B,yBACIhH,UAAW2B,GAET,yBAAK3B,UAAW,UAEdmR,EAAMb,WAAWjO,KAAI,SAACmB,EAAOjB,GAC3B,OAAO,kBAAC,GAAD,CACCC,IAAM,mBAAmBgB,EACzBA,MAAOA,EACPsN,QAASvO,EACTiP,kBAAmB,EAAKA,uBAIpC,yBAAKxR,UAAU,cACX,4BACEf,MAAOY,KAAKV,MAAMgE,UAAUE,WAC5B8O,SAAUtS,KAAKuU,kBAEdF,GAAc7R,KAAI,SAAAiS,GAAI,OAAI,4BAAQ9R,IAAG,uBAAkB8R,IAASA,QAGvE,yBAAKtU,UAAU,UACb,yBAAMA,UAAU,gBAAhB,SACA,2BACErB,KAAK,SACL+D,GAAG,WACHqP,KAAK,WACLG,KAAK,IACLD,IAAI,MACJD,IAAI,IACJG,SAAUtS,KAAKwU,iBACfpV,MAAO8G,KAAKwO,MAAM1U,KAAKV,MAAMgE,UAAUC,SAASvD,KAAKV,MAAMwD,2B,GAxG3DxC,aAmHtBgU,GAAU/T,YAAcoQ,GAET2D,U,MCxJjB,SAASK,GAAWrV,GAClB,OACE,yBAAKgU,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAAM3D,EAAMsV,UAAWzN,EAAE,iFAKrC,SAAS0N,GAASvV,GAChB,OACE,yBAAKgU,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAAM3D,EAAMsV,UAAWzN,EAAE,kFAKrC,SAAS2N,GAAUxV,GACjB,OACE,yBAAKgU,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAAM3D,EAAMsV,UAAWzN,EAAE,iFAKrC,SAAS4N,GAAazV,GACpB,OACE,yBAAKgU,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAAM3D,EAAMsV,UAAWzN,EAAE,+CAKrC,SAAS6N,GAAgB1V,GACvB,OACE,yBAAKgU,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAAM3D,EAAMsV,UAAWzN,EAAE,0EAKrC,SAAS8N,GAAgB3V,GACvB,OACE,yBAAKgU,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAAM3D,EAAMsV,UAAWzN,EAAE,kD,IAqJpB+N,G,kDA7Ib,WAAY5V,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BA9DI,kBAqDW,EAY5BuP,iBAAmB,WACjB,EAAK7V,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,UAAc,YAhBM,EA4B5B8R,kBAAoB,WAClB,EAAK9V,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,UAAc,aAhCM,EAsC5B+R,mBAAqB,WACnB,EAAK/V,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,UAAc,cA1CM,EAgD5BgS,eAAiB,WACf,EAAKhW,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,WAAe,WApDK,EA0D5BiS,kBAAoB,WAClB,EAAKjW,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,WAAe,cA9DK,EAoE5BkS,kBAAoB,WAClB,EAAKlW,MAAMyR,4BAA4B,CACrCC,OAAS,CACP1N,UAAY,CACV,WAAe,cAtErB,EAAK3E,MAAQ,CACX0S,aAAc,GAHU,E,sDAsB5B,WACKrR,KAAKrB,MAAM0S,aA5EC,kBA4EcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAsDjC,WAEI,IAAIvP,EAAa,gCACd9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAGhB,IAAI2T,EAAmD,SAAnCzV,KAAKV,MAAMgE,UAAUM,UAAwB,WAAa,KAC1E8R,EAAqD,WAAnC1V,KAAKV,MAAMgE,UAAUM,UAA0B,WAAa,KAC9E+R,EAAoD,UAAnC3V,KAAKV,MAAMgE,UAAUM,UAAyB,WAAa,KAC5EgS,EAAwD,QAApC5V,KAAKV,MAAMgE,UAAUO,WAAwB,WAAa,KAC9EgS,EAA2D,WAApC7V,KAAKV,MAAMgE,UAAUO,WAA2B,WAAa,KACpFiS,EAA2D,WAApC9V,KAAKV,MAAMgE,UAAUO,WAA2B,WAAa,KAEpFkS,EAAc,kBAACpB,GAAD,CAAYC,UAnJpB,SA2JV,OANGa,EACDM,EAAc,kBAAClB,GAAD,CAAUD,UAtJhB,SAuJCe,IACTI,EAAc,kBAACjB,GAAD,CAAWF,UAxJjB,UA4JN,yBAAKzU,UAAW,iBACd,yBACEA,UAAW,cACXC,QAASJ,KAAKoR,kBACdK,MAAO,yBAENsE,GAEH,yBACI5V,UAAW2B,EACX1B,QAASJ,KAAKoR,mBAEZ,yBAAKjR,UAAW,UAChB,yBAAKA,UAAS,8BAAyBsV,GAAgBrV,QAASJ,KAAKmV,kBACnE,kBAACN,GAAD,CAAUD,UA1Kd,UA4KE,yBAAKzU,UAAS,8BAAyBuV,GAAkBtV,QAASJ,KAAKqV,oBACrE,kBAACV,GAAD,CAAYC,UA7KhB,UA+KE,yBAAKzU,UAAS,8BAAyBwV,GAAiBvV,QAASJ,KAAKoV,mBACpE,kBAACN,GAAD,CAAWF,UAhLf,UAkLE,yBAAKzU,UAAS,8BAAyByV,GAAoBxV,QAASJ,KAAKsV,gBACvE,kBAACP,GAAD,CAAcH,UAnLlB,UAqLE,yBAAKzU,UAAS,8BAAyB0V,GAAuBzV,QAASJ,KAAKuV,mBAC1E,kBAACP,GAAD,CAAiBJ,UAtLrB,UAwLE,yBAAKzU,UAAS,8BAAyB2V,GAAuB1V,QAASJ,KAAKwV,mBAC1E,kBAACP,GAAD,CAAiBL,UAzLrB,gB,GAqDUtU,aCuBX4J,I,wDAtEf,WAAY5K,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbM,SAIS,EAkB5BoQ,iBAAmB,SAACvW,GAElB,EAAKH,MAAMyR,4BAA4B,CACrCC,OAAS,CACPjN,KAAOtE,EAAEgK,OAAOrK,UApBpB,EAAKT,MAAQ,CACX0S,aAAc,GAHU,E,sDAY5B,WACKrR,KAAKrB,MAAM0S,aAjBG,SAiBYrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAcjC,WAEI,IAAIvP,EAAa,gCAKjB,OAJG9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAIZ,yBAAK3B,UAAW,iBACd,yBACEA,UAAW,cACXC,QAASJ,KAAKoR,kBACdK,MAAO,4BAEP,yBAAK6B,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAjDJ,OAiDqBkE,EAAE,0NAG7B,yBACMhH,UAAW2B,GAET,yBAAK3B,UAAW,UAChB,yBAAKA,UAAU,eACb,yBAAMA,UAAU,qBAAhB,SACA,2BACE+R,KAAK,OACLI,SAAUtS,KAAKgW,iBACf5W,MAAOY,KAAKV,MAAMyE,KAClBkS,KAAM,eAER,8BAAUpT,GAAG,cACV7C,KAAKV,MAAM4W,YAAY1T,KAAI,SAAC2T,EAAOzT,GAAR,OAAe,4BAAQtD,MAAK,oBAAe+W,EAAMtT,IAAMF,IAAG,qBAAgBwT,EAAMtT,KAAjE,SAA+EH,EAAE,c,GA7DjIpC,cCmDF8V,I,wDAnDb,WAAY9W,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf8W,mBAAqB,WACnB,EAAK/W,MAAMgX,2BAA2B,UAAW,EAAKhX,MAAMiX,MARlC,EAW5BC,mBAAqB,WACnB,EAAKlX,MAAMgX,2BAA2B,WAAY,EAAKhX,MAAMiX,MAV7D,EAAK5X,MAAQ,GAFa,E,0CAe5B,WAEI,IAAM8X,EAAiC,YAApBzW,KAAKV,MAAMR,KAC9B,OACE,yBAAKqB,UAAW,iBAEXsW,EACC,yBACEtW,UAAW,cACXsR,MAAO,iBACPrR,QAASJ,KAAKqW,oBAEd,yBAAK/C,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMA,KAjCR,OAiCyBkE,EAAE,iJAI7B,yBACEhH,UAAW,cACXsR,MAAO,eACPrR,QAASJ,KAAKwW,oBAEd,yBAAKlD,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMkE,EAAE,iN,GA1CF7G,cC8CToW,I,wDA5Cb,WAAYpX,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMfoX,iBAAmB,WACjB,EAAK7V,SAAS,CAAC8V,UAAY,EAAKjY,MAAMiY,YANtC,EAAKjY,MAAQ,CACXiY,UAAW,GAHa,E,0CAW5B,WAAU,IAEDA,EAAY5W,KAAKrB,MAAjBiY,SAEP,OACE,yBAAKzW,UAAW,iBACd,yBACEA,UAAW,cACXC,QAASJ,KAAK2W,iBACdlF,MAAO,kCAENmF,EACC,yBAAKtD,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,uBAAG+E,KAAK,QACN,0BAAMkE,EAAE,oBACR,0BAAMA,EAAE,kBAAkB0P,QAAQ,SAEpC,0BAAM5T,KAhCJ,OAgCqBkE,EAAE,uKAG3B,yBAAKmM,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMA,KArCJ,OAqCqBkE,EAAE,uM,GAnCb7G,cC8BXwW,I,wDA5Bb,WAAYxX,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRZ,MAAQ,GAFa,E,0CAO5B,WAEE,OACI,yBAAKwB,UAAW,iBACd,yBACEA,UAAW,cACXsR,MAAO,sBACPrR,QAASJ,KAAKV,MAAMyX,sBAEpB,yBAAKzD,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMA,KAtBJ,OAsBqBkE,EAAE,6D,GApBZ7G,cC6BZ0W,I,wDA3Bb,WAAY1X,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRZ,MAAQ,GAFa,E,0CAO5B,WAEE,OACI,yBAAKwB,UAAW,iBACd,yBACEA,UAAW,cACXsR,MAAO,gBAEP,yBAAK6B,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMA,KArBJ,OAqBqBkE,EAAE,6J,GAnBT7G,cCoEfuJ,I,wDAhEb,WAAYvK,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMf6R,kBAAoB,WAClB,EAAKtQ,SAAS,CAACuQ,aAAe,EAAK1S,MAAM0S,cACzC,EAAK/R,MAAMsG,4BAbI,QAIW,EAkB5BqR,gBAAkB,SAACxX,GACjB,EAAKH,MAAMyR,4BAA4B,CACrCC,OAAS,CACPnH,IAAMpK,EAAEgK,OAAOrK,UAnBnB,EAAKT,MAAQ,CACX0S,aAAc,GAHU,E,sDAY5B,WACKrR,KAAKrB,MAAM0S,aAjBC,QAiBcrR,KAAKV,MAAM3B,oBACtCqC,KAAKc,SAAS,CAACuQ,aAAc,M,oBAYjC,WAEI,IAAIvP,EAAa,gCAKjB,OAJG9B,KAAKrB,MAAM0S,cACZvP,GAAc,cAIZ,yBAAK3B,UAAW,aACd,yBACEA,UAAW,cACXC,QAASJ,KAAKoR,kBACdK,MAAO,oBAEP,yBAAK6B,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KA/CN,OA+CuBkE,EAAE,kKAG7B,yBACIhH,UAAW2B,GAET,yBAAK3B,UAAW,UAChB,yBAAKA,UAAU,eACb,yBAAMA,UAAU,qBAAhB,QACA,2BACE+R,KAAK,SACLI,SAAUtS,KAAKiX,gBACf7X,MAAOY,KAAKV,MAAMuK,a,GAvDxBvJ,cCoCD4W,I,kNApCbP,iBAAmB,WACjB,EAAKrX,MAAMyR,4BAA4B,CACrCC,OAAS,CACPhN,QAAU,EAAK1E,MAAM6X,a,4CAK3B,WAAU,IAEDA,EAAYnX,KAAKV,MAAjB6X,SAEP,OACE,yBAAKhX,UAAW,iBACd,yBACEA,UAAW,cACXC,QAASJ,KAAK2W,iBACdlF,MAAO,iCAEN0F,EACC,yBAAK7D,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KAzBJ,OAyBqBkE,EAAE,wfAG3B,yBAAKmM,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC5E,0BAAM+E,KA7BJ,OA6BqBkE,EAAE,wN,GA3BT7G,cC8Ef8W,I,kNA3EbC,0BAA4B,WAAO,IACzBjT,EAAa,EAAK9E,MAAlB8E,SAEJkT,GAAa,EAEjB,GAAGlT,EAAS,GAAGH,OAAO0D,OAAQ,CAC5B,IAAM4P,EAAYnT,EAAS,GAAGH,OAAOG,EAAS,GAAGH,OAAO0D,OAAO,GAC/DvD,EAASjC,SAAQ,SAAAqV,GACZA,EAAQvT,OAAO0D,OACb6P,EAAQvT,OAAOuT,EAAQvT,OAAO0D,OAAO,KAAO4P,IAC7CD,GAAa,GAGfA,GAAa,UAKjBA,GAAa,EAEf,OAAOA,G,EAGTG,kBAAoB,WAGlB,GAFmB,EAAKJ,4BAQjB,CAAC,IACEjT,EAAa,EAAK9E,MAAlB8E,SACFmT,EAAYnT,EAAS,GAAGH,OAAOG,EAAS,GAAGH,OAAO0D,OAAO,GAC/D,EAAKrI,MAAMyR,4BAA4B,CACrC2G,OAAS,CACPzT,OAAS,CAACsT,WAVd,EAAKjY,MAAMyR,4BAA4B,CACrCC,OAAS,CACP/M,OAAS,CAACK,IAAQC,gB,4CAe1B,WAEE,IAAM+S,EAAatX,KAAKqX,4BAExB,OACE,yBAAKlX,UAAW,iBACd,yBACEA,UAAW,cACXC,QAASJ,KAAKyX,kBACdhG,MAAS6F,EAAsC,yBAAzB,wBAEpBA,EAOA,yBAAKpZ,MAAM,KAAKC,OAAO,KAAKmV,MAAM,8BAChC,0BAAMrQ,KAAK,OAAO9E,OAAO,OAAQ+E,OAnE/B,OAmEkDhF,MAAM,IAAIF,EAAE,OAAOC,EAAE,YACzE,0BAAMgF,KAAK,OAAO9E,OAAO,OAAM+E,OApE7B,OAoEgDhF,MAAM,IAAIF,EAAE,KAAKC,EAAE,aARvE,yBAAKC,MAAM,KAAKC,OAAO,KAAKmV,MAAM,8BAChC,0BAAMnM,EAAE,2QAA2QlE,KA7DjR,SA8DF,0BAAMA,KAAK,OAAO9E,OAAO,MAAM0E,GAAG,QAAQK,OA9DxC,OA8D2DhF,MAAM,MAAMF,EAAE,IAAIC,EAAE,aACjF,0BAAMgF,KAAK,OAAO9E,OAAO,MAAM0E,GAAG,QAAQK,OA/DxC,OA+D2DhF,MAAM,MAAMF,EAAE,QAAQC,EAAE,mB,GA7D1EqC,cCgBrBqX,I,MAA4B,CAC9B,OAAW,CAAC,kBAAmB,aAAc,eAAgB,eAAgB,aAAc,OAAQ,SAAU,QAC7G,MAAU,CAAC,cAAe,oBAAqB,cAAe,YAAa,aAAe,gBAAiB,eAAgB,eAAgB,aAAc,OAAQ,SAAU,QAC3K,KAAS,CAAC,YAAa,aAAc,gBAAiB,eAAgB,eAAgB,aAAc,OAAQ,SAAU,QACtH,KAAS,CAAC,oBAAqB,cAAe,eAAgB,eAAgB,OAAQ,SAAU,QAChG,MAAU,CAAC,MAAO,oBAAqB,cAAe,eAAgB,eAAgB,aAAc,OAAQ,SAAU,QACtH,MAAU,CAAC,cAAe,eAAgB,eAAgB,OAAQ,SAAU,QAC5E,KAAS,CAAC,OAAQ,aAAc,OAAQ,SAAU,QAClD,QAAY,CAAC,MAAO,OAAQ,SAAU,UAGpCC,GAA+B,CAAC,eAAgB,eAAgB,OAAQ,QAAS,SAAU,QAwNhFC,G,kDApNb,WAAYvY,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAMfwR,4BAA8B,SAAChS,GAC3BA,EAAK8D,GAAK,EAAKvD,MAAMwY,iBAAiBtV,KAAI,SAACgV,GAAD,OAAaA,EAAQ3U,MAC/D,EAAKvD,MAAMyR,4BAA4BhS,IATf,EAY5B6G,4BAA8B,SAACjI,GAC3B,EAAKmD,SAAS,CAACnD,wBAbS,EAyB5Boa,eAAiB,SAACtY,GAEd,IAAMuY,EAAsC,OAA1B,EAAK1Y,MAAM2Y,YAA4C,UAArBxY,EAAEgK,OAAOyO,SAAoE,SAA7CzY,EAAEgK,OAAO0O,aAAa,mBAC7F,cAAV1Y,EAAEkD,KAAwBqV,IAIV,IAAdvY,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACV,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,OAEzBlD,EAAE+N,iBACF,EAAK8K,4BAPL7Y,EAAE+N,iBACF,EAAKuJ,yBA5BX,EAAKpY,MAAQ,CACXhB,mBAAqB,MAHG,E,yDAgB5B,SAAsBoQ,GAElB,SADsB/N,KAAKV,MAAMwY,iBAAiBnQ,SAAWoG,EAAU+J,iBAAiBnQ,QAAYoG,EAAU+J,iBAAiBnQ,OAAS,K,oBAwB5I,WAAU,IAAD,OACC4Q,EAAoB,GAApB,EAKEvY,KAAKV,MAHLwY,EAFF,EAEEA,iBACAU,EAHF,EAGEA,YACAtC,EAJF,EAIEA,UAEJuC,EAAiB,gBACjBC,EAAkB,KAClBC,EAAc,KAEZC,EAAcd,EAAiBtV,KAAI,SAAAgV,GACrC,OAAOA,EAAQ3U,MAGnB,GAA+B,IAA5BiV,EAAiBnQ,OAChB+Q,EAAkBf,GAA0BG,EAAiB,GAAGhZ,WAC7D,GAAIgZ,EAAiBnQ,OAAS,EAAG,CACpC+Q,EAAe,UAAOd,IACtB,IAAIiB,GAAe,EACnBf,EAAiB3V,SAAQ,SAAAqV,GACD,UAAjBA,EAAQ1Y,OACP+Z,GAAe,MAGpBA,GACCH,EAAgBI,QAAQ,eAGhC,GAAGJ,EAAiB,CAuHhBD,GAAkB,aAElB,IACMM,EAAsC,IAzH5CJ,EAAcD,EAAgBlW,KAAI,SAAAwW,GAC9B,OAAQA,GACJ,IAAK,kBACD,OAAO,kBAAC,GAAD,CACKrW,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClCxH,UAAWsG,EAAiB,GAAG/R,gBAC/BgL,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,cACD,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC/G,cAAe6F,EACf/G,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,oBACD,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC/G,cAAe6F,EAAiB,GAAG/U,OACnCgO,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,cACD,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC/G,cAAe6F,EAAiB,GAAG/U,OACnCD,iBAAkBgV,EAAiB,GAAGhV,iBACtCiO,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,aACL,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC1V,UAAWwU,EAAiB,GAAGxU,UAC/BR,iBAAkBgV,EAAiB,GAAGhV,iBACtCiO,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE3C,IAAK,YACD,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC1V,UAAWwU,EAAiB,GAAGxU,UAC/BR,iBAAkBgV,EAAiB,GAAGhV,iBACtCiO,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,gBACD,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC1V,UAAWwU,EAAiB,GAAGxU,UAC/ByN,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,OACD,OAAO,kBAAC,GAAD,CACKgF,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClCjV,KAAM+T,EAAiB,GAAG/T,KAC1BmS,UAAWA,EACXnF,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,eACD,OAAO,kBAAC,GAAD,CACKmB,KAAK,UACL6D,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC1C,2BAA4B,EAAKhX,MAAMgX,2BACvCC,IAAKqC,IAErB,IAAK,eACD,OAAO,kBAAC,GAAD,CACK9Z,KAAK,WACL6D,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC1C,2BAA4B,EAAKhX,MAAMgX,2BACvCC,IAAKqC,IAErB,IAAK,QACD,OAAO,kBAAC,GAAD,CACHjW,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC5U,SAAU0T,EACV/G,4BAA6B,EAAKA,8BAE1C,IAAK,aACD,OAAO,kBAAC,GAAD,CACHpO,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClC7B,SAAUW,EAAiB,GAAG9T,OAC9B+M,4BAA6B,EAAKA,8BAE1C,IAAK,OACD,OAAO,kBAAC,GAAD,CAAepO,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,KAC5D,IAAK,SACD,OAAO,kBAAC,GAAD,CACKrW,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClCjC,qBAAsB,EAAKzX,MAAMyX,uBAEjD,IAAK,MACD,OAAO,kBAAC,GAAD,CACKpU,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,GAClCnP,IAAKiO,EAAiB,GAAGjO,IACzBkH,4BAA6B,EAAKA,4BAClCnL,4BAA6B,EAAKA,4BAClCjI,mBAAoB,EAAKgB,MAAMhB,qBAE/C,IAAK,OACD,OAAO,kBAAC,GAAD,CAAmBsb,QAAStB,GAA0BG,EAAiB,GAAGhZ,MAAO6D,IAAG,UAAKmV,EAAiB,GAAGjV,GAAzB,YAA+BmW,KAC9H,QACE,OAAO,UAOoBrR,OAAW,EAC1CuR,EAAmBV,EAAYta,MAAM,EACrCib,EAAaX,EAAYxa,EAAEkb,EAAkBH,EAC7CK,EAAWZ,EAAYva,EAJE,GAM/Bsa,EAAkBzJ,KAAlB,UAA4BqK,EAA5B,MACAZ,EAAkB1J,IAAlB,UAA2BuK,EAA3B,MAIJ,OACI,yBAAKjZ,UAAWsY,EAAgB3M,MAAOyM,GACnCI,O,GA9MYrY,aChCtB+Y,I,wDAEF,WAAY/Z,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAUjB+Z,WAAa,WACT,EAAKxY,SAAS,CACVyY,kBAAmB,EACnBC,mBAAoB,EACpBC,iBAAkB,EAClBC,oBAAqB,KAdzB,EAAK/a,MAAQ,CACX4a,kBAAmB,EACnBC,mBAAoB,EACpBC,iBAAkB,EAClBC,oBAAqB,GAEvB,EAAKC,kBAAoB,KARD,E,0CAoB5B,WAAU,IAEFnB,EACAxY,KAAKV,MADLkZ,YAFC,EAUDxY,KAAKrB,MAJL4a,EANC,EAMDA,iBACAC,EAPC,EAODA,kBACAC,EARC,EAQDA,gBACAC,EATC,EASDA,mBAGEE,EAAkB,CACpBzb,OAAM,QACND,MAAK,MACL0N,UAAS,sBAAmB4M,EAAYxa,EAA/B,gBAGP6b,EAAmB,CACrB1b,OAAM,QACND,MAAK,MACL0N,UAAS,sBAAmB4M,EAAYxa,EAAEwa,EAAYta,MAA7C,gBAGP4b,EAAiB,CACnB3b,OAAM,MACND,MAAK,QACL0N,UAAS,2BAAwB4M,EAAYva,EAApC,WAGP8b,EAAoB,CACtB5b,OAAM,MACND,MAAK,QACL0N,UAAS,2BAAwB4M,EAAYva,EAAEua,EAAYra,OAAlD,WAmBb,OAhBGob,IACCK,EAAgB/C,QAAU,IAG3B2C,IACCK,EAAiBhD,QAAU,IAG5B4C,IACCK,EAAejD,QAAU,IAG1B6C,IACCK,EAAkBlD,QAAU,IAI5B,yBAAK1W,UAAU,UACX,yBAAKA,UAAU,QAAQ2L,MAAO8N,IAC9B,yBAAKzZ,UAAU,QAAQ2L,MAAO+N,IAC9B,yBAAK1Z,UAAU,QAAQ2L,MAAOgO,IAC9B,yBAAK3Z,UAAU,QAAQ2L,MAAOiO,O,gCAK1C,SAAmB5O,GACf,IAAM6O,EAAcha,KAAKV,MAAMkZ,YAAYxa,EAAImN,EAAUqN,YAAYxa,EAC/Dic,EAAaja,KAAKV,MAAMkZ,YAAYxa,EAAImN,EAAUqN,YAAYxa,EAC9Dkc,EAAiBla,KAAKV,MAAMkZ,YAAYta,QAAUiN,EAAUqN,YAAYta,MACxEic,EAAWna,KAAKV,MAAMkZ,YAAYva,EAAIkN,EAAUqN,YAAYva,EAC5Dmc,EAAapa,KAAKV,MAAMkZ,YAAYva,EAAIkN,EAAUqN,YAAYva,EAC9Doc,EAAkBra,KAAKV,MAAMkZ,YAAYra,SAAWgN,EAAUqN,YAAYra,OAC1EU,EAAW,IAGdmb,GAKQC,GAKAC,KATPrb,EAAS2a,mBAAoB,EAC7B3a,EAAS0a,kBAAmB,EAC5Be,aAAata,KAAK2Z,mBAClB3Z,KAAK2Z,kBAAoB7Q,OAAOyR,WAAWva,KAAKsZ,WANhC,QAmBhBa,GAKMC,GAKAC,KATNxb,EAAS4a,iBAAkB,EAC3B5a,EAAS6a,oBAAqB,EAC9BY,aAAata,KAAK2Z,mBAClB3Z,KAAK2Z,kBAAoB7Q,OAAOyR,WAAWva,KAAKsZ,WAvBhC,OAoCjBlY,OAAOoZ,KAAK3b,GAAU8I,OAAS,GAC9B3H,KAAKc,SAASjC,O,GAjILyB,cA6SNma,G,qKArKX,SAAgBhb,GAAI,IAAD,OACT0E,EAAenE,KAAKrB,MACpBmZ,EAAmB,GACzB1W,OAAOoZ,KAAKxa,KAAKrB,MAAMoG,cAAc5C,SAAQ,SAAAC,GACtC,EAAKzD,MAAMoG,aAAa3C,GAAM4C,WAAa,EAAKrG,MAAMsG,QACrD6S,EAAiBzV,KAAK,EAAK1D,MAAMyF,SAAShC,OAGlD,IAAMvD,EAAW,GACjB,GAAGiZ,EAAkB,CACjB,IAAM4C,EAAe,eAAOvW,EAAaC,UACzC,GAAG0T,EAAiBnQ,OAAS,EAAG,CAC5B,IAAM6Q,EAAcxY,KAAK2a,qCAAqC7C,EAAkB3T,EAAaK,UAAWL,EAAaS,QAAST,EAAaW,SACrI8V,GAAuBpC,EAAYqC,SAAYpb,EAAEmB,UAAUuD,EAAaK,WAAYgU,EAAYqC,SAChGC,GAAuBtC,EAAYuC,UAAatb,EAAEoB,UAAUsD,EAAaK,WAAYgU,EAAYuC,UACvGjD,EAAiB3V,SAAQ,SAAAC,GACrB,IAAMqC,EAAU,eAAOiW,EAAgBtY,EAAKS,KAC5C6X,EAAgBtY,EAAKS,IAAM4B,EAC3B,IAAMuW,EAAgB,eAAOvW,EAAW1B,QACxC0B,EAAW1B,OAASiY,EAEpBvW,EAAW1B,OAAO7E,OAAS0c,EAC3BnW,EAAW1B,OAAO5E,QAAU2c,EAC5B,IAAMG,EAAkBxW,EAAW1B,OAAO/E,EAAEwa,EAAY0C,KAClDC,EAAkB1W,EAAW1B,OAAO9E,EAAEua,EAAY4C,KAKxD,GAHA3W,EAAW1B,OAAO/E,EAAKyG,EAAW1B,OAAO/E,EAAEid,EAAkBA,EAAgBL,EAC7EnW,EAAW1B,OAAO9E,EAAKwG,EAAW1B,OAAO9E,EAAEkd,EAAkBA,EAAgBL,EAE1ErW,EAAWuB,aAAc,CACxBvB,EAAWnB,UAAX,eAA2BmB,EAAWnB,WACtC,IAAM+X,GAA+BX,EAAgBtY,EAAKS,IAAIE,OAAO7E,MAASuB,EAAEmB,UAAUuD,EAAaK,WAAckW,EAAgBtY,EAAKS,IAAIE,OAAO7E,MACrJwc,EAAgBtY,EAAKS,IAAIS,UAAUC,SAAW8X,EAA8BX,EAAgBtY,EAAKS,IAAIS,UAAUC,kBAGpH,GAA+B,IAA5BuU,EAAiBnQ,QAAgBmQ,EAAiB,GAAGnT,WAAY,CAEvE,IAAI6S,EAAUkD,EAAgB5C,EAAiB,GAAGjV,IAC5C4B,EAAU,eAAO+S,GACvBkD,EAAgB5C,EAAiB,GAAGjV,IAAM4B,EAC1C,IAAMuW,EAAgB,eAAOvW,EAAW1B,QAIxC,GAHA0B,EAAW1B,OAASiY,EACpBA,EAAiB9c,OAASuB,EAAEmB,UAAUuD,EAAaK,UACnDwW,EAAiB7c,QAAUsB,EAAEmB,UAAUuD,EAAaK,UACjDgT,EAAQxR,aAAc,CACrBvB,EAAWnB,UAAX,eAA2BmB,EAAWnB,WACtC,IAAM+X,GAA+B5W,EAAW1B,OAAO7E,MAASuB,EAAEmB,UAAUuD,EAAaK,WAAcC,EAAW1B,OAAO7E,MACzHuG,EAAWnB,UAAUC,SAAW8X,EAA8B5W,EAAWnB,UAAUC,eAEpF,GAA+B,IAA5BuU,EAAiBnQ,OAAc,CAErC,IAAI6P,EAAUkD,EAAgB5C,EAAiB,GAAGjV,IAC5C4B,EAAU,eAAO+S,GACvBkD,EAAgB5C,EAAiB,GAAGjV,IAAM4B,EAC1C,IAAMuW,EAAgB,eAAOvW,EAAW1B,QAIxC,GAHA0B,EAAW1B,OAASiY,EACpBvW,EAAW1B,OAAO7E,OAASuB,EAAEmB,UAAUuD,EAAaK,UACpDC,EAAW1B,OAAO5E,QAAUsB,EAAEoB,UAAUsD,EAAaK,UAClDC,EAAWuB,aAAc,CACxB,IAAMqV,GAA+B5W,EAAW1B,OAAO7E,MAAQuB,EAAEmB,UAAUuD,EAAaK,WAAcC,EAAW1B,OAAO7E,MACxHuG,EAAWnB,UAAUC,SAAW8X,EAA8B5W,EAAWnB,UAAUC,UAG3F1E,EAASuF,SAAWsW,EACpB1a,KAAKc,SAASjC,M,6BAKtB,WACImB,KAAKc,SAAS,CACVoE,WAAY,M,mCAIpB,SAAsB6I,GASlB,OARqBA,EAAUyK,YAAYra,SAAW6B,KAAKV,MAAMkZ,YAAYra,QAC5E4P,EAAUyK,YAAYta,QAAU8B,KAAKV,MAAMkZ,YAAYta,OACvD6P,EAAUyK,YAAYxa,IAAMgC,KAAKV,MAAMkZ,YAAYxa,GACnD+P,EAAUyK,YAAYva,IAAM+B,KAAKV,MAAMkZ,YAAYva,GACnD8P,EAAUyK,YAAY7J,KAAO3O,KAAKV,MAAMkZ,YAAY7J,IACpDZ,EAAUyK,YAAY5J,KAAO5O,KAAKV,MAAMkZ,YAAY5J,IACpDb,EAAUuN,YAActb,KAAKV,MAAMgc,Y,oBAKxC,WAAU,IAAD,EAC8Btb,KAAKV,MAAhCkZ,EADH,EACGA,YACF+C,EAAgB,CAClB5P,QAAS,QAHR,EACgB2P,YAMjBC,EAAc5P,QAAU,SAE5B,IAAM6P,EAAgB,CAClBpN,SAAW,WACXjQ,OAAM,OACND,MAAK,OACL2Q,IAAG,IACHC,KAAI,IACJlD,UAAS,sBAAmB4M,EAAY7J,GAAG,EAAlC,cAA2C6J,EAAY5J,GAAG,EAA1D,WAGP6M,EAAuB,CACzBzd,EAAIwa,EAAYxa,EAChBC,EAAIua,EAAYva,EAChBE,OAASqa,EAAYra,OACrBD,MAAQsa,EAAYta,OAGrBud,EAAqBvd,MAAQ,IAC5Bud,EAAqBzd,GAAKyd,EAAqBvd,MAC/Cud,EAAqBvd,OAAsC,EAA9Bud,EAAqBvd,OAGnDud,EAAqBtd,OAAS,IAC7Bsd,EAAqBxd,GAAKwd,EAAqBtd,OAC/Csd,EAAqBtd,QAAwC,EAA/Bsd,EAAqBtd,QAGvD,IAAMud,EAAyB,CAC3BtN,SAAW,WACXjQ,OAAM,UAAMsd,EAAqBtd,OAA3B,MACND,MAAK,UAAMud,EAAqBvd,MAA3B,MACL2Q,IAAG,IACHC,KAAI,IACJlD,UAAS,sBAAmB6P,EAAqBzd,EAAxC,cAAiDyd,EAAqBxd,EAAtE,WAGb,OACI,oCACA,kBAAC,GAAD,CACIua,YAAaA,IAEjB,yBAAKrY,UAAU,iBAAiB2L,MAAOyP,GACnC,yBAAKpb,UAAU,qBAAqB2L,MAAO4P,IAC3C,yBAAK5P,MAAO0P,EAAerd,OAAO,KAAKD,MAAM,KAAKqV,QAAQ,eACtD,4BACA1Q,GAAI,gBACJ8L,GAAI,EACJC,GAAI,EACJ+M,EAAG,EACH1Y,KAAM,QACNC,OAAQ,OACRE,YAAa,EACbD,cAAe,GACfyY,OAAQ,qB,+BASxB,WACI5b,KAAKV,MAAMK,oBAAoB,gBAAiB,CAC5C,gBAAoBK,KAAK6b,gBACzB,eAAmB7b,KAAK8b,sB,GAlKdxb,aChBPyb,I,wKApHX,SAAatc,GACT,IAAMuc,EAAYvc,EAAEgK,OAAO5G,GACrBoZ,EAAgBxc,EAAE4Y,QACxBrY,KAAKkc,wBAAwBF,EAAWC,K,oCAG5C,WACIE,QAAQC,IAAI,gBACZ,IAAMC,EAAqBrc,KAAKsc,oBAAoBtc,KAAKrB,MAAMoG,cAAcvC,KAAI,SAAAgV,GAAO,OAAIA,EAAQ3U,MACpG7C,KAAKsW,2BAA2B,UAAW+F,K,uCAG/C,SAA0B5c,GAAI,IAAD,OAErB+E,EACAxE,KAAKrB,MADL6F,UAGEkW,EAAe,eAAO1a,KAAKrB,MAAMyF,UACjCmY,EAAmBnb,OAAOoZ,KAAKxa,KAAKrB,MAAMoG,cAAcyX,QAAO,SAAApa,GACjE,QAAG,EAAKqa,WAAWra,MAKpBma,EAAiB5U,SAChB4U,EAAiBpa,SAAQ,SAAAqV,GACrB,IAAM/S,EAAU,eAAOiW,EAAgBlD,IACjC1M,EAAS,eAAO4P,EAAgBlD,GAASzU,QAC/C+H,EAAU9M,GAAKyB,EAAEmB,UAAU4D,EAC3BsG,EAAU7M,GAAKwB,EAAEoB,UAAU2D,EAC3BC,EAAW1B,OAAS+H,EACpB4P,EAAgBlD,GAAW/S,KAE/BzE,KAAKc,SAAS,CACVsD,SAAWsW,O,kCAKvB,WACI1a,KAAKc,SAAS,CACVoE,WAAY,M,mCAIpB,SAAsB6I,GAOlB,OANqBA,EAAUyK,YAAYuC,YAAc/a,KAAKV,MAAMkZ,YAAYuC,WAC/EhN,EAAUyK,YAAYqC,WAAa7a,KAAKV,MAAMkZ,YAAYqC,UAC1D9M,EAAUyK,YAAY0C,OAASlb,KAAKV,MAAMkZ,YAAY0C,MACtDnN,EAAUyK,YAAY4C,OAASpb,KAAKV,MAAMkZ,YAAY4C,MACtDrN,EAAU2O,YAAY/U,SAAW3H,KAAKV,MAAMod,YAAY/U,S,oBAK7D,WAAU,IACE6Q,EAAgBxY,KAAKV,MAArBkZ,YACR,OACI,0BACI3V,GAAI,uBACJ1E,OAAQqa,EAAYuC,UACpB7c,MAAOsa,EAAYqC,SACnB7c,EAAGwa,EAAY0C,KACfjd,EAAGua,EAAY4C,KACfpY,YAAa,M,gCAKzB,SAAmBmI,GAAY,IAAD,OAEpBwR,EAAkB3c,KAAKV,MAAMod,YAC7BE,EAAezR,EAAUuR,YAEzBG,EAAkBD,EAAaJ,QAAO,SAAAhF,GACxC,OAAyC,IAAtCmF,EAAgB7I,QAAQ0D,MAMzBsF,EAAgBH,EAAgBH,QAAO,SAAAhF,GACzC,OAAsC,IAAnCoF,EAAa9I,QAAQ0D,MAMzBqF,EAAgBlV,OAAS,GACxBkV,EAAgB1a,SAAQ,SAAAU,GACpB,EAAKvD,MAAM6F,kBAAkBtC,MAIlCia,EAAcnV,OAAS,GACtBmV,EAAc3a,SAAQ,SAAAU,GAClB,EAAKvD,MAAMK,oBAAoBkD,EAAI,CAC/B,iBAAqB,EAAKka,uBAC1B,gBAAoB,EAAKC,0BACzB,eAAmB,EAAKC,qBACxB,aAAiB,EAAKC,oB,+BAQtC,WACIld,KAAKV,MAAMK,oBAAoB,uBAAwB,CACnD,gBAAoBK,KAAKgd,0BACzB,eAAmBhd,KAAKid,2B,GAjHV3c,cCApB6c,I,kNAEFpd,YAAc,SAACN,GACX,EAAKH,MAAM8d,SAAX,oBAAiC,EAAK9d,MAAM+d,Y,4CAGhD,WACI,OAAO,yBACHld,UAAW,mBACXC,QAASJ,KAAKD,YACdud,cAAetd,KAAKud,gBAEnBvd,KAAKV,MAAM+d,c,GAZC/c,cA6cRkd,G,kDAxbb,WAAYle,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAoBjBke,eAAiB,SAAChe,GACdA,EAAEmC,kBACF,EAAKd,SAAS,CACV4c,aAAe,EAAK/e,MAAM+e,YAC1B1e,QAAU,MAzBU,EA6B5B2e,SAAW,WACP,IAAMC,EAAmB,EAAKte,MAAMue,WAEpC,GADAD,EAAiB7Y,aAAe,EAAK+Y,iBAAiBF,EAAiB7Y,cACpE3D,OAAOoZ,KAAKoD,EAAiBxZ,UAAUuD,OAAS,EAAG,CAClD,IAAMoW,EAAc,CAChB3Z,SAAWwZ,EAAiBxZ,SAC5BW,aAAe6Y,EAAiB7Y,aAChCiZ,UAAYJ,EAAiBI,UAC7BxZ,UAAYoZ,EAAiBpZ,UAC7BI,QAAUgZ,EAAiBhZ,QAC3BE,QAAU8Y,EAAiB9Y,SAE/BgE,OAAOmV,aAAaC,QA7CT,iBA6CoCC,KAAKC,UAAUL,SAE9DjV,OAAOmV,aAAaI,WA/CT,mBAIS,EAiD5BC,cAAgB,SAAC7e,GACb,IAAMme,EAAmB,EAAKte,MAAMue,WACpCD,EAAiB7Y,aAAe,EAAK+Y,iBAAiBF,EAAiB7Y,cAEvE,IAAMgZ,EAAc,CAChB3Z,SAAWwZ,EAAiBxZ,SAC5BW,aAAe6Y,EAAiB7Y,aAChCiZ,UAAYJ,EAAiBI,UAC7BxZ,UAAYoZ,EAAiBpZ,UAC7BI,QAAUgZ,EAAiBhZ,QAC3BE,QAAU8Y,EAAiB9Y,SAG3BuY,EAAQ,oBAAgBO,EAAiBI,WAC7ClV,OAAOmV,aAAaC,QAAQb,EAAUc,KAAKC,UAAUL,IACrD,EAAKjd,SAAS,CACV4c,aAAc,EACd1e,QAAU,MAlEU,EAsE5Buf,WAAa,SAAC9e,GACV,IAAMme,EAAmB,EAAKte,MAAMue,WACpCD,EAAiB7Y,aAAe,EAAK+Y,iBAAiBF,EAAiB7Y,cACvE,IAAMgZ,EAAc,CAChB3Z,SAAWwZ,EAAiBxZ,SAC5BW,aAAe6Y,EAAiB7Y,aAChCiZ,UAAYJ,EAAiBI,UAC7BxZ,UAAYoZ,EAAiBpZ,UAC7BI,QAAUgZ,EAAiBhZ,QAC3BE,QAAU8Y,EAAiB9Y,SAE3BuY,EAAQ,yBAAqBO,EAAiBI,UAAtC,SACRQ,EAAI/Q,SAASgR,cAAc,KAC3BC,EAAO,IAAIC,KAAK,CAACR,KAAKC,UAAUL,IAAe,CAACjf,KAAM,eAC1D0f,EAAEI,KAAO/U,IAAIgV,gBAAgBH,GAC7BF,EAAEM,SAAWzB,EACbmB,EAAEO,QACF,EAAKje,SAAS,CACV4c,aAAc,EACd1e,QAAU,MAzFU,EA6F5BggB,oBAAsB,SAAC3B,GACnB,IAAMqB,EAAO5V,OAAOmV,aAAagB,QAAQ5B,GACnC6B,EAAaf,KAAKgB,MAAMT,GACxB/f,EAAQyC,OAAOC,OAAO,GAAI,EAAK/B,MAAMse,iBAAkBsB,GAC7D,EAAK5f,MAAM8f,6BAA6BzgB,GACxC,EAAKmC,SAAS,CACV4c,aAAc,EACd1e,QAAU,MApGU,EAwG5Boe,SAAW,WACP,IAcMiC,EAAY5R,SAASgR,cAAc,SACzCY,EAAUvgB,KAAK,OACfugB,EAAUC,OAAO,QACjBD,EAAUE,SAjBO,SAAC9f,GACd,IAAIif,EAAOjf,EAAEgK,OAAO+V,MAAM,GAC1B,GAAKd,EAAL,CAGA,IAAIe,EAAS,IAAIC,WAMjBD,EAAOE,OALQ,SAAClgB,GACZ,IAAIif,EAAOjf,EAAEgK,OAAOmW,OACdjhB,EAAQyC,OAAOC,OAAO,GAAI,EAAK/B,MAAMse,iBAAkBO,KAAKgB,MAAMT,IACxE,EAAKpf,MAAM8f,6BAA6BzgB,IAG5C8gB,EAAOI,WAAWnB,KAMtBW,EAAUN,QAEV,EAAKje,SAAS,CACV4c,aAAc,EACd1e,QAAU,MA/HU,EAmI5B8gB,oBAAsB,SAACrgB,GACnB,IAAM+f,EAAQ,GACdpe,OAAOoZ,KAAK1R,OAAOmV,cAAc9b,SAAQ,SAAAC,GACrC,IAAmC,IAAhCA,EAAK0R,QAAQ,cAAsB,CAClC,IAAMuJ,EAAWjb,EAAK2R,QAAQ,aAAc,IAC5CyL,EAAMnd,KACF,kBAAC,GAAD,CACIM,IAAG,qBAAgB0a,GACnBA,SAAUA,EACVD,SAAU,EAAK4B,oBACfe,WAAY,EAAKC,kCAKb,IAAjBR,EAAM7X,QACL6X,EAAMnd,KAAK,yBAAKlC,UAAU,iBAAf,0CAIf,EAAKW,SAAS,CACV9B,QAAUwgB,KAxJU,EA4J5BS,aAAe,SAACxgB,GACZ,IAAMygB,EAASpX,OAAOqX,YAChBvC,EAAmB,EAAKte,MAAMue,WACpCD,EAAiB7Y,aAAe,EAAK+Y,iBAAiBF,EAAiB7Y,cACvE,IAAMgZ,EAAc,CAChB3Z,SAAWwZ,EAAiBxZ,SAC5BW,aAAe6Y,EAAiB7Y,aAChCiZ,UAAYJ,EAAiBI,UAC7BxZ,UAAYoZ,EAAiBpZ,UAC7BI,QAAUgZ,EAAiBhZ,QAC3BE,QAAU8Y,EAAiB9Y,SAE3BuY,EAAQ,oBAAgBO,EAAiBI,WAChBkC,EAAOE,QAAQC,SAASpB,QAAQ5B,KAEzDA,EAAWA,EAAS,KAAI,IAAIiD,MAAOC,YAAW,IAAID,MAAOE,cAE7DN,EAAOE,QAAQC,SAASnC,QAAQb,EAAUc,KAAKC,UAAUL,IACzDmC,EAAOE,QAAQC,SAASpB,QAAQ,iBAC3BwB,MAAK,SAACC,GACH,IAAIC,EAAgB,GACM,OAAvBD,EAAQ3hB,KAAKK,MACZuhB,EAAgB,CAACtD,IAEjBsD,EAAgBxC,KAAKgB,MAAMuB,EAAQ3hB,KAAKK,QAC1BiD,KAAKgb,GAE3B6C,EAAOE,QAAQC,SAASnC,QAAQ,gBAAiBC,KAAKC,UAAUuC,OAEpE,EAAK7f,SAAS,CACV4c,aAAc,EACd1e,QAAU,MA3LU,EAgM5B4hB,mBAAqB,SAACnhB,GACHqJ,OAAOqX,YACfC,QAAQC,SAASpB,QAAQ,iBAAiBwB,MAAK,SAAAC,GAClD,IAAIlB,EAAQ,GACTkB,EAAQ3hB,KAAKK,MAEZogB,EADkBrB,KAAKgB,MAAMuB,EAAQ3hB,KAAKK,OACxBoD,KAAI,SAAA6a,GAClB,OAAO,kBAAC,GAAD,CACH1a,IAAG,qBAAgB0a,GACnBA,SAAUA,EACVD,SAAU,EAAKyD,wBAIvBrB,EAAMnd,KAAK,yBAAKlC,UAAU,iBAAf,0CAIf,EAAKW,SAAS,CACV9B,QAAUwgB,QAnNM,EAwN5BqB,mBAAqB,SAACxD,GACHvU,OAAOqX,YACfC,QAAQC,SAASpB,QAAQ5B,GAC/BoD,MAAK,SAAAC,GACF,GAAGA,EAAQ3hB,KAAKK,MAAO,CACnB,IAAMT,EAAQyC,OAAOC,OAAO,GAAI,EAAK/B,MAAMse,iBAAkBO,KAAKgB,MAAMuB,EAAQ3hB,KAAKK,QACrF,EAAKE,MAAM8f,6BAA6BzgB,GACxC,EAAKmC,SAAS,CACV4c,aAAc,EACd1e,QAAU,UAjOE,EAwO5BghB,2BAA6B,WACzB,IAEIhC,EAFqB,EAAK1e,MAAMue,WAEhCG,UAGJlV,OAAOmV,aAAaI,WAApB,oBAA4CL,IAC5C,EAAK8C,WA/OmB,EAkP5BA,QAAU,WAEN,IACIC,GAAmB,EAIvB,GAL6BjY,OAAOmV,aAAagB,QAxPlC,oBA2PX8B,EAAmBjY,OAAOkY,QAAQ,6DAEnCD,EAAkB,CACjB,IAAMnD,EAAmB,EAAKte,MAAMue,WAC9BoD,EAAa,CACf7c,SAAW,GACXW,aAAe,GACfiZ,UAAY,cAAa,IAAIsC,MAAOY,qBAAqBnN,QAAQ,MAAO,IACxEvP,UAAY,IACZI,QAAU,EACVE,QAAU,GAERnG,EAAQyC,OAAOC,OAAO,GAAIuc,EAAkBqD,GAClD,EAAK3hB,MAAM8f,6BAA6BzgB,GACxC,EAAKmC,SAAS,CACV4c,aAAc,EACd1e,QAAU,OAvQM,EA4Q5BmiB,0BAA4B,WACxB,EAAK7hB,MAAM6hB,4BACX,EAAKrgB,SAAS,CACV4c,aAAc,EACd1e,QAAU,MA9Qd,EAAKL,MAAQ,CACX+e,aAAc,EACd1e,QAAU,GACVoiB,qBAAsB,GALA,E,oDAS5B,SAAiBrc,GACb,IAAMsc,EAAmB,eAAOtc,GAQhC,OAPA3D,OAAOoZ,KAAK6G,GAAqBlf,SAAQ,SAAAC,GACrC,IAAqB,IAAlBA,EAAK4C,SAAoB,CACxB,IAAMP,EAAU,eAAO4c,EAAoBjf,IAC3CqC,EAAWO,UAAW,EACtBqc,EAAoBjf,GAAQqC,MAG7B4c,I,oBAkQX,WAAU,IAAD,EAKDrhB,KAAKrB,MAHL+e,EAFC,EAEDA,YACA1e,EAHC,EAGDA,QACAoiB,EAJC,EAIDA,oBAEAE,EAAU,cACVC,EAAqB,GAOzB,OANI7D,IACA4D,GAAW,qBAEZtiB,EAAQ2I,OAAS,IAChB4Z,EAAqB,aAGrB,yBAAKphB,UAAW,UACZ,0BAAMA,UAAW,eAAjB,kBACA,0BAAMA,UAAW,aAAcC,QAASJ,KAAKyd,iBAC7C,yBAAKtd,UAAWmhB,GACZ,yBAAKnhB,UAAW,sBAChB,yBAAKA,UAAS,6BACV,yBAAKA,UAAS,6BAAwBohB,IAClC,yBAAKphB,UAAS,qBACV,yBACIA,UAAW,mBACXC,QAASJ,KAAK8gB,SAEd,yBAAKxN,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC1E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMkE,EAAE,sDAEZ,4CAEFia,GACE,oCACI,yBACIjhB,UAAW,mBACXC,QAASJ,KAAKigB,cAEd,yBAAK3M,MAAM,6BAA6BpV,MAAM,KAAKC,OAAO,KAAKoV,QAAQ,aACnE,uBAAG3H,UAAU,uDACT,0BAAMzE,EAAE,gIAAgIlE,KAAK,YAC7I,0BAAMkE,EAAE,+HAA+HlE,KAAK,YAC5I,6BAASue,GAAG,QAAQC,GAAG,QAAQ7S,GAAG,SAASD,GAAG,SAAS1L,KAAK,cAGpE,qDAEJ,yBACI9C,UAAW,mBACXC,QAASJ,KAAK4gB,oBAEd,yBAAKtN,MAAM,6BAA6BpV,MAAM,KAAKC,OAAO,KAAKoV,QAAQ,aACnE,uBAAG3H,UAAU,uDACT,0BAAMzE,EAAE,gIAAgIlE,KAAK,YAC7I,0BAAMkE,EAAE,+HAA+HlE,KAAK,YAC5I,6BAASue,GAAG,QAAQC,GAAG,QAAQ7S,GAAG,SAASD,GAAG,SAAS1L,KAAK,cAGpE,yDAITme,GACC,oCACI,yBACIjhB,UAAW,mBACXC,QAASJ,KAAKse,eAEd,yBAAKhL,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC1E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMkE,EAAE,gGAEZ,kDAEJ,yBACIhH,UAAW,mBACXC,QAASJ,KAAK8f,qBAEd,yBAAK5hB,MAAM,KAAKC,OAAO,KAAKmV,MAAM,8BAC9B,0BAAMnM,EAAE,iDAAiDlE,KAAK,QAAQJ,GAAG,UACzE,0BAAMsE,EAAE,8GAA8GlE,KAAK,QAAQJ,GAAG,QAAQ+I,UAAU,4BAE5J,qDAIZ,yBACIzL,UAAW,mBACXC,QAASJ,KAAKue,YAGd,yBAAKrgB,MAAM,KAAKC,OAAO,KAAKmV,MAAM,6BAA8BC,QAAQ,aACpE,0BAAMpM,EAAE,uLACR,0BAAMA,EAAE,sHAEZ,+CAEJ,yBACIhH,UAAW,mBACXC,QAASJ,KAAKod,UAEd,yBAAK9J,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC1E,0BAAMiJ,EAAE,uLACR,0BAAMA,EAAE,kHAEZ,iDAEJ,yBACIhH,UAAW,mBACXC,QAASJ,KAAKggB,4BAEd,yBAAK1M,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC1E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMkE,EAAE,0LAEZ,+CAEJ,yBACIhH,UAAW,mBACXC,QAASJ,KAAKmhB,2BAEd,yBAAK7N,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC1E,0BAAMiJ,EAAE,kBAAkBlE,KAAK,SAC/B,0BAAMkE,EAAE,6EAEZ,sDAGR,yBAAKhH,UAAW,qBACXnB,EAAQwD,KAAI,SAAAJ,GACT,OAAOA,Y,+BAUvC,WAEI,IAAMsf,EAAMjU,SAASkU,SAASC,gBAAgB,GAC3CF,KACiD,IAA/BA,EAAI5N,QAAQ,eAEzB9T,KAAKc,SAAS,CACVsgB,qBAAsB,KAKLtY,OAAOmV,aAAagB,QAjblC,sB,GAEF3T,iBCffuW,I,MAAS,0BA+PEC,G,kDA3Pb,WAAYxiB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAWjBwiB,oBAAsB,WAClB,EAAKjhB,SAAS,CACV4c,aAAe,EAAK/e,MAAM+e,YAC1B1e,QAAU,MAfU,EAmB5BgjB,iBAAmB,WAAM,MAQb,EAAKrjB,MAHLuT,EALa,EAKbA,KACA+P,EANa,EAMbA,SACAC,EAPa,EAObA,aAIAC,EACA,EAAKxjB,MADLwjB,QAGAA,IACAA,EAAU,EAAKC,yCAAyC9d,IAAQC,aAGpEuE,OAAO6Y,SAASU,KAAhB,YAA4BF,EAA5B,gBAGA,EAAKrhB,SAAS,CACVwhB,eAAgB,EAChBH,YAGJ,EAAK7iB,MAAMijB,iBAAiB,CACxBJ,UACAjQ,OACA+P,WACAC,kBAjDgB,EA0D5BM,sBAAwB,WAAO,IAAD,EAItB,EAAK7jB,MAFLwjB,EAFsB,EAEtBA,QACAD,EAHsB,EAGtBA,aAEEO,EAAO,iBAAaZ,GAAb,eAA0BM,EAA1B,qCAA8DD,GAC3EQ,UAAUC,UAAUC,UAAUH,IAhEN,EAmE5BI,iBAAmB,SAACpjB,GAChB,EAAKqB,SAAS,CACVoR,KAAOzS,EAAEgK,OAAOrK,SArEI,EAyE5B0jB,kBAAoB,SAACrjB,GACjB,EAAKqB,SAAS,CACVqhB,QAAU1iB,EAAEgK,OAAOrK,SA3EC,EA+E5B2jB,oBAAsB,SAACtjB,GACnB,EAAKqB,SAAS,CACVmhB,SAAWxiB,EAAEgK,OAAOrK,SAjFA,EAqF5B4jB,yBAA2B,SAACvjB,GACxB,EAAKqB,SAAS,CACVohB,aAAeziB,EAAEgK,OAAOrK,SAvFJ,EA2F5B6jB,gBAAkB,SAACxjB,GACfqJ,OAAOC,WAAWma,UAAU,EAAKvkB,MAAMwkB,aAAc,EAAKxkB,MAAMwjB,UA1FhE,EAAKxjB,MAAQ,CACT+e,aAAc,EACd4E,eAAgB,EAChBH,QAAU,KACVjQ,KAAO,GACP+P,SAAW,GACXC,aAAehc,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,WARlB,E,4EAsD5B,SAAyC+b,GACrC,OAAOA,EAAQpO,QAAQ,KAAM,KAAKA,QAAQ,KAAM,O,oBAwCpD,WAAU,IAAD,EASD/T,KAAKrB,MANL+e,EAHC,EAGDA,YACA4E,EAJC,EAIDA,cACAH,EALC,EAKDA,QACAjQ,EANC,EAMDA,KACA+P,EAPC,EAODA,SACAC,EARC,EAQDA,aAGAZ,EAAU,aACVC,EAAqB,GACrB6B,EAAgB,GAChBC,EAAgB,OAEhB3F,IACA4D,GAAW,oBAGZgB,IACCf,EAAqB,YACrB8B,EAAe,UACfD,EAAgB,SAGpB,IAAMrf,EAAI,UAAM8d,GAAN,eAAmBM,EAAnB,gBAEV,OACI,yBAAKhiB,UAAU,sBACf,yBACIA,UAAS,2BAAsBijB,GAC/BhjB,QAASJ,KAAK+hB,qBAEd,yBAAKzO,MAAM,6BAA6BnV,OAAO,KAAKoV,QAAQ,YAAYrV,MAAM,MAC1E,0BAAM+E,KAAMogB,EAAelc,EAAE,sWAGrC,yBAAKhH,UAAWmhB,GACR,yBAAKnhB,UAAW,qBAChB,yBAAKA,UAAS,4BACV,yBAAKA,UAAS,4BAAuBohB,IACjC,4DACCY,GACD,yBAAKhiB,UAAU,uBACV,8CACA,2BACIA,UAAU,mBACVmjB,YAAY,WACZlkB,MAAO+iB,EACP7P,SAAUtS,KAAK8iB,qBAKxB,yBAAK3iB,UAAU,uBACX,0CACA,2BACIA,UAAU,mBACVmjB,YAAY,YACZlkB,MAAO8S,EACPI,SAAUtS,KAAK6iB,oBAGvB,yBAAK1iB,UAAU,uBACX,8CACA,2BACIA,UAAU,mBACVmjB,YAAY,KACZlkB,MAAO6iB,EACP3P,SAAUtS,KAAK+iB,uBAUvB,yBAAK5iB,UAAU,uBACX,mDACA,2BACIA,UAAU,mBACVojB,aAAcrB,EACd5P,SAAUtS,KAAKgjB,4BAGvB,yBAAK7iB,UAAU,uBACX,4BACIA,UAAU,oBACVC,QAASJ,KAAKgiB,kBAFlB,oBAKJ,yBAAK7hB,UAAU,uBACX,4BACIA,UAAU,oBACVC,QAASJ,KAAKijB,iBAFlB,2BAMR,yBAAK9iB,UAAS,4BAAuBohB,IACjC,uDACA,yBAAKphB,UAAU,uBACX,+CAA2B,uBAAGA,UAAU,kBAAkBye,KAAM7a,GAAOA,IAE3E,yBAAK5D,UAAU,uBACX,mDAA+B,6BAAM+hB,IAEzC,yBAAK/hB,UAAU,uBACX,4BACIA,UAAU,oBACVC,QAASJ,KAAKwiB,uBAFlB,6BAcJ,yBAAKriB,UAAU,uBACX,4BACQA,UAAU,qBADlB,8B,+BAW5B,WACI,IAA2C,IAAxC2I,OAAO6Y,SAASU,KAAKvO,QAAQ,MAAc,CAC1C,IAAMqP,EAAera,OAAO6Y,SAASU,KAAKmB,MAAM,eAAe,GACzDrB,EAAUrZ,OAAO6Y,SAASU,KAAKmB,MAAM,eAAe,GAC1DxjB,KAAKc,SAAS,CACV2iB,YAAcN,EACdhB,iBAED,IAAkD,IAA9CrZ,OAAO6Y,SAAS/C,KAAK9K,QAAQ,YAAoB,CACxD,IAAMqP,EAAera,OAAO6Y,SAAS/C,KAAK4E,MAAM,yBAAyB,GACnErB,EAAUrZ,OAAO6Y,SAAS/C,KAAK4E,MAAM,qBAAqB,GAChExjB,KAAKc,SAAS,CACV2iB,YAAcN,EACdhB,iB,GAtPI7hB,a,QCVb,SAASojB,GAAYC,GACxB,IAAMC,EAAQxiB,OAAOC,OAAO,GAAIsiB,GAQhC,OAPEviB,OAAOoZ,KAAKoJ,GAAOzhB,SAAQ,SAAA0hB,GACtBC,MAAMC,QAAQH,EAAMC,IACrBD,EAAMC,GAAkB,GAAGG,OAAOJ,EAAMC,IACC,kBAA1BD,EAAMC,KACrBD,EAAMC,GAAkBH,GAAYE,EAAMC,QAGzCD,EAGJ,SAASK,GAAmCC,EAASC,GAQ1D,OAPGA,EAAMxc,OAAS,GACdwc,EAAMhiB,SAAQ,SAAAiiB,GACV,IAAMC,EAAaD,EAAOE,KAAKtV,MAAM,KACrCkV,EAAQG,EAAW,IAAIA,EAAW,IAAlC,eAA4CH,EAAQG,EAAW,IAAIA,EAAW,QAI/EH,EAGF,SAASK,GAAmBniB,GACjC,MAAuB,kBAATA,GAA8B,OAATA,EClBrC,IAAMoiB,GAAUC,EAAQ,IAsLPC,G,kDAlLb,WAAYplB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAYjBolB,WAAa,WAET,IAAMC,EAAO,aAAO,EAAKjmB,MAAMkmB,MACzBC,EAAU,aAAO,EAAKnmB,MAAMomB,SAC5BC,EAAiBJ,EAAQK,MACzBC,EAAmBJ,EAAWG,MAC9BE,EAAO,uBAAO,EAAKxmB,MAAMymB,MAAlB,CAAwBF,IAE/BG,EAAkBpB,GAAmC,CACvD7f,SAAQ,eAAO,EAAK9E,MAAM8E,UAC1BW,aAAY,eAAO,EAAKzF,MAAMyF,eAC/BigB,GAEHR,GAAQc,WAAWD,EAAiBL,GAEpC,EAAKlkB,SAAS,CACV+jB,KAAOD,EACPQ,KAAOD,EACPJ,QAAUD,IAEd,EAAKxlB,MAAM8f,6BAA6B,CACpCra,aAAgBsgB,EAAgBtgB,aAChCX,SAAWihB,EAAgBjhB,YAnCP,EAuC5BmhB,WAAa,WACT,IAAMJ,EAAO,aAAO,EAAKxmB,MAAMymB,MACzBI,EAAiBL,EAAQF,MAEzBI,EAAkBpB,GAAmC,CACvD7f,SAAQ,eAAO,EAAK9E,MAAM8E,UAC1BW,aAAY,eAAO,EAAKzF,MAAMyF,eAC/BygB,GAEHhB,GAAQc,WAAWD,EAAiBG,GAEpC,EAAK1kB,SAAS,CACVskB,KAAOD,IAGX,EAAK7lB,MAAM8f,6BAA6B,CACpCra,aAAgBsgB,EAAgBtgB,aAChCX,SAAWihB,EAAgBjhB,SAC3Bc,WAAY,KAzDQ,EA6I5B6S,eAAiB,SAACtY,GAEd,IACmB,IAAdA,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACV,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,IAEzBlD,EAAE+N,iBACqB,EAAK7O,MAAMkmB,KAAKld,OAAS,GAG5C,EAAKgd,kBAGN,IACY,IAAdllB,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACV,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,IAC3B,CACElD,EAAE+N,iBACqB,EAAK7O,MAAMymB,KAAKzd,OAAS,GAE5C,EAAK4d,eA/Jb,EAAK5mB,MAAQ,CACXkmB,KAAO,GACPO,KAAO,GACPL,QAAU,GACVU,iBAAmB,CACjBrhB,SAAQ,eAAO,EAAK9E,MAAM8E,UAC1BW,aAAY,eAAO,EAAKzF,MAAMyF,gBARV,E,0CA6D5B,WAEI,IAAM2gB,EAAiB1lB,KAAKrB,MAAMkmB,KAAKld,OAAS,EAC1Cge,EAAiB3lB,KAAKrB,MAAMymB,KAAKzd,OAAS,EAE1Cie,EAAiB,CACnBtX,WAAa,WAGdoX,GAAkBC,KACjBC,EAAetX,WAAa,WAGhC,IAAMuX,EAAa,CACfC,cAAgB,OAChBjP,QAAU,IAGX8O,IACCE,EAAWhP,QAAU,EACrBgP,EAAWC,cAAgB,OAG/B,IAAMC,EAAa,CACflP,QAAU,GACViP,cAAgB,QAQpB,OALGJ,IACCK,EAAWlP,QAAU,EACrBkP,EAAWD,cAAgB,OAK3B,yBAAK3lB,UAAW,eAAgB2L,MAAO8Z,GACnC,0BACIzlB,UAAW,kBACXC,QAASJ,KAAK2kB,WACd7Y,MAAOia,IAEX,0BACI5lB,UAAW,kBACXC,QAASJ,KAAKulB,WACdzZ,MAAO+Z,O,gCAOvB,WAAsB,IAEd3gB,EACAlF,KAAKV,MADL4F,UAGAugB,EACAzlB,KAAKrB,MADL8mB,iBAGJ,GAAGvgB,EAAW,CACV,IAAM8gB,EAAsB,CACxB5hB,SAAWpE,KAAKV,MAAM8E,SACtBW,aAAe/E,KAAKV,MAAMyF,cAExBkhB,EAAsBzB,GAAQ0B,YAAYT,EAAkBO,GAC5DG,EAAmB3B,GAAQ0B,YAAYF,EAAqBP,GAC/DU,EAAiBxe,OAAS,GAAKse,EAAoBte,OAAS,IAC3D3H,KAAKc,SAAS,CACV2kB,iBAAmB,CACfrhB,SAAQ,eAAOpE,KAAKV,MAAM8E,UAC1BW,aAAY,eAAO/E,KAAKV,MAAMyF,eAElC8f,KAAI,uBAAO7kB,KAAKrB,MAAMkmB,MAAlB,CAAwBsB,IAC5BpB,QAAO,uBAAO/kB,KAAKrB,MAAMomB,SAAlB,CAA2BkB,MAEtCjmB,KAAKV,MAAM8f,6BAA6B,CAACla,WAAY,Q,+BAgCjE,WACIuI,SAAS2Y,iBAAiB,UAAWpmB,KAAK+X,kB,kCAG9C,WACItK,SAAS4Y,oBAAoB,UAAWrmB,KAAK+X,oB,GA/K9BzM,iBC2DNgb,G,kDAzDb,WAAYhnB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAMjBgnB,oBAAsB,WAClB,EAAKzlB,SAAS,CACV0lB,eAAgB,KATI,EAa5BC,WAAa,SAAChnB,GACV,EAAKH,MAAMonB,gBAAgBjnB,EAAEgK,OAAOkD,WACpC,EAAK7L,SAAS,CACV0lB,eAAgB,KAdpB,EAAK7nB,MAAQ,CACX6nB,eAAgB,GAHM,E,0CAoB5B,WAAU,IAKFpX,GAAkB,EAMtB,OARIpP,KAAKrB,MADL6nB,gBAMApX,GAAkB,GAIlB,yBAAKjP,UAAW,iBACZ,yBAAKA,UAAW,mBACZ,0BACIA,UAAW,YACXiP,gBAAiBA,EACjBhP,QAASJ,KAAKumB,oBACdjX,OAAQtP,KAAKymB,WACbhX,gCAAgC,GAClCzP,KAAKV,MAAM0e,WACb,kBAAC,GAAD,CACIuE,iBAAkBviB,KAAKV,MAAMijB,oBAGrC,kBAAC,GAAD,CACInD,6BAA8Bpf,KAAKV,MAAM8f,6BACzChb,SAAUpE,KAAKV,MAAM8E,SACrBW,aAAc/E,KAAKV,MAAMyF,aACzBG,UAAWlF,KAAKV,MAAM4F,iB,GAnDdoG,iBC0LXqb,I,wDA5Lb,WAAYrnB,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAWfqnB,iBAAmB,SAACnnB,GAChB,GAAIA,EAAE2Y,QACF3Y,EAAE+N,iBACF,EAAKqZ,WAAWpnB,OACb,CACH,IAAMqnB,EAAoB,CACtBlmB,WAAsB,EAAVnB,EAAEsnB,OACdlmB,WAAsB,EAAVpB,EAAEunB,QAElB,EAAK1nB,MAAM2nB,cAAcH,KArBL,EAyB5BD,WAAa,SAACpnB,GAAO,IAAD,EAKZ,EAAKH,MAHLsF,EAFY,EAEZA,QACAE,EAHY,EAGZA,QACAN,EAJY,EAIZA,UAGE0iB,EAAMhhB,KAAKihB,KAAK1nB,EAAEunB,QACxBI,EAAgB5iB,EAAY0iB,EAAM,EAAI1iB,EAAiB,EAAJ0iB,EAAS,EAC5DG,EAAyB5nB,EAAE6I,QAAQ9D,EACnC8iB,EAAyB7nB,EAAE8I,QAAQ/D,EAGnC+iB,EAAa3iB,GAFcnF,EAAE6I,QAAQ8e,EAEcC,GACnDG,EAAa1iB,GAFcrF,EAAE8I,QAAQ6e,EAEcE,GAEnD,EAAKhoB,MAAMmoB,oBAAoB,CAC3B7iB,QAAU2iB,EACVziB,QAAU0iB,EACVhjB,UAAY4iB,KA5CQ,EAiD5BM,gBAAkB,SAACjoB,GACfA,EAAEmC,kBACF,EAAKd,SAAS,CACVJ,WAAajB,EAAE6I,QACf3H,WAAalB,EAAE8I,QACfof,cAAgBrH,KAAKsH,MACrBC,KAAO,YACPpL,WAAa,EAAKnd,MAAMmd,WAAWhd,EAAEgK,OAAO5G,IAC5CmZ,UAAYvc,EAAEgK,OAAO5G,KAEzB,EAAKilB,mBAAqBroB,EAAEsoB,QAC5B,EAAKC,mBAAqBvoB,EAAEwoB,QAE5B9L,QAAQC,IAAI3c,EAAEgK,OAAO5G,KA9DG,EAkE5BgZ,gBAAkB,SAACpc,GAAO,IAAD,EAOjB,EAAKd,MALLkpB,EAFiB,EAEjBA,KACA7L,EAHiB,EAGjBA,UACAS,EAJiB,EAIjBA,WACA/b,EALiB,EAKjBA,WACAC,EANiB,EAMjBA,WAQJ,GALA,EAAKrB,MAAM4oB,sBAAsB,CAC7BlqB,EAAKyB,EAAE6I,QAAQ,EAAKhJ,MAAMkF,UAAW,EAAKlF,MAAMsF,QAChD3G,EAAKwB,EAAE8I,QAAQ,EAAKjJ,MAAMkF,UAAW,EAAKlF,MAAMwF,UAGxC,cAAT+iB,GAAiC,aAATA,EAAqB,CAC5C,IAAIM,EAAe,EAAK7oB,MAAM6oB,aAAanM,GACrCoM,EAAwB,EAAKA,sBAAsB1nB,EAAYC,EAAYlB,EAAE6I,QAAS7I,EAAE8I,SAC9F9I,EAAEmC,kBACF,IAAMymB,EAA2B,cAATR,IAAyBO,EAC3CE,EAAmBH,GAAgBA,EAAatoB,iBAAmBuoB,EAMzE,IALwBA,IAA0B3L,GAA4B,eAAdT,GAA4C,kBAAdA,GAA+C,yBAAdA,IAE3HmM,EAAe,EAAK7oB,MAAM6oB,aAAX,MACf,EAAKrnB,SAAS,CAACkb,UAAY,WAE5BqM,EACC,EAAKvnB,SAAS,CACV+mB,KAAO,aAERM,GACCA,EAAavoB,iBACbuoB,EAAavoB,gBAAgBH,EAAGiB,EAAYC,EAAYlB,EAAEmB,UAAWnB,EAAEoB,gBAGxE,GAAGynB,EAAiB,CAEvB,IAAM1nB,EAAYnB,EAAEsoB,QAAQ,EAAKD,mBAC3BjnB,EAAYpB,EAAEwoB,QAAQ,EAAKD,mBACjC,EAAKF,mBAAqBroB,EAAEsoB,QAC5B,EAAKC,mBAAqBvoB,EAAEwoB,QAC5BxoB,EAAEmB,UAAYA,EACdnB,EAAEoB,UAAYA,EAEdsnB,EAAatoB,eAAeJ,EAAGiB,EAAYC,MA7G3B,EAkH5B4nB,cAAgB,SAAC9oB,GACb,IAAM0oB,EAAe,EAAK7oB,MAAM6oB,aAAa,EAAKxpB,MAAMqd,WAClDwM,EAAkBlI,KAAKsH,MAAQ,EAAKjpB,MAAMgpB,cAE1Cc,EADwB,EAAKL,sBAAsB,EAAKzpB,MAAM+B,WAAY,EAAK/B,MAAMgC,WAAYlB,EAAE6I,QAAS7I,EAAE8I,UACjEigB,EAAkB,IAC9C,aAApB,EAAK7pB,MAAMkpB,MAAwBY,GAYR,WAApB,EAAK9pB,MAAMkpB,MAAyC,cAApB,EAAKlpB,MAAMkpB,MAA6C,aAApB,EAAKlpB,MAAMkpB,MAAuBY,KACzGN,GAAgBA,EAAapoB,aAC5BooB,EAAapoB,YAAYN,EAAG,EAAKd,MAAM+B,WAAY,EAAK/B,MAAMgC,YAElE,EAAKG,SAAS,CACV+mB,KAAO,SACPnnB,WAAa,EACbC,WAAa,MAlBjBlB,EAAEmC,kBACCumB,GAAgBA,EAAaroB,eAC5BqoB,EAAaroB,cAAcL,GAG/B,EAAKqB,SAAS,CACV+mB,KAAO,SACPnnB,WAAa,EACbC,WAAa,MA9HvB,EAAKhC,MAAQ,CACXkpB,KAAM,SACNnnB,WAAa,EACbC,WAAa,GAEf,EAAKmnB,mBAAqB,EAC1B,EAAKE,mBAAqB,EAC1B,EAAKU,iBAAmB,KATE,E,yDA+I5B,SAAsBhoB,EAAYC,EAAYsG,EAAUC,GACpD,IAAMyhB,EAAuBjoB,EAAWC,GAAasG,EAASC,GAC9D,OAAQyhB,GAAuB,GAAKA,EAAsB,I,oBAG9D,WAAU,IAAD,OAYL,OACI,yBACI7c,MAZK,CACT8P,OAAS,UACTxN,SAAW,WACXS,IAAM,EACNC,KAAO,EACP3Q,OAAS,QACTD,MAAQ,QACR0qB,YAAc,QAMVC,cAAe7oB,KAAK0nB,gBACpBoB,cAAe9oB,KAAK6b,gBACpB9P,YAAa/L,KAAKuoB,cAClB1lB,GAAG,qBACHqM,IAAK,SAACC,GAAgB,EAAKuZ,iBAAmBvZ,IAE7CnP,KAAKV,MAAMb,Y,+BAKxB,WAAqB,IAAD,OAChBgP,SAAS2Y,iBAAiB,cAAc,SAAC3mB,GAGjC,EAAKd,MADLkpB,QAMR7nB,KAAK0oB,iBAAiBtC,iBAAiB,QAASpmB,KAAK4mB,iBAAiB,CAAEmC,SAAS,Q,GAzLxDzd,kBCuEhB0d,G,kDAtEb,WAAY1pB,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAKfwY,eAAiB,SAACtY,GAEd,IAAMuY,EAAsC,OAA1B,EAAK1Y,MAAM2Y,YAA4C,UAArBxY,EAAEgK,OAAOyO,SAAoE,SAA7CzY,EAAEgK,OAAO0O,aAAa,mBAC7F,cAAV1Y,EAAEkD,KAAwBqV,GAIV,IAAdvY,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACV,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,KAEzBlD,EAAE+N,iBACF,EAAKlO,MAAMgZ,2BACM,cAAV7Y,EAAEkD,KAAwBqV,EAEhB,YAAVvY,EAAEkD,KAAsBqV,EAEd,cAAVvY,EAAEkD,KAAwBqV,EAEhB,eAAVvY,EAAEkD,KAAyBqV,IAGlB,IAAdvY,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACX,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,OAAkBqV,GAE3CvY,EAAE+N,iBACF,EAAKlO,MAAM2pB,UAEK,IAAdxpB,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACX,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,OAAkBqV,GAE3CvY,EAAE+N,iBACF,EAAKlO,MAAM4pB,SAEK,IAAdzpB,EAAE2Y,SAA8B,MAAV3Y,EAAEkD,MACX,IAAdlD,EAAE4Y,SAA8B,MAAV5Y,EAAEkD,OAAkBqV,IAE3CvY,EAAE+N,iBACF,EAAKlO,MAAM6pB,SAlBX,EAAK7pB,MAAM8pB,sBAAsB,SAFjC,EAAK9pB,MAAM8pB,sBAAsB,QAFjC,EAAK9pB,MAAM8pB,sBAAsB,MAFjC,EAAK9pB,MAAM8pB,sBAAsB,SATjC3pB,EAAE+N,iBACF,EAAKlO,MAAMyX,yBATjB,EAAKpY,MAAQ,GAFa,E,0CAgD5B,WACI,OACI,yBACIkE,GAAG,kBACHE,OAAQ,CACJ4I,QAAS,Y,+BAOzB,WACI8B,SAAS2Y,iBAAiB,UAAWpmB,KAAK+X,kB,kCAG9C,WACItK,SAAS4Y,oBAAoB,UAAWrmB,KAAK+X,oB,GAnEvBzM,iBCiBf+d,I,kKAfX,WAAU,IAGAC,EAAa,CACfpY,gBAHclR,KAAKV,MAAMP,KAArB4E,OAMR,OACI,yBAAKxD,UAAU,2BAA2B2L,MAAOwd,GAC5CtpB,KAAKV,MAAMP,KAAKmT,U,GAVZ5R,cC2DNipB,G,kDAzDX,WAAYjqB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRZ,MAAQ,GACb,EAAK6qB,UAAY5Y,IAAM6Y,YACvB,EAAKC,gBAAkB,KACvB,EAAKC,WAAa,KALM,E,0CAQ5B,WAAU,IACEhmB,EAAU3D,KAAKV,MAAMP,KAArB4E,MAEF2lB,EAAa,CACf3lB,SAGJ,OACI,yBAAKxD,UAAU,8BAA8B+O,IAAKlP,KAAKwpB,UAAW1d,MAAOwd,GACrE,yBAAKprB,MAAM,KAAKC,OAAO,KAAKmV,MAAM,6BAA6BnT,UAAU,wBACrE,0BAAM8C,KAAMU,EAAOwD,EAAE,yHAExBnH,KAAKV,MAAMP,KAAKkjB,Y,gCAK7B,SAAmB9W,GAAY,IAAD,EAKtBnL,KAAKV,MAHLsF,EAFsB,EAEtBA,QACAE,EAHsB,EAGtBA,QACAN,EAJsB,EAItBA,UAGEyC,EAAWjH,KAAKV,MAAMP,KAAK6qB,gBAAgB5rB,EAAEwG,EAAWI,EAAQJ,EAChE0C,EAAWlH,KAAKV,MAAMP,KAAK6qB,gBAAgB3rB,EAAEuG,EAAWM,EAAQN,EAChEqlB,EAAQ1e,EAAUpM,KAAK6qB,gBAAgB5rB,EAAEmN,EAAU3G,UAAW2G,EAAUvG,QAAQuG,EAAU3G,UAC1FslB,EAAQ3e,EAAUpM,KAAK6qB,gBAAgB3rB,EAAEkN,EAAU3G,UAAW2G,EAAUrG,QAAQqG,EAAU3G,WAEvEqlB,IAAU5iB,GACT6iB,IAAU5iB,IAIhClH,KAAKwpB,UAAUO,QAAQC,QACnB,CACI,CAACpe,UAAS,sBAAkBie,EAAlB,eAA8BC,EAA9B,aACV,CAACle,UAAS,sBAAkB3E,EAAlB,eAAiCC,EAAjC,cAEhB,CACEjE,KAAM,WACNgnB,OAAQ,WACRC,SAAU,U,GApDL5pB,aCyHJ6pB,G,kDAtHb,WAAY7qB,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAUf6qB,qBAAuB,SAAC3qB,GACpB,EAAKqB,SAAS,CACVoR,KAAOzS,EAAEgK,OAAOrK,SAbI,EAiB5BirB,oBAAsB,SAAC5qB,GACnB,EAAKqB,SAAS,CACVqhB,QAAU1iB,EAAEgK,OAAOrK,SAnBC,EAuB5B2jB,oBAAsB,SAACtjB,GACnB,EAAKqB,SAAS,CACVmhB,SAAWxiB,EAAEgK,OAAOrK,SAzBA,EA6B5B4jB,yBAA2B,SAACvjB,GACxB,EAAKqB,SAAS,CACVohB,aAAeziB,EAAEgK,OAAOrK,SA/BJ,EAmC5BkrB,wBAA0B,WAAO,IAAD,EAMxB,EAAK3rB,MAEH4rB,EAAQ,CACVrI,aATwB,EAExBA,aAQAhQ,KAVwB,EAGxBA,KAQA+P,SAXwB,EAIxBA,SAQAE,QAZwB,EAKxBA,SASL,EAAK7iB,MAAMkrB,aAAaD,IA9CzB,EAAK5rB,MAAQ,CACTwjB,QAAU,EAAK7iB,MAAM6iB,QACrBD,aAAe,GACfhQ,KAAO,GACP+P,SAAW,IAPW,E,0CAqD5B,WAAU,IAAD,EAODjiB,KAAKrB,MAJLujB,EAHC,EAGDA,aACAhQ,EAJC,EAIDA,KACA+P,EALC,EAKDA,SACAE,EANC,EAMDA,QAGJ,OACI,yBAAKhiB,UAAW,0BACZ,yDACA,yBAAKA,UAAU,uBACX,8CACA,2BACIA,UAAU,mBACVmjB,YAAY,SACZlkB,MAAO+iB,EACP7P,SAAUtS,KAAKqqB,uBAGvB,yBAAKlqB,UAAU,uBACX,mDACA,2BACIA,UAAU,mBACVmjB,YAAY,YACZlkB,MAAO8S,EACPI,SAAUtS,KAAKoqB,wBAGvB,yBAAKjqB,UAAU,uBACX,mDACA,2BACIA,UAAU,mBACVmjB,YAAY,KACZlkB,MAAO6iB,EACP3P,SAAUtS,KAAK+iB,uBAGvB,yBAAK5iB,UAAU,uBACX,mDACA,2BACIA,UAAU,mBACVojB,aAAcrB,EACd5P,SAAUtS,KAAKgjB,4BAGvB,yBAAK7iB,UAAU,uBACX,4BACIA,UAAU,oBACVC,QAASJ,KAAKsqB,yBAFlB,eAKJ,yBAAKnqB,UAAU,uBACX,4BACIA,UAAU,oBACVC,QAASJ,KAAKV,MAAMmrB,iBAFxB,gB,GA7GMnqB,aCKpBkkB,GAAUC,EAAQ,IAGlBiG,GAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAGtDC,GAAO,sCA2bIC,G,kDAvbb,WAAYtrB,EAAOC,GAAU,IAAD,uBAC1B,cAAMD,EAAOC,IAwBfsrB,aAAe,SAAC1H,EAAchB,GAC1B,IAAMtjB,EAAW,CACbisB,cAAe,GAEhB3H,IACCtkB,EAASskB,aAAeA,GAEzBhB,IACCtjB,EAASsjB,QAAUA,GAEvB,EAAKrhB,SAASjC,IAnCU,EAsC5B2rB,aAAe,SAACD,GACZ,IAAM1rB,EAAWuC,OAAOC,OAAO,GAAIkpB,EAAO,CAACO,cAAe,IAC1D,EAAKhqB,SAASjC,GACd,EAAKksB,+BAA+BR,IAzCZ,EA4C5BE,gBAAkB,WAEd,EAAK3pB,SADa,CAACgqB,cAAe,KA7CV,EAiD5BE,gCAAkC,SAACC,GAAiB,IAE5CxH,EACA,EAAK9kB,MADL8kB,YAIAtB,EAIA8I,EAJA9I,QACAD,EAGA+I,EAHA/I,aACAhQ,EAEA+Y,EAFA/Y,KACA+P,EACAgJ,EADAhJ,SAKEiJ,GAASC,EAFJriB,OAAOqiB,IAEA,GAAD,OAAIR,IAAJ,OAAWlH,GAAe,CAAC,qBAAwB,KACpE,EAAK3iB,SAAS,CACVoqB,SACA/I,UACAD,eACAhQ,OACA+P,aAGJiJ,EAAOE,GAAG,UAAW,EAAKC,YAC1BH,EAAOE,GAAG,gBAAiB,EAAKE,kBAChCJ,EAAOE,GAAG,WAAY,EAAKG,UAC3BL,EAAOE,GAAG,WAAY,EAAKI,UAC3BN,EAAOE,GAAG,gBAAiB,EAAKK,eAChCP,EAAOE,GAAG,cAAe,EAAKM,cA7EN,EAmF5BX,+BAAiC,SAACR,GAAW,IAErCrI,EAGAqI,EAHArI,aACAhQ,EAEAqY,EAFArY,KACA+P,EACAsI,EADAtI,SAIAwB,EACA,EAAK9kB,MADL8kB,YAIEyH,GAASC,EADJriB,OAAOqiB,IACA,GAAD,OAAIR,IAAJ,OAAWlH,GAAe,CAAC,qBAAwB,KAEpE,EAAK3iB,SAAS,CACVohB,eACAhQ,OACA+P,WACAiJ,SACAS,eAAgB,IAGpBT,EAAOE,GAAG,UAAW,EAAKlI,WAC1BgI,EAAOE,GAAG,gBAAiB,EAAKE,kBAChCJ,EAAOE,GAAG,kBAAmB,EAAKQ,iBAClCV,EAAOE,GAAG,WAAY,EAAKG,UAC3BL,EAAOE,GAAG,WAAY,EAAKI,UAC3BN,EAAOE,GAAG,gBAAiB,EAAKK,eAChCP,EAAOE,GAAG,cAAe,EAAKM,aAE9BR,EAAOE,GAAG,aAAc,EAAKS,aAjHL,EAqH5BR,WAAa,WAAO,IAAD,EASX,EAAK1sB,MAPLkE,EAFW,EAEXA,GACAc,EAHW,EAGXA,MACAwe,EAJW,EAIXA,QACAD,EALW,EAKXA,aACAhQ,EANW,EAMXA,KACA+P,EAPW,EAOXA,SACAiJ,EARW,EAQXA,OAGEY,EAAQ,CACVjpB,KACAc,QACAuO,OACA+P,WACA2H,gBAAkB,EAAKtqB,MAAMsqB,iBAG3BmC,EAAgB,CAClB3nB,SAAW,EAAK9E,MAAM8E,SACtBW,aAAe,EAAKzF,MAAMyF,cAG9BmmB,EAAOc,KAAK,aAAc,CACtB7J,UACA4J,gBACAD,QACA5J,eACAgI,SAAW,KAEf/Z,YAAY,EAAK8b,eAAgB,KACjC9b,YAAY,EAAK+b,qBAAsB,MArJf,EAwJ5BZ,iBAAmB,SAACa,GAChBhQ,QAAQC,IAAI+P,GACZ,EAAKxtB,MAAMusB,OAAOkB,aAClB,EAAKtrB,SAAS,CACVurB,WAAa,yCA5JO,EAgK5BnJ,UAAY,WAAO,IAAD,EASV,EAAKvkB,MAPLkE,EAFU,EAEVA,GACAc,EAHU,EAGVA,MACAwe,EAJU,EAIVA,QACAD,EALU,EAKVA,aACAhQ,EANU,EAMVA,KACA+P,EAPU,EAOVA,SACAiJ,EARU,EAQVA,OAGEoB,EAAO,CACTzpB,KACAc,QACAuO,OACA+P,WACA2H,gBAAkB,EAAKtqB,MAAMsqB,iBAGjCsB,EAAOc,KAAK,YAAa,CACrB7J,UACAmK,OACApK,iBAGJ/R,YAAY,EAAK8b,eAAgB,KACjC9b,YAAY,EAAK+b,qBAAsB,MA1Lf,EA6L5BK,gBAAkB,WAEd,EAAKzrB,SAAS,CACVurB,WAAa,QAhMO,EAoM5BT,gBAAkB,SAACY,GACf,EAAKltB,MAAM8f,6BAA6BoN,EAAUT,eAClD,EAAKjrB,SAAS,CACX2rB,WAAaD,EAAUE,SAvMF,EA2M5BjB,cAAgB,SAAC1sB,GAEb,GAD4B,EAAKJ,MAAM8tB,WAAW1tB,EAAK8D,IAC/B,CACpB,IAAM8pB,EAAa,eAAO,EAAKhuB,MAAM8tB,YAC/BG,EAAY,eAAOD,EAAc5tB,EAAK8D,KAC5C+pB,EAAahD,gBAAkB7qB,EAAK6qB,gBACpC+C,EAAc5tB,EAAK8D,IAAM+pB,EACzB,EAAK9rB,SAAS,CACV2rB,WAAaE,MAnNG,EAwN5BpB,SAAW,SAACsB,GACR,IAAMF,EAAa,eAAO,EAAKhuB,MAAM8tB,YACrCE,EAAcE,EAAShqB,IAAMgqB,EAC7B,EAAK/rB,SAAS,CACV2rB,WAAaE,KA5NO,EAgO5BnB,SAAW,SAACvmB,GACR,IAAM0nB,EAAa,eAAO,EAAKhuB,MAAM8tB,mBAC9BE,EAAc1nB,GACrB,EAAKnE,SAAS,CACV2rB,WAAaE,KApOO,EAwO5BjB,YAAc,SAAC3sB,GACX,IAAMsmB,EAAkBpB,GAAmC,CACvD7f,SAAQ,eAAO,EAAK9E,MAAM8E,UAC1BW,aAAY,eAAO,EAAKzF,MAAMyF,eAC/BhG,EAAKknB,qBACRzB,GAAQc,WAAWD,EAAiBtmB,EAAKknB,qBACzC9J,QAAQC,IAAI,YAAard,EAAKknB,qBAC9B9J,QAAQC,IAAI,kBAAmBiJ,GAC/B,EAAKvkB,SAAS,CACVgsB,sBAAwBzH,IAE5B,EAAK/lB,MAAM8f,6BAA6BiG,IAnPhB,EAsP5BwG,WAAa,SAAC9sB,GACV,EAAK+B,SAAS,CACVurB,WAAattB,EAAKguB,UAxPE,EA4P5BC,eAAiB,SAACzf,EAAO0f,GAAa,IAE9BC,EAF6B,eAE7BA,UAEAA,EAAU3f,KACV2f,EAAU3f,GAAS,IAEvB2f,EAAU3f,GAAOlL,KAAK4qB,IAnQE,EAsQ5BhB,eAAiB,WAAO,IAEhBf,EACA,EAAKvsB,MADLusB,OAEJ9pB,OAAOoZ,KAAK,EAAK0S,WAAW/qB,SAAQ,SAAAoL,GAChC,IAAM4f,EAAW,EAAKD,UAAU3f,GAAO0X,MACvCiG,EAAOc,KAAKze,EAAO4f,UACZ,EAAKD,UAAU3f,OA7QF,EA4W5B2e,qBAAuB,WAAO,IAAD,EAOrB,EAAKvtB,MALLwjB,EAFqB,EAErBA,QACA+I,EAHqB,EAGrBA,OACAS,EAJqB,EAIrBA,cACAU,EALqB,EAKrBA,WACAS,EANqB,EAMrBA,sBAKJ,IAF2B,EAAKxtB,MAAM+rB,YAAcM,IAAkBT,GAAyB,OAAfmB,EAE1D,CAClB,IAAMrG,EAAsB,CACxB5hB,SAAW,EAAK9E,MAAM8E,SACtBW,aAAe,EAAKzF,MAAMyF,cAExBkhB,EAAsBzB,GAAQ0B,YAAY4G,EAAuB9G,GACpEC,EAAoBte,OAAS,IAC5BujB,EAAOc,KAAK,cAAe,CAAC7J,UAAS8D,wBACrC,EAAKnlB,SAAS,CACVgsB,sBAAwB9G,OAhYZ,OAI1B,EAAKrnB,MAAQ,CACTgtB,eAAgB,EAChBb,cAAe,EACfuB,WAAa,KACbnB,OAAS,KACTuB,WAAa,GACbhJ,YAAc,YACdtB,QAAU,GACVD,aAAe,GACfhQ,KAAO,GACP+P,SAAW,GACXpf,GAAK,EAAKvD,MAAM2F,OAChBtB,MAAQ+mB,GAAOxkB,KAAKC,MAAM,EAAAD,KAAKE,OAAOka,KAAKsH,QAdrC,GAeNkF,sBAAwB,CACpB1oB,SAAQ,eAAO,EAAK9E,MAAM8E,UAC1BW,aAAY,eAAO,EAAKA,gBAGhC,EAAKmoB,UAAY,GAtBS,E,0CAiR5B,WAAU,IAAD,SASDltB,KAAKrB,MANLwjB,EAHC,EAGDA,QACAsK,EAJC,EAIDA,WACAd,EALC,EAKDA,cACAb,EANC,EAMDA,aACAI,EAPC,EAODA,OACAmB,EARC,EAQDA,WAIAhB,EACArrB,KAAKV,MADL+rB,WAGA+B,EAAgB,GAChBC,EAAc,GAEZC,EAAkB,CACpBxH,cAAe,OACf1X,SAAU,WACVU,KAAO,EACPD,IAAK,EACL1Q,OAAQ,QACRD,MAAQ,SA6BZ,OA1B2BmtB,GAAcM,IAAkBT,GAAyB,OAAfmB,IAG9DjrB,OAAOoZ,KAAKiS,GAAY9kB,OAAS,GAChCvG,OAAOoZ,KAAKiS,GAAYtqB,SAAQ,SAAAorB,GAC5BH,EAAc/qB,KAAK,kBAAC,GAAD,CAAQM,IAAK4qB,EAAWxuB,KAAM0tB,EAAWc,MACzDA,IAAc,EAAK5uB,MAAMkE,IACxBwqB,EAAYhrB,KAAK,kBAAC,GAAD,CACbM,IAAK8pB,EAAWc,GAAW1qB,GAAG,OAC9B9D,KAAM0tB,EAAWc,GACjB3oB,QAAS,EAAKtF,MAAMsF,QACpBE,QAAS,EAAKxF,MAAMwF,QACpBN,UAAW,EAAKlF,MAAMkF,gBAKnC6nB,IACCiB,EAAgBxH,cAAgB,UAIrCuG,GAAcvB,KACbwC,EAAgBxH,cAAgB,QAIhC,yBACIjjB,GAAG,mBACHiJ,MAAOwhB,GAERlsB,OAAOoZ,KAAKiS,GAAY9kB,OAAS,GAChC,oCACA,yBAAKxH,UAAW,sBACXitB,GAEL,yBAAKjtB,UAAW,yBACXktB,IAIPhB,GACE,yBAAKlsB,UAAW,0BACZ,0BAAMA,UAAW,4BAAjB,uBAAkEksB,GAClE,yBACIlsB,UAAW,6BACXC,QAASJ,KAAKusB,iBAFlB,SAMNzB,GACE,yBAAK3qB,UAAW,0BACZ,kBAAC,GAAD,CACIgiB,QAASA,EACTqI,aAAcxqB,KAAKwqB,aACnBC,gBAAiBzqB,KAAKyqB,sB,gCAmC1C,SAAmBtf,GAAY,IAAD,EAOtBnL,KAAKrB,MALLwjB,EAFsB,EAEtBA,QACA+I,EAHsB,EAGtBA,OACAroB,EAJsB,EAItBA,GACA8oB,EALsB,EAKtBA,cACAU,EANsB,EAMtBA,WAGDlhB,EAAUkgB,aAAerrB,KAAKV,MAAM+rB,YAChCrrB,KAAKV,MAAM+rB,aAAeH,IACzB/O,QAAQC,IAAIpc,KAAKV,MAAM+rB,YACvBrrB,KAAKgrB,gCAAgChrB,KAAKV,MAAM+rB,aAKxD,IAAMmC,GAAqBxtB,KAAKV,MAAM+rB,YAAcM,IAAkBT,GAAyB,OAAfmB,EAExEzC,EAAoB5pB,KAAKV,MAAzBsqB,gBACF6D,EAAc7D,EAAgB5rB,IAAMmN,EAAUye,gBAAgB5rB,GAAO4rB,EAAgB3rB,IAAMkN,EAAUye,gBAAgB3rB,EACxHuvB,GAAqBC,GACpBztB,KAAKgtB,eAAe,gBAAiB,CAAC7K,UAAStf,KAAI+mB,sB,+BAI3D,WAEI,IAA2C,IAAxC9gB,OAAO6Y,SAASU,KAAKvO,QAAQ,MAAc,CAC1C,IAAMqP,EAAera,OAAO6Y,SAASU,KAAKmB,MAAM,eAAe,GACzDrB,EAAUrZ,OAAO6Y,SAASU,KAAKmB,MAAM,eAAe,GAC1DxjB,KAAKc,SAAS,CACV2iB,YAAcN,EACdhB,UACA2I,cAAe,IAGnBhiB,OAAOC,aACPD,OAAOC,WAAa,IAExBD,OAAOC,WAAWma,UAAYljB,KAAK6qB,e,kCAGvC,gB,GAnb2BvqB,aCdzBotB,I,wDAEF,WAAYpuB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAMjBouB,qBAAuB,SAACluB,GACpBA,EAAEmC,kBACF,EAAKd,SAAS,CACV8sB,UAAY,EAAKjvB,MAAMivB,YAVH,EAc5BC,kBAAoB,WAChB,EAAKvuB,MAAMuuB,kBAAkB,EAAKvuB,MAAMwuB,QAAS,EAAKxuB,MAAMyuB,cAfpC,EAkB5BC,sBAAwB,SAACvuB,GACrB,EAAKH,MAAM2uB,gBAAgB,EAAK3uB,MAAMwuB,QAASruB,EAAEgK,OAAOrK,QAjBxD,EAAKT,MAAQ,CACTivB,UAAW,GAHS,E,0CAsB5B,WAAU,IAEFA,EACA5tB,KAAKrB,MADLivB,SAEJ,OACI,yBACIztB,UAAW,iBACXwC,IAAG,yBAAoB3C,KAAKV,MAAMyuB,cAErCH,EAEO,yBACIztB,UAAW,kBAEX,0BAAMA,UAAW,wBACb,2BAAOf,MAAOY,KAAKV,MAAMyK,UAAWuI,SAAUtS,KAAKguB,yBAEvD,yBAAK7tB,UAAW,mBACZ,0BAAMA,UAAW,kBAAmBC,QAASJ,KAAK2tB,yBAI1D,yBACIxtB,UAAW,iBACXC,QAASJ,KAAK6tB,mBAEd,0BAAM1tB,UAAW,wBACZH,KAAKV,MAAMyuB,YAAY,EAD5B,MACkC/tB,KAAKV,MAAMyK,WAE7C,yBAAK5J,UAAW,mBACZ,0BAAMA,UAAW,qBAAsBC,QAASJ,KAAK2tB,8B,GAtDrDrtB,cAmMX4tB,G,kDAjIb,WAAY5uB,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAOjB4uB,mBAAqB,WAAO,IAEpBC,EACA,EAAKzvB,MADLyvB,aAGEC,EAAYD,EAAa,EAEzBE,EAAS,EAAKhvB,MAAM4W,YAEpBqY,EAAcD,EAAOD,GAAWxrB,GAEnC0rB,GACC,EAAKjvB,MAAMkvB,iBAAiBD,EAAa,GACzC,EAAKztB,SAAS,CAACstB,aAAeC,KAE9B,EAAK/uB,MAAMkvB,iBAAiBF,EAAOF,GAAcvrB,GAAI,IAvBjC,EA6B5B4rB,qBAAuB,WAAO,IAGtBL,EACA,EAAKzvB,MADLyvB,aAGEC,EAAYD,EAAa,EAEzBE,EAAS,EAAKhvB,MAAM4W,YAEpBqY,EAAcD,EAAOD,GAAWxrB,GAEnC0rB,GACC,EAAKjvB,MAAMkvB,iBAAiBD,EAAa,GACzC,EAAKztB,SAAS,CAACstB,aAAeC,KAE9B,EAAK/uB,MAAMkvB,iBAAiBF,EAAOF,GAAcvrB,GAAI,IA7CjC,EAkD5B6rB,gBAAkB,WACd,EAAK5tB,SAAS,CACV6tB,UAAY,EAAKhwB,MAAMgwB,YApDH,EAwD5Bd,kBAAoB,SAACC,EAASC,GAC1B,EAAKzuB,MAAMkvB,iBAAiBV,EAAS,GACrC,EAAKhtB,SAAS,CAACstB,aAAeL,EAAaY,UAAW,KAxDtD,EAAKhwB,MAAQ,CACTyvB,aAAe,EACfO,UAAW,GAJS,E,0CA6D5B,WAAU,IAAD,SAKD3uB,KAAKrB,MAFLyvB,EAHC,EAGDA,aACAO,EAJC,EAIDA,SAGEL,EAAStuB,KAAKV,MAAM4W,YAIpB0Y,EAAkB,CACpBtgB,WAAa,WAHMggB,EAAO3mB,OAAS,IAOnCinB,EAAgBtgB,WAAa,UAGjC,IAAIugB,EAAyB,iBACT,IAAjBT,IACCS,EAAyB,IAG7B,IAAIC,EAAwB,iBACzBV,EAAeE,EAAO3mB,OAAO,IAC5BmnB,EAAwB,IAG5B,IAAMC,EAAkBJ,EAAW,gBAAkB,GAC/CK,EAAeL,EAAW,WAAa,GAEvCM,EAAaX,EAAO9rB,KAAI,SAAC2T,EAAOzT,GAClC,OACA,kBAAC,GAAD,CACIC,IAAG,yBAAoBD,GACvBqrB,YAAarrB,EACbqH,UAAWoM,EAAMpM,UACjB+jB,QAAS3X,EAAMtT,GACfgrB,kBAAmB,EAAKA,kBACxBI,gBAAiB,EAAK3uB,MAAM2uB,qBAIpC,OACI,yBAAK9tB,UAAW,qBAAsB2L,MAAO8iB,GACzC,0BACIzuB,UAAS,8BAAyB0uB,GAClCzuB,QAASJ,KAAKyuB,uBAElB,0BACItuB,UAAS,mBAAc6uB,GACvB5uB,QAASJ,KAAK0uB,iBAFlB,SAGS1uB,KAAKrB,MAAMyvB,aAAa,EAHjC,OAGyCE,EAAO3mB,QAEhD,0BACIxH,UAAS,6BAAwB2uB,GACjC1uB,QAASJ,KAAKmuB,qBAElB,yBAAKhuB,UAAS,oBAAe4uB,IACxBE,Q,GA3HQ3uB,aCxCZ4uB,G,4JAxBb,WAAU,IACCC,EAAcnvB,KAAKV,MAAnB6vB,WACDC,EAAWD,EAAWjxB,MAAM,EAClC,OACI,mCACQiC,UAAU,kCACVnC,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,MAClB4N,MAAO,CACHoF,gBAAkB,OAClBme,gBAAkB,wCAClBC,mBAAqB,gBACrBC,eAAc,UAAMH,EAAN,cAAoBA,EAApB,MACdI,iBAAmB,YACnB1J,cAAgB,c,GAlBRxa,iBCsHf7F,I,wDAjHb,WAAYnG,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAIfkwB,eAAiB,SAAChwB,GACd,EAAKH,MAAMmwB,eAAe,EAAKnwB,MAAMP,KAAK8D,KAJ5C,EAAKlE,MAAQ,GAFa,E,0CAS5B,WAAU,IAAD,EACwBqB,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QACnCe,EAAO,KACPsI,EAAQ,KACRsjB,EAAU,KAcd,GAZG1vB,KAAKV,MAAMmd,WAAW1d,EAAK8D,KAC1BssB,EAAWrjB,MAAQ,CAAC6jB,aAAY,UAAO5wB,EAAK+D,iBAAZ,OAChCqsB,EAAWhvB,UAAY,yBACjB4E,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAAC6jB,aAAY,UAAO5wB,EAAK+D,iBAAZ,OAChCqsB,EAAWhvB,UAAY,6BACvBuvB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAGVlE,EAAK+E,KAAM,CACV,IAAM8rB,EAAW7wB,EAAK+E,KAAKkL,MAAM,SAASxM,KAAI,SAACyM,EAAMvM,GACjD,OAAO,yBAAKC,IAAG,UAAK5D,EAAK8D,GAAV,YAAgBoM,EAAhB,YAAwBvM,IAAMuM,MAE3C3L,EAAS,2BACRvE,EAAKuE,WADG,IAEXusB,WAAU,UAA+B,IAAxB9wB,EAAKuE,UAAUC,SAAtB,MACVusB,QAAO,UAAM/wB,EAAK+wB,QAAX,MACP5xB,MAAQ,SAER0F,EAAY,SACiB,QAA9B7E,EAAKuE,UAAUO,WACdD,EAAY,aACwB,WAA9B7E,EAAKuE,UAAUO,aACrBD,EAAY,YAEhBE,EACI,mCACI3D,UAAU,kCACVnC,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,yBACIiC,UAAU,oBACV2L,MAAO,CACHjI,WAAaD,IAGjB,yBAAKzD,UAAU,yBAAyB2L,MAAOxI,GAAYssB,KAO3E,GAAsB,IAAnB7wB,EAAK2F,UACJ0H,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,SAEL,GAAuB,IAAnBpwB,EAAK2F,UACZyqB,EAAWxT,EAAIwT,EAAWjxB,MAAM,EAChCixB,EAAWxgB,GAAKwgB,EAAWnxB,EAAEmxB,EAAWxT,EACxCwT,EAAWvgB,GAAKugB,EAAWlxB,EAAEkxB,EAAWxT,EAExCvP,EAAQ,0CACJvJ,GAAI9D,EAAK8D,IACLssB,SAEL,GAAuB,IAAnBpwB,EAAK2F,UAAiB,CAC7B,IAAMqrB,EAAa,UAAMZ,EAAWnxB,EAAEmxB,EAAWjxB,MAAM,EAApC,YAAyCixB,EAAWlxB,GACjE+xB,EAAW,UAAMb,EAAWnxB,EAAjB,YAAsBmxB,EAAWlxB,EAAEkxB,EAAWhxB,QACzD8xB,EAAW,UAAMd,EAAWnxB,EAAEmxB,EAAWjxB,MAA9B,YAAuCixB,EAAWlxB,EAAEkxB,EAAWhxB,QAChFgxB,EAAWe,OAAX,UAAuBH,EAAvB,YAAwCC,EAAxC,YAAuDC,GACvD7jB,EAAQ,2CACJvJ,GAAI9D,EAAK8D,IACLssB,SAGR/iB,EAAQ,mDAGZ,OACI,uBACIkR,cAAetd,KAAKyvB,eACpBtxB,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjBkO,EACAtI,EACA4rB,EArFQ,KAuFR3wB,EAAKiF,QACF,kBAAC,GAAD,CACImrB,WAAYA,S,GA1GhB7jB,kBC+FH5E,I,wDA7Fb,WAAYpH,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAIfkwB,eAAiB,WACb,EAAKnwB,MAAMmwB,eAAe,EAAKnwB,MAAMP,KAAK8D,KAJ5C,EAAKlE,MAAQ,GAFa,E,0CAS5B,WAAU,IAAD,EACwBqB,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QACnCe,EAAO,KACP4rB,EAAU,KAWd,GAVG1vB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAGVlE,EAAK+E,KAAM,CACV,IAAM8rB,EAAW7wB,EAAK+E,KAAKkL,MAAM,SAASxM,KAAI,SAACyM,EAAMvM,GACjD,OAAO,yBAAKC,IAAG,UAAK5D,EAAK8D,GAAV,YAAgBoM,EAAhB,YAAwBvM,IAAMuM,MAE3C3L,EAAS,2BACRvE,EAAKuE,WADG,IAEXusB,WAAU,UAA+B,IAAxB9wB,EAAKuE,UAAUC,SAAtB,MACVusB,QAAO,UAAM/wB,EAAK+wB,QAAX,MACP5xB,MAAQ,SAER0F,EAAY,SACiB,QAA9B7E,EAAKuE,UAAUO,WACdD,EAAY,aACwB,WAA9B7E,EAAKuE,UAAUO,aACrBD,EAAY,YAEhBE,EACI,mCACI3D,UAAU,kCACVnC,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,yBACIiC,UAAU,oBACV2L,MAAO,CACHjI,WAAaD,IAGjB,yBAAKzD,UAAU,yBAAyB2L,MAAOxI,GAAYssB,KAO3E,OACI,uBACItS,cAAetd,KAAKyvB,eACpB7T,OAAQ5b,KAAKrB,MAAMid,OACnBzd,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,wCACI2E,GAAI9D,EAAK8D,IACLssB,IAEPrrB,EACA4rB,EACA3wB,EAAKiF,QACF,kBAAC,GAAD,CACImrB,WAAYA,O,+BAOhC,WAAqB,IAAD,OACbnvB,KAAKV,MAAM8wB,iBAAiBpwB,KAAKV,MAAMP,KAAK8D,KAC3C0X,YAAW,WACH,EAAKkV,mBACV,S,GAzFInkB,kBCCb+kB,I,MAAmB,CACrB,CACI/L,KAAO,iGACPgM,WAAa,iHACb9T,OAAS,WAGb,CACI8H,KAAO,uGACPgM,WAAa,qUACb9T,OAAS,WAGb,CACI8H,KAAO,+FACPgM,WAAa,wUACb9T,OAAS,WAEb,CACI8H,KAAO,0GACPgM,WAAa,sUACb9T,OAAS,aAKX+T,GAAuB,CACzB,CACIjM,KAAO,oGACPgM,WAAa,gHACb9T,OAAS,WAGb,CACI8H,KAAO,yFACPgM,WAAa,2PACb9T,OAAS,WAGb,CACI8H,KAAO,kGACPgM,WAAa,yPACb9T,OAAS,WAEb,CACI8H,KAAO,qGACPgM,WAAa,yPACb9T,OAAS,YAKXgU,GAAwB,CAC1B,CACIlM,KAAO,qGACPgM,WAAa,mGACb9T,OAAS,WAGb,CACI8H,KAAO,+FACPgM,WAAa,+IACb9T,OAAS,WAGb,CACI8H,KAAO,oGACPgM,WAAa,2IACb9T,OAAS,WAEb,CACI8H,KAAO,sGACPgM,WAAa,2IACb9T,OAAS,YAKX/V,G,kDAEF,WAAYnH,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAIfkwB,eAAiB,SAAChwB,GACd,EAAKH,MAAMmwB,eAAe,EAAKnwB,MAAMP,KAAK8D,KAJ5C,EAAKlE,MAAQ,GAFa,E,0CAS5B,WACI,IAAM2S,EAAQtR,KAAKT,QADd,EAEmCS,KAAKV,MAAtCyF,EAFF,EAEEA,aAAchG,EAFhB,EAEgBA,KAAM0xB,EAFtB,EAEsBA,UACrBtB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QACnCe,EAAO,KACP4sB,EAAkB,IAClBhB,EAAU,KACViB,EAAS,KAWb,GAVG3wB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAGVlE,EAAK+E,OAAS2sB,EAAW,CACxB,IAAMb,EAAW7wB,EAAK+E,KAAKkL,MAAM,SAASxM,KAAI,SAACyM,EAAMvM,GACjD,OAAO,yBAAKC,IAAG,UAAK5D,EAAK8D,GAAV,YAAgBoM,EAAhB,YAAwBvM,IAAMuM,MAE3C3L,EAAS,2BACRvE,EAAKuE,WADG,IAEXusB,WAAU,UAA+B,IAAxB9wB,EAAKuE,UAAUC,SAAtB,MACVusB,QAAO,UAAM/wB,EAAK+wB,QAAX,QAEXhsB,EACI,mCACI3D,UAAU,kCACVnC,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,yBACIiC,UAAU,qBAEV,yBAAKA,UAAU,yBAAyB2L,MAAOxI,GAAYssB,KAO3E,IAAIgB,EAAkB,GACF,WAAjB7xB,EAAK+G,QACJ8qB,EAAkBP,GAAkBtrB,EAAaL,WAAa,GACtC,SAAjB3F,EAAK+G,SACZ8qB,EAAkBL,GAAsBxrB,EAAaL,WAAa,GAClEgsB,EAAkB,MACM,UAAjB3xB,EAAK+G,UACZ8qB,EAAkBJ,GAAuBzrB,EAAaL,WAAa,GACnEgsB,EAAkB,KAEtB,IAAMG,EAAc9xB,EAAKgH,gBAWzB,OATI0qB,IACAE,EAAU,0BACNxpB,EAAGypB,EAAgBN,WACnBrtB,KAAK,mBACLuZ,OAAM,eAAUoU,EAAgBpU,OAA1B,QAMV,uBACIc,cAAetd,KAAKyvB,eACpB7T,OAAQ5b,KAAKrB,MAAMid,OACnBzd,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,wCACI2E,GAAI9D,EAAK8D,IACLssB,IAER,uBACIvjB,UAAS,oBAAeujB,EAAWnxB,EAA1B,YAA+BmxB,EAAWlxB,EAA1C,mBAAuDkxB,EAAWjxB,MAAMwyB,EAAxE,KACT5K,cAAe,QAEd6K,EACD,0BACIxpB,EAAGypB,EAAgBtM,KACnBrhB,KAAOqO,EAAMf,iBAAiBsgB,MAGrC/sB,EACA4rB,EACA3wB,EAAKiF,QACF,kBAAC,GAAD,CACImrB,WAAYA,S,GAtGf7jB,iBAgHnB7E,GAAOlG,YAAcoQ,GAENlK,UCnGAiC,I,wDA7Fb,WAAYpJ,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAIfkwB,eAAiB,SAAChwB,GACd,EAAKH,MAAMmwB,eAAe,EAAKnwB,MAAMP,KAAK8D,KAJ5C,EAAKlE,MAAQ,GAFa,E,0CAS5B,WAAU,IAAD,EACwBqB,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QAEnCqJ,EAAQ,KACRsjB,EAAU,KAgEd,OA/DG1vB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cA+BS,IAAnBlE,EAAK2F,WACJyqB,EAAWpuB,GAAKouB,EAAWnxB,EAC3BmxB,EAAWnuB,GAAKmuB,EAAWlxB,EAAIkxB,EAAWhxB,OAC1CgxB,EAAW2B,GAAK3B,EAAWnxB,EAAImxB,EAAWjxB,MAC1CixB,EAAW4B,GAAK5B,EAAWlxB,EAC3BmO,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,KAEkB,IAAnBpwB,EAAK2F,WACZyqB,EAAWhoB,EAAX,YAAoBgoB,EAAWnxB,EAA/B,YAAoCmxB,EAAWlxB,EAAIkxB,EAAWhxB,OAA9D,iBAA6EgxB,EAAWhxB,OAAxF,YAAmGgxB,EAAWjxB,MAA9G,aAA0HixB,EAAWhxB,QACrIiO,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,KAIR/iB,EAF0B,IAAnBrN,EAAK2F,UAEJ,wCACJ7B,GAAI9D,EAAK8D,IACLssB,IAGA,mDAIR,uBACI7R,cAAetd,KAAKyvB,eACpBtxB,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjBkO,EAxEE,KA0EFsjB,O,GAxFEpkB,kBC4EF1B,I,wDAzEb,WAAYtK,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAIfyxB,WAAa,SAACvxB,KAHZ,EAAKd,MAAQ,GAFa,E,0CAS5B,WAAU,IAGFsyB,EACA7kB,EAJC,EACwBpM,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QAGnC2sB,EAAU,KACX1vB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAIb,IAAMiuB,EAAW,CACb7B,gBAAe,cAAUtwB,EAAK8K,IAAf,KACf2lB,iBAAmB,YACnBD,eAAiB,UACjBD,mBAAqB,MACrBpxB,MAAQ,QAsBZ,OApBA+yB,EACI,mCACI9wB,UAAU,mCACVnC,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,yBACIiC,UAAU,qBACV2L,MAAOolB,KAInB9kB,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,IAKJ,uBACI7R,cAAetd,KAAKgxB,WACpB7yB,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjBkO,EACA6kB,EACAvB,EACA3wB,EAAKiF,QACF,kBAAC,GAAD,CACImrB,WAAYA,S,GAlEhB7jB,kBCkFHxB,I,wDAjFb,WAAYxK,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRZ,MAAQ,GAFa,E,0CAK5B,WAAU,IAGFwyB,EACA/kB,EAJC,EACwBpM,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QAGnC2sB,EAAU,KACX1vB,KAAKV,MAAMmd,WAAW1d,EAAK8D,KAC1BssB,EAAWrjB,MAAQ,CAAC6jB,aAAY,UAAO5wB,EAAK+D,iBAAZ,OAChCqsB,EAAWhvB,UAAY,yBACjB4E,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAAC6jB,aAAY,UAAO5wB,EAAK+D,iBAAZ,OAChCqsB,EAAWhvB,UAAY,6BACvBuvB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAIb,IAAMM,EAAQ,UAAM,GAAGxE,EAAK+D,iBAAd,MACR+sB,EAAU,UAAM,GAAG9wB,EAAK+D,iBAAiB,IAA/B,MAEVsuB,EAAiC,YAAnBryB,EAAKgL,UAAN,gBAA0C/J,KAAKV,MAAMyuB,aAAgBhvB,EAAKgL,UAwC7F,OAtCAonB,EACI,mCACIhxB,UAAU,mCACVnC,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAElB,yBAAKiC,UAAW,oBACZ,yBACIA,UAAU,mBAEV,yBACI2L,MAAO,CACHvI,WACAssB,aACAC,QAAO,YAAS,GAAG/wB,EAAK+D,iBAAjB,QAEbsuB,IAEN,yBACIjxB,UAAU,sBACV2L,MAAO,CACHgG,OAAM,UAA6B,EAAtB/S,EAAK+D,iBAAZ,aACN5E,MAAK,UAAOixB,EAAWjxB,MAA6B,EAAtBa,EAAK+D,iBAA9B,MACLoO,gBAAkBie,EAAWlsB,UAMjDmJ,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,EAFA,CAGJnsB,YAAa,KAKb,uBACI7E,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjBkO,EACA+kB,EACAzB,O,GA5EGpkB,kBC2GHpB,I,wDAxGb,WAAY5K,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAIf4K,gBAAkB,SAAC1K,GACf,IAAmD,IAAhD,EAAKH,MAAMP,KAAKgF,KAAK+P,QAAQ,cAAsB,CAClD,IAAM0D,EAAU,EAAKlY,MAAMP,KAAKgF,KAAKiL,MAAM,OAAO,GAClD,EAAK1P,MAAMkvB,iBAAiBhX,EAAS,QAClC,IAA8C,IAA1C,EAAKlY,MAAMP,KAAKgF,KAAK+P,QAAQ,QAAgB,CACpD,IAAMud,EAAU,EAAK/xB,MAAMP,KAAKgF,KAAKgQ,QAAQ,OAAQ,QACrD,EAAKzU,MAAMgyB,gBAAgBD,QACsB,IAA1C,EAAK/xB,MAAMP,KAAKgF,KAAK+P,QAAQ,SACpChL,OAAOyoB,KAAK,EAAKjyB,MAAMP,KAAKgF,KAAK,WAXvC,EAAKpF,MAAQ,GAFa,E,0CAkB5B,WAAU,IAAD,EACwBqB,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QACnCqJ,EAAQ,KACRsjB,EAAU,KACV8B,EAAc,KACfxxB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAIb,IAAMG,EAAc,GAAGrE,EAAK+D,iBAS5B,GAPAqsB,EAAWlsB,KAAO,sBAClBksB,EAAWnsB,YAAc,IACzBmsB,EAAWjsB,OAAS,OACpBisB,EAAWhsB,cAAgB,MAC3BgsB,EAAW/rB,YAAcA,EAGH,IAAnBrE,EAAK2F,UACJ0H,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,SAEL,GAAuB,IAAnBpwB,EAAK2F,UACZyqB,EAAWxT,EAAIwT,EAAWjxB,MAAM,EAChCixB,EAAWxgB,GAAKwgB,EAAWnxB,EAAEmxB,EAAWxT,EACxCwT,EAAWvgB,GAAKugB,EAAWlxB,EAAEkxB,EAAWxT,EAExCvP,EAAQ,0CACJvJ,GAAI9D,EAAK8D,IACLssB,SAEL,GAAuB,IAAnBpwB,EAAK2F,UAAiB,CAC7B,IAAMqrB,EAAa,UAAMZ,EAAWnxB,EAAEmxB,EAAWjxB,MAAM,EAApC,YAAyCixB,EAAWlxB,GACjE+xB,EAAW,UAAMb,EAAWnxB,EAAjB,YAAsBmxB,EAAWlxB,EAAEkxB,EAAWhxB,QACzD8xB,EAAW,UAAMd,EAAWnxB,EAAEmxB,EAAWjxB,MAA9B,YAAuCixB,EAAWlxB,EAAEkxB,EAAWhxB,QAChFgxB,EAAWe,OAAX,UAAuBH,EAAvB,YAAwCC,EAAxC,YAAuDC,GACvD7jB,EAAQ,2CACJvJ,GAAI9D,EAAK8D,IACLssB,SAGR/iB,EAAQ,mDAiBZ,OAdGrN,EAAKgF,OAEJytB,EAAe,0BACXrzB,OAAQgxB,EAAWhxB,OAAOiF,EAC1BlF,MAAOixB,EAAWjxB,MAAMkF,EACxBpF,EAAGmxB,EAAWnxB,EAAGoF,EAAY,EAC7BnF,EAAGkxB,EAAWlxB,EAAGmF,EAAY,EAC7BJ,YAAa,EACb5C,QAASJ,KAAKmK,gBACdyR,OAAQ,aAMZ,uBACIzd,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjBkO,EACAolB,EACA9B,EACA3wB,EAAKiF,QACF,kBAAC,GAAD,CACImrB,WAAYA,S,GAjGjB7jB,kBCqIFd,I,wDApIb,WAAYlL,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAQfkyB,WAAa,WACNhkB,SAASikB,cAAcjgB,QAAU,EAAKkgB,aACvC,EAAKC,qBAEHrX,WAAW,EAAKkX,WAAY,MAbR,EAiB5BI,iBAAmB,WACf,EAAK/wB,SAAS,CAACgxB,oBAAsB,SACrC,EAAKC,OAAOC,cAActiB,QAC1B,EAAKiiB,aAAelkB,SAASikB,cAAcjgB,MAC3C8I,WAAW,EAAKkX,WAAY,MArBJ,EAwB5BG,mBAAqB,WACjB,EAAK9wB,SAAS,CAACgxB,oBAAsB,UAvBvC,EAAKnzB,MAAQ,CACTmzB,oBAAsB,QAE1B,EAAKC,OAAS,KACd,EAAKJ,aAAe,KANM,E,0CA4B5B,WAAU,IAGFI,EAEAE,EALC,SACwBjyB,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QAEnC2sB,EAAU,KAEVwC,EAAW,KACZlyB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAIb,IAAMG,EAAc,GAAGrE,EAAK+D,iBAE5BqsB,EAAWlsB,KAAO,sBAClBksB,EAAWnsB,YAAc,IACzBmsB,EAAWjsB,OAAS,OACpBisB,EAAWhsB,cAAgB,MAC3BgsB,EAAW/rB,YAAcA,EAEzB,IAAI+uB,EAAgB,EACkB,SAAnCnyB,KAAKrB,MAAMmzB,sBACVK,EAAgB,IAIpB,IAEMC,EAAa,iCAFM,kCACQC,KAAKtzB,EAAK8K,KACiB,GAuD5D,OArDAkoB,EACI,mCACI/zB,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,MAClB+E,KAAK,OACL6iB,cAAe9lB,KAAKrB,MAAMmzB,qBAG1B,4BACIrgB,MAAO,eAAe1S,EAAK8D,GAC3B3E,MAAQixB,EAAWjxB,MAAMa,EAAK+D,iBAC9B3E,OAASgxB,EAAWhxB,OAAOY,EAAK+D,iBAChCwvB,IAAKF,EACLG,YAAY,IACZC,MAAM,uDACNC,iBAAiB,EACjB3mB,MAAO,CACHF,UAAS,gBAAY7M,EAAK+D,iBAAjB,KACT4vB,gBAAkB,MAClB7b,QAASsb,GAEbjjB,IAAK,SAACC,GAAgB,EAAK4iB,OAAS5iB,MAKhD8iB,EAAW,0BACPpvB,GAAI9D,EAAK8D,GACT7E,EAAGmxB,EAAWnxB,EACdC,EAAGkxB,EAAWlxB,EACdE,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,MAClB8E,YAAa,IAGqB,SAAnChD,KAAKrB,MAAMmzB,sBACVI,EACI,0BACIl0B,EAAImxB,EAAWnxB,EAAGmxB,EAAWjxB,MAAM,EAAI,GAAGa,EAAK+D,iBAAkB,EACjE7E,EAAIkxB,EAAWlxB,EAAGkxB,EAAWhxB,OAAO,EAAI,GAAGY,EAAK+D,iBAAkB,EAClE3E,OAAS,GAAGY,EAAK+D,iBACjB5E,MAAQ,GAAGa,EAAK+D,iBAChBE,YAAa,EACb4Y,OAAQ,UACRxb,QAASJ,KAAK6xB,oBAQtB,uBACI1zB,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjB+zB,EACAF,EACAG,EACAxC,O,GA/HKpkB,kBCoEL3C,I,wDAjEb,WAAYrJ,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRZ,MAAQ,GAFa,E,0CAK5B,WAAU,IAGFg0B,EACAvmB,EAJC,EACwBpM,KAAKV,MAA3ByF,EADF,EACEA,aAAchG,EADhB,EACgBA,KACfowB,EAAU,eAAOnvB,KAAKV,MAAMP,KAAKgE,QAGnC2sB,EAAU,KAoCd,OAnCG1vB,KAAKV,MAAMmd,WAAW1d,EAAK8D,IAC1BssB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,sBACrBiC,EAAaC,WACnBmqB,EAAWrjB,MAAQ,CAACqkB,QAAO,UAAOpxB,EAAK+D,iBAAZ,kBAC3B4sB,EAAW,0CACHP,EADG,CAEPnsB,YAAa,MACbC,KAAK,cAGb0vB,EACI,uBACA/mB,UAAS,oBAAeujB,EAAWnxB,EAA1B,YAA+BmxB,EAAWlxB,EAA1C,mBAAuDkxB,EAAWjxB,MAAM,GAAxE,KACT4nB,cAAe,QAEX,0BACItiB,WAAY,+IACZD,SAAU,OACVvF,EAAG,EACHC,EAAG,GACH20B,IAAK,EACLC,WAAY,GACZ/M,cAAe,OACfha,MAAO,CAACgnB,WAAY,SAEnB/zB,EAAK8J,qBAIlBuD,EAAQ,wCACJvJ,GAAI9D,EAAK8D,IACLssB,IAKJ,uBACIhxB,OAAQgxB,EAAWhxB,OACnBD,MAAOixB,EAAWjxB,OAEjBkO,EACAumB,EACAjD,EACA3wB,EAAKiF,QACF,kBAAC,GAAD,CACImrB,WAAYA,S,GA1DhB7jB,kBCkKHynB,G,kDAvJb,WAAYzzB,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRZ,MAAQ,GAFa,E,0CAO5B,WAAU,IAAD,EAWDqB,KAAKV,MATL8E,EAFC,EAEDA,SACAW,EAHC,EAGDA,aACA0qB,EAJC,EAIDA,eACAvT,EALC,EAKDA,wBACAO,EANC,EAMDA,WACA2T,EAPC,EAODA,iBACA5rB,EARC,EAQDA,UACAgqB,EATC,EASDA,iBACA8C,EAVC,EAUDA,gBAGEhD,EAAS,GAET0E,EAAe5xB,OAAOoZ,KAAKpW,GAAU5B,KAAI,SAAAwZ,GAC3C,IAAMxE,EAAUpT,EAAS4X,GACnByU,EAAajZ,EAAQzU,OAAO7E,MAAMsG,EAAY,IAAQgT,EAAQzU,OAAO5E,OAAOqG,EAAY,GAC9F,MAAqB,UAAjBgT,EAAQ1Y,KACA,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,IAES,SAAjBjZ,EAAQ1Y,KACP,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZ2T,iBAAkBA,EAClBK,UAAWA,IAES,WAAjBjZ,EAAQ1Y,KACP,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,IAES,SAAjBjZ,EAAQ1Y,KACP,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,IAES,UAAjBjZ,EAAQ1Y,KACP,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,IAES,UAAjBjZ,EAAQ1Y,MACfwvB,EAAOjsB,KAAKmV,EAAQ3U,IACZ,kBAAC,GAAD,CACJF,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZsR,YAAaO,EAAO3mB,OACpB8oB,UAAWA,KAES,SAAjBjZ,EAAQ1Y,MACfwvB,EAAOjsB,KAAKmV,EAAQ3U,IACZ,kBAAC,GAAD,CACJF,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnCqZ,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,EACXjC,iBAAkBA,EAClB8C,gBAAiBA,KAEG,YAAjB9Z,EAAQ1Y,KACP,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnC4sB,eAAgBA,EAChBvT,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,IAES,UAAjBjZ,EAAQ1Y,KACP,kBAAC,GAAD,CACJ6D,IAAK6U,EAAQ3U,GACb9D,KAAMyY,EACNzU,OAAQyU,EAAQzU,OAChBkwB,WAAYzb,EAAQyb,WACpBluB,aAAcA,EAAayS,EAAQ3U,IACnCqZ,wBAAyBA,EACzBO,WAAYA,EACZgU,UAAWA,IAGZ,QAGX,OACI,oCACKuC,O,GAjJM1nB,iBCkBN4nB,G,kDAzBb,WAAY5zB,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRZ,MAAQ,GAFa,E,0CAS5B,WAEI,IAAMw0B,EAAc,GAAGnzB,KAAKV,MAAMkF,UAC5BpB,EAAc,EAAEpD,KAAKV,MAAMkF,UAEjC,OACI,oCACA,6BAAS3B,GAAG,gBAAgB3E,MAAOi1B,EAAah1B,OAAQg1B,EAAaC,iBAAiB,iBAAiBC,aAAa,kBAChH,0BAAMtyB,GAAG,IAAIC,GAAG,IAAI8vB,GAAG,IAAIC,GAAIoC,EAAarnB,MAAO,CAAC5I,OAAO,OAAQE,YAAaA,EAAaD,cAAgB,Y,GAnBvG7C,aC0+BLgzB,I,wDA98Bb,WAAYh0B,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IA2Bfg0B,eAAiB,SAAC9zB,EAAGiB,EAAYC,GAC7B,EAAK6yB,wBACL,EAAKC,kBAAoBnT,KAAKsH,MAC9B,EAAK8L,UAAY,EACjB,EAAKC,UAAY,GAhCO,EAmC5B1M,cAAgB,SAACxnB,GAAO,IAAD,EAKf,EAAKd,MAHLiG,EAFe,EAEfA,QACAE,EAHe,EAGfA,QACAN,EAJe,EAIfA,UAGJ,EAAK1D,SAAS,CACV8D,QAAUA,EAAYnF,EAAEmB,WAAY4D,EACpCM,QAAUA,EAAYrF,EAAEoB,WAAY2D,IAGxC,IAAMovB,EAAmBtT,KAAKsH,MACxBiM,EAAcD,EAAmB,EAAKH,kBAC5C,EAAKK,+BAAiCr0B,EAAEmB,UAAUizB,EAClD,EAAKE,+BAAiCt0B,EAAEoB,UAAUgzB,EAClD,EAAKJ,kBAAoBG,GAnDD,EAyE5BpF,iBAAmB,SAACxS,EAAWkO,GAAc,IAerC8J,EACAC,EAhBoC,EAIpC,EAAKt1B,MAFL6F,EAFoC,EAEpCA,UAME0vB,EARkC,EAGpC9vB,SAKyB4X,GAIvBmY,EAAsBD,EAAYnxB,OAAO5E,OAAOqG,EAChD4vB,EAAqBF,EAAYnxB,OAAO7E,MAAMsG,EAKpDwvB,EAAoBG,EAAoB,EAAK70B,MAAMnB,OAAQ,IAAKqG,EAChEyvB,EAAmBG,EAAmB,EAAK90B,MAAMpB,MAAO,IAAKsG,EAE7D,IAAM6vB,EAAiBnuB,KAAKwO,MAAMxO,KAAKkM,IAAI4hB,EAAiBC,IAItDK,EAAsBJ,EAAYnxB,OAAO/E,EAAGk2B,EAAYnxB,OAAO7E,MAAM,EACrEq2B,EAAsBL,EAAYnxB,OAAO9E,EAAGi2B,EAAYnxB,OAAO5E,OAAO,EAEtEq2B,EAAgB,CAClB5vB,QAAU0vB,EAAsB,EAAKh1B,MAAMpB,MAAM,EAAGm2B,EACpDvvB,QAAUyvB,EAAsB,EAAKj1B,MAAMnB,OAAO,EAAGk2B,EACrD7vB,UAAY6vB,GAIhB,EAAKI,kBAAkBD,EAAetK,IA5Gd,EAgK5BsJ,sBAAwB,WACpB,EAAKkB,iBAAiBvyB,SAAQ,SAAAwyB,GAC1Bra,aAAaqa,MAEjB,EAAKD,iBAAmB,IApKA,EAuK5BjF,eAAiB,SAAC5sB,GACd,IAAM+xB,EAAW,eAAO,EAAKj2B,MAAMyF,UAC7BywB,EAAe,eAAO,EAAKl2B,MAAMyF,SAASvB,IAC1CqxB,EAAW,eAAO,EAAKv1B,MAAMyF,SAASvB,IAE5CqxB,EAAYpwB,KAAO,GACnB8wB,EAAY/xB,GAAMqxB,EAClB,EAAKpzB,SAAS,CAACmX,WAAa4c,EAAiBzwB,SAAWwwB,KA9KhC,EAiL5BpoB,kBAAoB,SAACzN,GACjB,IAAM2b,EAAe,eAAO,EAAK/b,MAAMyF,UACjCK,EAAU,eAAOiW,EAAgB3b,EAAK8D,KAC5C4B,EAAWX,KAAO/E,EAAK0N,QACvBhI,EAAWnB,UAAUC,SAAWxE,EAAKwE,SACrCkB,EAAWqwB,iBAAmB/1B,EAAKwE,SACnCkB,EAAWqrB,QAAU,EAAE,EAAKnxB,MAAM6F,UAElCkW,EAAgB3b,EAAK8D,IAAM4B,EAC3B,EAAK3D,SAAS,CACVsD,SAAWsW,EACXxV,WAAY,EACZ+S,WAAa,QA7LO,EAiM5B8c,sBAAwB,SAAC9sB,GAcrB,OAbyB,EAAKqU,oBAAoBrU,GACjC9F,SAAQ,SAAAqV,GAClBA,EAAQvT,OAAO0D,QACC6P,EAAQvT,OAChB9B,SAAQ,SAAA6yB,GACW5zB,OAAOoZ,KAAK,EAAK7b,MAAMyF,UAAUoY,QAAO,SAAAhF,GAAO,OAA4D,IAAxD,EAAK7Y,MAAMyF,SAASoT,GAASvT,OAAO6P,QAAQkhB,MACvG7yB,SAAQ,SAAA8yB,GAClBhtB,EAAgBgtB,GAAhB,eAAsChtB,EAAgBgtB,IACtDhtB,EAAgBgtB,GAAgBjwB,SAAW,EAAKrG,MAAMsG,gBAK/DgD,GA/MiB,EAkN5BiU,wBAA0B,SAACF,EAAWC,GAClC,IAAIoF,EAAmB,eAAO,EAAK1iB,MAAMoG,cACrCkX,GACA7a,OAAOoZ,KAAK6G,GAAqBlf,SAAQ,SAAAC,GACrC,GAAG,EAAKqa,WAAWra,GAAO,CACtB,IAAMqC,EAAU,eAAO4c,EAAoBjf,IAC3CqC,EAAWO,UAAW,EACtBqc,EAAoBjf,GAAQqC,MAIxC,IAAMywB,EAAkB,eAAO7T,EAAoBrF,IAChD,EAAKS,WAAWT,IAAcC,EAC7BiZ,EAAmBlwB,UAAW,EACtB,EAAKyX,WAAWT,KAA0D,IAA5CqF,EAAoBrF,GAAWhX,SAE9D,EAAKyX,WAAWT,KAAeC,IACtCiZ,EAAmBlwB,SAAW,EAAKrG,MAAMsG,QAFzCiwB,EAAmBlwB,SAAW,EAAKrG,MAAMsG,OAI7Coc,EAAoBrF,GAAakZ,EACjC7T,EAAsB,EAAK0T,sBAAsB1T,GACjD,EAAKvgB,SAAS,CACViE,aAAesc,KAxOK,EA4O5B3hB,0BAA4B,WACxB,IAAM2hB,EAAsB,EAAKvD,iBAAiB,EAAKnf,MAAMoG,cAC7D,EAAKjE,SAAS,CACViE,aAAesc,KA/OK,EAmP5BvD,iBAAmB,SAAC/Y,GAChB,IAAMsc,EAAmB,eAAOtc,GAQhC,OAPA3D,OAAOoZ,KAAK6G,GAAqBlf,SAAQ,SAAAC,GACrC,GAAG,EAAKqa,WAAWra,GAAO,CACtB,IAAMqC,EAAU,eAAO4c,EAAoBjf,IAC3CqC,EAAWO,UAAW,EACtBqc,EAAoBjf,GAAQqC,MAG7B4c,GA5PiB,EA+P5B1hB,oBAAsB,SAACkD,EAAIsyB,GACvB5a,YAAW,WACP,IAAI6a,EAAc,GACfD,EAAgBlsB,mBACfmsB,EAAYx1B,gBAAmBu1B,EAAgBlsB,iBAAiBosB,KAAjC,iBAEhCF,EAAgBjsB,kBACfksB,EAAYv1B,eAAkBs1B,EAAgBjsB,gBAAgBmsB,KAAhC,iBAE/BF,EAAgBhsB,iBACfisB,EAAYt1B,cAAiBq1B,EAAgBhsB,eAAeksB,KAA/B,iBAE9BF,EAAgB/rB,eACfgsB,EAAYr1B,YAAeo1B,EAAgB/rB,aAAaisB,KAA7B,iBAE/B,IAAMlN,EAAY,eAAO,EAAKxpB,MAAMwpB,cACpCA,EAAatlB,GAAMuyB,EACnB,EAAKt0B,SAAS,CAACqnB,qBAhRK,EAqR5BhjB,kBAAoB,SAACtC,GACjB,IAAMslB,EAAY,eAAO,EAAKxpB,MAAMwpB,cACjCA,EAAatlB,WACLslB,EAAatlB,GAExB,EAAK/B,SAAS,CAACqnB,kBA1RS,EA6R5B9a,uBAAyB,SAAC2O,EAAW7d,GACjC,IAAMm3B,EAAaC,OAAOp3B,GAAQ,EAAKQ,MAAM6F,UAC7C,GAAG,EAAK7F,MAAMyF,SAAS4X,GAAWjZ,OAAO5E,SAAWm3B,EAAW,CAC3D,IAAM5a,EAAe,eAAO,EAAK/b,MAAMyF,UACvCsW,EAAgBsB,GAAhB,eAAiCtB,EAAgBsB,IACjDtB,EAAgBsB,GAAWjZ,OAA3B,eAAwC2X,EAAgBsB,GAAWjZ,QACnE2X,EAAgBsB,GAAWjZ,OAAO5E,OAASm3B,EAC3C,EAAKx0B,SAAS,CAACsD,SAAWsW,MApSN,EAwS5B3J,4BAA8B,SAAChS,GAC3B,IAAM2b,EAAe,eAAO,EAAK/b,MAAMyF,UACvCrF,EAAK8D,GAAGV,SAAQ,SAACU,GAEb,GAAG9D,EAAKiS,OAAQ,CACZ,IAAIvM,EtBnTb,SAAS+wB,EAAaC,EAAeC,GAC1C,IAAMC,EAAY,eAAOF,GAUzB,OATAr0B,OAAOoZ,KAAKkb,GAAavzB,SAAQ,SAAAQ,GAC5BmhB,MAAMC,QAAQ2R,EAAY/yB,KAASmhB,MAAMC,QAAQ0R,EAAc9yB,IAChEgzB,EAAahzB,GAAOgzB,EAAahzB,GAAKqhB,OAAO0R,EAAY/yB,IACjD4hB,GAAmBmR,EAAY/yB,KAAS4hB,GAAmBkR,EAAc9yB,IACjFgzB,EAAahzB,GAAO6yB,EAAaC,EAAc9yB,GAAM+yB,EAAY/yB,IAEjEgzB,EAAahzB,GAAO+yB,EAAY/yB,MAG7BgzB,EsBwSwBH,CAAa9a,EAAgB7X,GAAK9D,EAAKiS,QACxD0J,EAAgB7X,GAAM4B,OACnB,GAAG1F,EAAK2Y,OAAQ,CACnB,IAAIjT,EtBxSb,SAASmxB,EAAWH,EAAeC,GACxC,IAAMC,EAAY,eAAOF,GAazB,OAZAr0B,OAAOoZ,KAAKkb,GAAavzB,SAAQ,SAAAQ,GAE5BmhB,MAAMC,QAAQ2R,EAAY/yB,KAASmhB,MAAMC,QAAQ0R,EAAc9yB,IAChE+yB,EAAY/yB,GAAKR,SAAQ,SAAA0zB,GACvBF,EAAahzB,GAAOgzB,EAAahzB,GAAK6Z,QAAO,SAAApa,GAAI,OAAIA,IAASyzB,QAExDtR,GAAmBmR,EAAY/yB,KAAS4hB,GAAmBkR,EAAc9yB,IACjFgzB,EAAahzB,GAAOizB,EAAWH,EAAc9yB,GAAM+yB,EAAY/yB,WAExDgzB,EAAahzB,MAGjBgzB,EsB0RwBC,CAAWlb,EAAgB7X,GAAK9D,EAAK2Y,QACtDgD,EAAgB7X,GAAM4B,MAI9B,EAAK3D,SAAS,CAACsD,SAAWsW,EAAiBxV,WAAY,KArT/B,EAwT5Bka,6BAA+B,SAACrgB,GAC5B,EAAK+B,SAAS/B,IAzTU,EA4T5BgY,qBAAuB,WACnB,IAAM2D,EAAe,eAAO,EAAK/b,MAAMyF,UACjC0xB,EAAgB,eAAO,EAAKn3B,MAAMoG,cACxC3D,OAAOoZ,KAAK,EAAK7b,MAAMoG,cAAc5C,SAAQ,SAAAC,GACtC,EAAKqa,WAAWra,YACRsY,EAAgBtY,UAChB0zB,EAAiB1zB,OAGhC,EAAKtB,SAAS,CACNsD,SAAWsW,EACX3V,aAAe+wB,EACf5wB,WAAY,KAxUI,EA4U5BoR,2BAA6B,SAACxX,EAAMyX,GAChC,IAAMmE,EAAkB,GAClBzS,EAAkB,GAClB8tB,EAAc30B,OAAOoZ,KAAK,EAAK7b,MAAMyF,UAC3CmS,EAAIpU,SAAQ,SAAAU,GACR,IAAMmzB,EAAgBD,EAAYjiB,QAAQjR,GAC1CkzB,EAAYE,OAAOD,EAAe,GACtB,YAATl3B,EACCi3B,EAAYE,OAAOF,EAAYpuB,OAAQ,EAAG9E,GAC1B,aAAT/D,GACPi3B,EAAYE,OAAO,EAAG,EAAGpzB,MAGjCkzB,EAAY5zB,SAAQ,SAAAU,GAChB6X,EAAgB7X,GAAM,EAAKlE,MAAMyF,SAASvB,GAC1CoF,EAAgBpF,GAAM,EAAKlE,MAAMoG,aAAalC,MAElD,EAAK/B,SAAS,CACViE,aAAekD,EACf7D,SAAWsW,EACXxV,WAAY,KAhWQ,EAoW5B1D,+BAAiC,SAACxD,EAAGC,EAAG8C,EAAIC,GAAQ,IAAD,EAQ3C,EAAKrC,MANLyF,EAF2C,EAE3CA,SACAW,EAH2C,EAG3CA,aACAE,EAJ2C,EAI3CA,OACAT,EAL2C,EAK3CA,UACAI,EAN2C,EAM3CA,QACAE,EAP2C,EAO3CA,QAGEgxB,EAAgB,eAAO/wB,GAEvBmxB,EAAcl4B,EAAEwG,EAAWI,EAC3BuxB,EAAcl4B,EAAEuG,EAAWM,EAC3BsxB,EAAer1B,EAAGyD,EAAWI,EAC7ByxB,EAAer1B,EAAGwD,EAAWM,EAEnC1D,OAAOoZ,KAAKpW,GAAUjC,SAAQ,SAAA6Z,GAC1B,IAAMxE,EAAUpT,EAAS4X,GACnBsa,EAAe,EAAK7Z,WAAWT,KAAuD,IAAzC8Z,EAAiB9Z,GAAWhX,SAC3EuxB,GAAe,EAGf/e,EAAQzU,OAAO/E,GAAKk4B,GACnB1e,EAAQzU,OAAO/E,EAAIwZ,EAAQzU,OAAO7E,OAAUk4B,GAC7C5e,EAAQzU,OAAO9E,GAAKk4B,GACnB3e,EAAQzU,OAAO9E,EAAIuZ,EAAQzU,OAAO5E,QAAWk4B,IAE1CE,GAAe,GAEpBA,GAAgBD,IACfR,EAAiB9Z,GAAjB,eAAkC8Z,EAAiB9Z,IACnD8Z,EAAiB9Z,GAAWhX,SAAWC,MAG/C,EAAKnE,SAAS,CAACiE,aAAe+wB,KAvYN,EA0Y5Bxd,wBAA0B,WAAO,IAAD,EAMxB,EAAK3Z,MAJLyF,EAFwB,EAExBA,SACAW,EAHwB,EAGxBA,aACAP,EAJwB,EAIxBA,UACAS,EALwB,EAKxBA,OAIE6S,EAAmB,EAAKwE,oBAAoBvX,EAAcE,GAEhE,GAAG6S,EAAiBnQ,OAAQ,CACxB,IAAMitB,EAAW,eAAOxwB,GAClB0xB,EAAgB,eAAO/wB,GAGvByxB,EAA2B,CAC7Bx4B,EAAI8Z,EAAiB,GAAG/U,OAAO/E,EAC/B+C,GAAK+W,EAAiB,GAAG/U,OAAO/E,EAAI8Z,EAAiB,GAAG/U,OAAO7E,MAJpC,EAIoEsG,GAInGsT,EAAiB3V,SAAQ,SAAAqV,GAClBA,EAAQzU,OAAO/E,EAAIw4B,EAAyBx4B,IAC3Cw4B,EAAyBx4B,EAAIwZ,EAAQzU,OAAO/E,GAEhD,IAAMy4B,EAAYjf,EAAQzU,OAAO/E,EAAIwZ,EAAQzU,OAAO7E,MACjDu4B,EAAYD,EAAyBz1B,KACpCy1B,EAAyBz1B,GAAK01B,EAdP,EAcyCjyB,MAIxE,IAAMkyB,EAAuB,GAG7B5e,EAAiB3V,SAAQ,SAAAqV,GACrB,IAAMnT,EAAQC,IAAQC,WAChBoyB,EAAmBjT,GAAYlM,GAC/Bof,EAAwBlT,GAAY3e,EAAayS,EAAQ3U,KAC/D8zB,EAAiB9zB,GAAKwB,EACtBsyB,EAAiB5zB,OAAO/E,EAAIw4B,EAAyBz1B,IAAM41B,EAAiB5zB,OAAO/E,EAAIw4B,EAAyBx4B,GAChH42B,EAAYvwB,GAASsyB,EACrBb,EAAiBzxB,GAASuyB,EAE1Bd,EAAiBte,EAAQ3U,IAAzB,eAAmCizB,EAAiBte,EAAQ3U,KAC5DizB,EAAiBte,EAAQ3U,IAAImC,UAAW,EACxC0xB,EAAqBr0B,KAAKs0B,MAI9B,IAAME,EAAsB,GAC5BH,EAAqBv0B,SAAQ,SAAA20B,GACzBA,EAAoB7yB,OAAO9B,SAAQ,SAAA40B,GAC/BF,EAAoBE,IAAY,QAGxCL,EAAqBv0B,SAAQ,SAAA20B,GACzB,IAAME,EAAYF,EAAoB7yB,OAAOzB,KAAI,SAAAu0B,GAC7C,IAAqC,IAAlCF,EAAoBE,GAAoB,CACvC,IAAME,EAAa3yB,IAAQC,WAC3BsyB,EAAoBE,GAAYE,EAEpC,OAAOJ,EAAoBE,MAE/BD,EAAoB7yB,OAAS+yB,KAGjC,EAAKl2B,SACD,CACIiE,aAAe+wB,EACf1xB,SAAWwwB,MAhdC,EAsd5BnN,oBAAsB,SAAC1oB,GACnB,EAAK+B,SAAS/B,IAvdU,EA0d5B2nB,gBAAkB,SAACwQ,GACf,EAAKp2B,SAAS,CACVkd,UAAYkZ,KA5dQ,EAge5BhP,sBAAwB,SAACiP,GACrB,EAAKr2B,SAAS,CACV8oB,gBAAkBuN,KAleE,EAse5B5U,iBAAmB,SAACxjB,GACbA,EACC,EAAK+B,SAAS,CAACuqB,WAAatsB,IAE5B,EAAK+B,SAAS,CAACuqB,YAAa,KA1eR,EA6iB5B5O,WAAa,SAACT,EAAWjX,GAAkB,IAEnCE,EACA,EAAKtG,MADLsG,OAGAF,IACAA,EAAe,EAAKpG,MAAMoG,cAG9B,IAAI0X,GAAa,EAMjB,OAJG1X,EAAaiX,IAAcjX,EAAaiX,GAAWhX,WAAaC,IAC/DwX,GAAa,GAGVA,GA5jBiB,EA+jB5B2T,iBAAmB,SAACpU,GAAe,IAAD,EAI1B,EAAKrd,MAFLoG,EAF0B,EAE1BA,aACAE,EAH0B,EAG1BA,OAEEwX,EAAa1X,EAAaiX,GAAWhX,WAAaC,EACpDmyB,EAAgB,EAOpB,OANAh2B,OAAOoZ,KAAKzV,GAAc5C,SAAQ,SAAA6Z,GAC3B,EAAKS,WAAWT,IACfob,OAGgB3a,GAAgC,IAAlB2a,GA3kBd,EAylB5BvZ,SAAW,WAEP,OAAO,eAAI,EAAKlf,QA3lBQ,EA+lB5BuX,UAAY,WAAO,IAEX9R,EACA,EAAKzF,MADLyF,SAkBJ,OAfkBhD,OAAOoZ,KAAKpW,GAAUoY,QAAO,SAACR,GAC5C,MAAgC,UAA7B5X,EAAS4X,GAAWld,QAOF0D,KAAI,SAAA60B,GACzB,MAAO,CACHx0B,GAAKw0B,EACLttB,UAAY3F,EAASizB,GAAUttB,eA/mBf,EAsnB5BkkB,gBAAkB,SAACH,EAASwJ,GAAa,IAEjClzB,EACA,EAAKzF,MADLyF,SAEEwwB,EAAW,eAAOxwB,GAClBmzB,EAAe,eAAOnzB,EAAS0pB,IACrCyJ,EAAgBxtB,UAAYutB,EAC5B1C,EAAY9G,GAAWyJ,EACvB,EAAKz2B,SAAS,CAACsD,SAAWwwB,KA9nBF,EAioB5BxL,sBAAwB,SAACoO,GAAe,IAAD,EAK/B,EAAK74B,MAHLyF,EAF+B,EAE/BA,SACAW,EAH+B,EAG/BA,aACAP,EAJ+B,EAI/BA,UAEEowB,EAAW,eAAOxwB,GACC,EAAKkY,oBAAoBvX,GACjC5C,SAAQ,SAAAqV,GACrB,IAAMwD,EAAgB,eAAOxD,EAAQzU,QACrC6xB,EAAYpd,EAAQ3U,IAAIE,OAASiY,EAChB,SAAdwc,EACCxc,EAAiB/c,GAAKuG,EACF,OAAdgzB,EACNxc,EAAiB/c,GAAKuG,EACF,SAAdgzB,EACNxc,EAAiBhd,GAAKwG,EACF,UAAdgzB,IACNxc,EAAiBhd,GAAKwG,MAG9B,EAAK1D,SAAS,CAACsD,SAAWwwB,KAtpBF,EAypB5B3L,KAAO,WAAO,IAAD,EAOL,EAAKtqB,MALLoG,EAFK,EAELA,aACAE,EAHK,EAGLA,OACAT,EAJK,EAILA,UACAI,EALK,EAKLA,QACAE,EANK,EAMLA,QAGEgT,EAAmB,EAAKwE,oBAAoBvX,EAAcE,GAE1DwyB,EAAc,CAChB34B,KAAO,OACPsF,SAAW0T,EACX/S,aAAe,GACfyT,YAAc,EAAKmC,qCAAqC7C,EAAkBtT,EAAWI,EAASE,IAGlGgT,EAAiB3V,SAAQ,SAAAqV,GACrBigB,EAAY1yB,aAAayS,EAAQ3U,IAAjC,eAA2CkC,EAAayS,EAAQ3U,QAGpE,EAAK/B,SAAS,CACV22B,iBAhrBoB,EAqrB5BvO,IAAM,WAAO,IAAD,EAQJ,EAAKvqB,MANLyF,EAFI,EAEJA,SACAW,EAHI,EAGJA,aACAE,EAJI,EAIJA,OACAT,EALI,EAKJA,UACAI,EANI,EAMJA,QACAE,EAPI,EAOJA,QAGEgT,EAAmB,EAAKwE,oBAAoBvX,EAAcE,GAC1DwyB,EAAc,CAChB34B,KAAO,MACPsF,SAAW,GACXW,aAAe,GACfyT,YAAc,EAAKmC,qCAAqC7C,EAAkBtT,EAAWI,EAASE,IAG5F8vB,EAAW,eAAOxwB,GAClB6D,EAAe,eAAOlD,GAE5B+S,EAAiB3V,SAAQ,SAAAqV,GACrBigB,EAAYrzB,SAAS/B,KAArB,eAA8BmV,IAC9BigB,EAAY1yB,aAAayS,EAAQ3U,IAAjC,eAA2CkC,EAAayS,EAAQ3U,YACzD+xB,EAAYpd,EAAQ3U,WACpBoF,EAAgBuP,EAAQ3U,OAGnC,EAAK/B,SAAS,CACVsD,SAAWwwB,EACX7vB,aAAekD,EACfwvB,iBAptBoB,EAwtB5BtO,MAAQ,WAAO,IAAD,EAMN,EAAKxqB,MAJLyF,EAFM,EAENA,SACAW,EAHM,EAGNA,aACA6kB,EAJM,EAINA,gBACA6N,EALM,EAKNA,YAGE7C,EAAW,eAAOxwB,GAClB6D,EAAkB,EAAK6V,iBAAiB/Y,GAE9C0yB,EAAYrzB,SAASjC,SAAQ,SAAAqV,GACzB,IAAMnT,EAAQC,IAAQC,WACtBqwB,EAAYvwB,GAAZ,eAAyBmT,GACzBod,EAAYvwB,GAAOxB,GAAKwB,EAExB4D,EAAgB5D,GAAhB,eAA6BozB,EAAY1yB,aAAayS,EAAQ3U,KAC9DoF,EAAgBuP,EAAQ3U,IAAxB,eAAkCoF,EAAgBuP,EAAQ3U,KAC1DoF,EAAgBuP,EAAQ3U,IAAImC,UAAW,EAEvC4vB,EAAYvwB,GAAOtB,OAAnB,eAAgCyU,EAAQzU,QACxC,IAAM20B,EAAO9N,EAAgB5rB,GAAKwZ,EAAQzU,OAAO/E,EAAIy5B,EAAYjf,YAAY0C,MACvEyc,EAAO/N,EAAgB3rB,GAAKuZ,EAAQzU,OAAO9E,EAAIw5B,EAAYjf,YAAY4C,MAC7EwZ,EAAYvwB,GAAOtB,OAAO/E,EAAI05B,EAC9B9C,EAAYvwB,GAAOtB,OAAO9E,EAAI05B,KAGlC,IAAM94B,EAAW,CACbuF,SAAWwwB,EACX7vB,aAAekD,GAGK,QAArBwvB,EAAY34B,OACXD,EAAS44B,YAAc,CACnB34B,KAAO,KACPsF,SAAW,GACXW,aAAe,KAIvB,EAAKjE,SAASjC,IAhwBU,EAmwB5ByyB,gBAAkB,SAAC5P,GACfkW,MAAMlW,GACDjB,MAAK,SAACoX,GAAD,OAAUA,EAAKC,UACpBrX,MAAK,SAAC1hB,GACH,IAAMF,EAAWuC,OAAOC,OAAO,GAAI,EAAK1C,MAAOI,GAC/C,EAAK+B,SAASjC,MAEjBk5B,OAAM,SAAAt4B,GAAC,OAAI0c,QAAQC,IAAI3c,OA1wBJ,EA6wB5B0hB,0BAA4B,WACxB,EAAKmQ,gBAAgB,+GA5wBvB,EAAK3yB,MAAQ,CACXqf,UAAY,cAAa,IAAIsC,MAAOY,qBAAqBnN,QAAQ,MAAO,IACxEoO,QAAU7d,IAAQC,WAClBU,OAASX,IAAQC,WACjBC,UAAY,GACZI,QAAU,EACVE,QAAU,EACVpH,KAAO,MACPyqB,aAAe,GACf/e,aAAe,KACfhF,SAAW,GACXW,aAAe,GACfkT,WAAa,KACb/S,WAAY,EACZmmB,YAAa,EACb2M,iBAAkB,EAClBpO,gBAAkB,CAAC5rB,EAAI,EAAGC,EAAI,GAC9Bw5B,YAAc,CACV34B,KAAO,KACPsF,SAAW,GACXW,aAAe,KAGrB,EAAK2vB,iBAAmB,GAzBE,E,gDAsD5B,SAAaj1B,M,+BA0Db,SAAkB+0B,EAAetK,GAAW,IAAD,EAKnClqB,KAAKrB,MAHLiG,EAFmC,EAEnCA,QACAE,EAHmC,EAGnCA,QACAN,EAJmC,EAInCA,UAKEyzB,EADsB,IAAT/N,EADP,GAMNgO,GAHY1D,EAAc5vB,QAGKA,GAAWqzB,EAC1CE,GAHY3D,EAAc1vB,QAGKA,GAAWmzB,EAC1CG,GAHe5D,EAAchwB,UAGQA,GAAayzB,EAClDI,EAAoBnyB,KAAKoyB,GAAKL,EAEhCM,EAAgB3zB,EAChB4zB,EAAgB1zB,EAChB2zB,EAAmBj0B,EACnBk0B,EAAkB,EAClBz2B,EAAU,EAEdjC,KAAKwzB,wBAEL,EAAG,CACCvxB,IACAy2B,GAAmBL,EACnBI,GAAoBvyB,KAAKwO,MAAM0jB,EAAkB,SAAIlyB,KAAKyyB,IAAID,GAAoB,GAAK,GACvFH,GAAiBL,EAAe,SAAIhyB,KAAKyyB,IAAID,GAAoB,GAAK,EACtEF,GAAiBL,EAAe,SAAIjyB,KAAKyyB,IAAID,GAAoB,GAAK,EACtE,IAAIE,EAAOX,EAAUh2B,GAEpB,SAASslB,EAAYC,EAAYqR,EAAcC,GAAiB,IAAD,OAC5D94B,KAAK00B,iBAAiBryB,KAAKkY,YAAW,WAClC,EAAKzZ,SAAS,CACV8D,QAAU2iB,EACVziB,QAAU0iB,EACVhjB,UAAYq0B,MAEjBC,MACLzD,KAAKr1B,KARN,CAQYu4B,EAAeC,EAAeC,EAAkBG,SAExDF,EAAkBxyB,KAAKoyB,M,kDAmVpC,SAAqCxgB,EAAkBtT,EAAWI,EAASE,GACvE,GAAGgT,GAAoBA,EAAiBnQ,OAAS,EAAG,CAChD,IAAIzJ,EAAQ4Z,EAAiB,GAAG/U,OAAO7E,MACnCC,EAAS2Z,EAAiB,GAAG/U,OAAO5E,OACpCH,EAAI8Z,EAAiB,GAAG/U,OAAO4L,IAAMmJ,EAAiB,GAAG/U,OAAO/E,EAChEC,EAAI6Z,EAAiB,GAAG/U,OAAO6L,IAAMkJ,EAAiB,GAAG/U,OAAO9E,EAChE0Q,EAAK3Q,EAAEE,EACP0Q,EAAK3Q,EAAEE,EACP46B,EAAgB,EAChBC,EAAiB,EA0BrB,OAzBGlhB,EAAiBnQ,OAAS,IACzBmQ,EAAiB3V,SAAQ,SAAAC,GACrB,IAAI62B,EAAY72B,EAAKW,OAAO7E,MACxBg7B,EAAa92B,EAAKW,OAAO5E,OACzBg7B,EAAQ/2B,EAAKW,OAAO4L,IAAMvM,EAAKW,OAAO/E,EACtCo7B,EAAQh3B,EAAKW,OAAO6L,IAAMxM,EAAKW,OAAO9E,EACtCo7B,EAASF,EAAMF,EACfK,EAASF,EAAMF,EAEfC,EAAQn7B,IACRA,EAAIm7B,GAELE,EAAS1qB,IACRA,EAAK0qB,GAELD,EAAQn7B,IACRA,EAAIm7B,GAELE,EAAS1qB,IACRA,EAAK0qB,MAGbP,EAAgBpqB,EAAG3Q,EACnBg7B,EAAiBpqB,EAAG3Q,GAEjB,CACHE,QAAU66B,GAAkB76B,GAAQqG,EACpCtG,OAAS66B,GAAiB76B,GAAOsG,EACjCxG,GAAKA,EAAE4G,GAASJ,EAChBvG,GAAKA,EAAE6G,GAASN,EAChBmK,IAAMA,EAAG/J,GAASJ,EAClBoK,IAAMA,EAAG9J,GAASN,EAClB0W,KAAOld,EACPod,KAAOnd,EACP8c,UAAaie,GAAkB76B,EAC/B0c,SAAYke,GAAiB76B,GAGrC,MAAO,CACHC,OAAS,EACTD,MAAQ,EACRF,EAAI,EACJC,EAAI,EACJ0Q,GAAK,EACLC,GAAK,EACLsM,KAAO,EACPE,KAAO,EACPL,UAAY,EACZF,SAAW,K,iCAsCnB,SAAoB9V,GAAe,IAAD,OACxB+S,EAAmB,GAMzB,OALA1W,OAAOoZ,KAAKzV,GAAc5C,SAAQ,SAAA6Z,GAC3B,EAAKS,WAAWT,EAAWjX,IAC1B+S,EAAiBzV,KAAK,EAAK1D,MAAMyF,SAAS4X,OAG3ClE,I,oBA2LX,WAAU,IAAD,EACmB9X,KAAKV,MAAtBpB,EADF,EACEA,MAAOC,EADT,EACSA,OADT,EAUD6B,KAAKrB,MAPLiG,EAHC,EAGDA,QACAE,EAJC,EAIDA,QACAN,EALC,EAKDA,UACA9G,EANC,EAMDA,KACA0G,EAPC,EAODA,SACAW,EARC,EAQDA,aACAkT,EATC,EASDA,WAEEshB,EAAcr7B,EAAMsG,EAC1Bg1B,EAAer7B,EAAOqG,EAChB+O,EAAO,UAAM3O,EAAN,YAAiBE,EAAjB,YAA4By0B,EAA5B,YAA2CC,GAElD1hB,EAAmB9X,KAAKsc,oBAAoBvX,GAC5C2X,EAActb,OAAOoZ,KAAKpW,GAE1BoU,EAAcxY,KAAK2a,qCAAqC7C,EAAkBtT,EAAWI,EAASE,GAI9F20B,GAAsBj1B,EAAqC,IAA1B0B,KAAKC,MAAM3B,EAAU,MAAW,IACjEk1B,EAHc,GACFC,GAEgCF,EAE5CG,EAAwB90B,EAASN,GAAW,EAAGi1B,EAE/CI,EAAe,CACjBvK,mBAAkB,UAJQ1qB,EAASJ,GAAW,EAAGi1B,EAI/B,cAA+BG,EAA/B,MAClBrK,eAAc,UAAMmK,EAAN,cAA8BA,EAA9B,OAGlB,OACQ,yBACIv5B,UAAS,uBAAkBzC,GAC3BoO,MAAO+tB,GAEP,kBAAC,GAAD,CACIj1B,QAAS5E,KAAKrB,MAAMiG,QACpBE,QAAS9E,KAAKrB,MAAMmG,QACpBN,UAAWxE,KAAKrB,MAAM6F,UACtBijB,oBAAqBznB,KAAKynB,oBAC1BU,aAAcnoB,KAAKrB,MAAMwpB,aACzBD,sBAAuBloB,KAAKkoB,sBAC5BjB,cAAejnB,KAAKinB,cACpBxK,WAAYzc,KAAKyc,YAEjB,yBAAK5Z,GAAG,QACJ3E,MAAK,UAAKA,EAAL,MACLC,OAAM,UAAKA,EAAL,MACNoV,QAASA,GAET,8BACI,4BAAQpV,OAAO,OAAO0E,GAAG,UAAU3E,MAAM,OAAOF,EAAE,OAAOC,EAAE,QACvD,oCAAgB67B,GAAG,gBAAgBC,aAAa,QAEpD,4BAAQ57B,OAAO,OAAO0E,GAAG,UAAU3E,MAAM,OAAOF,EAAE,OAAOC,EAAE,QACvD,oCAAgB67B,GAAG,gBAAgBC,aAAa,QAEpD,4BAAQl3B,GAAG,WACP,kCAAcm3B,IAAI,IAAIpH,GAAG,IAAImH,aAAa,SAE9C,4BAAQl3B,GAAG,QAAQo3B,YAAY,IAAIC,aAAa,IAAIC,KAAK,MAAMC,KAAK,MAAMC,OAAO,OAAOC,YAAY,eAChG,6BAASpK,OAAO,gBAAgBjtB,KAAK,WAG7C,kBAAC,GAAD,CACIuB,UAAWA,IAEf,kBAAC,GAAD,CACIgU,YAAaA,EACbkE,YAAaA,EACb/c,oBAAqBK,KAAKL,oBAC1BwF,kBAAmBnF,KAAKmF,oBAE5B,kBAAC,GAAD,CACIf,SAAUA,EACVW,aAAcA,EACd0qB,eAAgBzvB,KAAKyvB,eACrBvT,wBAAyBlc,KAAKkc,wBAC9BO,WAAYzc,KAAKyc,WACjB2T,iBAAkBpwB,KAAKowB,iBACvB5B,iBAAkBxuB,KAAKwuB,iBACvB8C,gBAAiBtxB,KAAKsxB,gBACtB9sB,UAAWA,KAGnB,kBAAC,GAAD,CACI8W,UAAYxD,EAAiBnQ,OAAS,EACtChI,oBAAqBK,KAAKL,oBAC1B6Y,YAAaA,IAEjB,kBAAC,GAAD,CACIzZ,KAAMkZ,EACNnL,UAAW,CAAClI,UAASE,UAASN,aAC9BgI,kBAAmBxM,KAAKwM,kBACxBa,uBAAwBrN,KAAKqN,yBAEjC,kBAAC,GAAD,CACIyK,iBAAkBA,EAClBhL,UAAW,CAAClI,UAASE,UAASN,aAC9B0R,UAAWlW,KAAKkW,UAChBnF,4BAA6B/Q,KAAK+Q,4BAClCgG,qBAAsB/W,KAAK+W,qBAC3BT,2BAA4BtW,KAAKsW,2BACjCkC,YAAaA,IAEjB,kBAAC,GAAD,CACIhX,+BAAgCxB,KAAKwB,+BACrC2D,kBAAmBnF,KAAKmF,qBAIhC,kBAAC,GAAD,CACIf,SAAUpE,KAAKrB,MAAMyF,SACrBW,aAAc/E,KAAKrB,MAAMoG,aACzBG,UAAWlF,KAAKrB,MAAMuG,UACtBka,6BAA8Bpf,KAAKof,6BACnCpB,UAAWhe,KAAKrB,MAAMqf,UACtB0I,gBAAiB1mB,KAAK0mB,gBACtBnE,iBAAkBviB,KAAKuiB,mBAE3B,kBAAC,GAAD,CACI1E,SAAU7d,KAAK6d,SACfuB,6BAA8Bpf,KAAKof,6BACnC+B,0BAA2BnhB,KAAKmhB,4BAEpC,kBAAC,GAAD,CACIoZ,iBAAkBv6B,KAAKrB,MAAM47B,iBAC7BxjB,qBAAsB/W,KAAK+W,qBAC3BuB,wBAAyBtY,KAAKsY,wBAC9B8Q,sBAAuBppB,KAAKopB,sBAC5BnR,WAAYA,EACZgR,KAAMjpB,KAAKipB,KACXC,IAAKlpB,KAAKkpB,IACVC,MAAOnpB,KAAKmpB,QAEhB,kBAAC,GAAD,CACIzpB,0BAA2BM,KAAKN,0BAChC8B,+BAAgCxB,KAAKwB,+BACrC7B,oBAAqBK,KAAKL,oBAC1BwF,kBAAmBnF,KAAKmF,kBACxBlF,oBAAqBD,KAAKrB,MAAMjB,OAEpC,yBAAKyC,UAAU,cACX,kBAAC,GAAD,CACI+V,UAAWlW,KAAKkW,UAChB+X,gBAAiBjuB,KAAKiuB,gBACtBO,iBAAkBxuB,KAAKwuB,mBAE3B,kBAAC,GAAD,CACIvpB,OAAQjF,KAAKrB,MAAMsG,OACnBomB,WAAYrrB,KAAKrB,MAAM0sB,WACvBjnB,SAAUpE,KAAKrB,MAAMyF,SACrBW,aAAc/E,KAAKrB,MAAMoG,aACzBqa,6BAA8Bpf,KAAKof,6BACnC4Y,gBAAiBh4B,KAAKrB,MAAMq5B,gBAC5BpO,gBAAiB5pB,KAAKrB,MAAMirB,gBAC5BhlB,QAAS5E,KAAKrB,MAAMiG,QACpBE,QAAS9E,KAAKrB,MAAMmG,QACpBN,UAAWxE,KAAKrB,MAAM6F,aAG9B,yBAAKrE,UAAU,eACX,kBAAC,GAAD,CAAWqE,UAAWA,Q,+BAO1C,WACIxE,KAAKL,oBAAoB,QAAS,CAC9B,iBAAqBK,KAAKuzB,eAC1B,gBAAoBvzB,KAAKinB,cACzB,eAAmBjnB,KAAKw6B,aACxB,aAAiBx6B,KAAKN,4BAEJoJ,OAAOmV,aAAagB,QAAQ,sBAE9Cjf,KAAKmhB,4BACLrY,OAAOmV,aAAaC,QAAQ,oBAAoB,Q,GAx8BxC5d,cCYLm6B,G,kDAnCb,WAAYn7B,GAAQ,IAAD,8BACjB,cAAMA,IAORo7B,mBAAqB,WACnB,EAAK55B,SAAS,CACZ5C,MAAQ4K,OAAO6xB,WACfx8B,OAAS2K,OAAO8xB,eATlB,EAAKj8B,MAAQ,CACXT,MAAO4K,OAAO6xB,WACdx8B,OAAS2K,OAAO8xB,aAJD,E,0CAenB,WAAU,IAAD,EACmB56B,KAAKrB,MAAvBR,EADD,EACCA,OAAQD,EADT,EACSA,MAEhB,OACE,kBAACyS,GAAarS,SAAd,CAAuBc,MAAOiR,GAAOC,OACnC,kBAAC,EAAD,KACE,yBAAKnQ,UAAU,OACX,kBAAC,GAAD,CAAOjC,MAAOA,EAAOC,OAAQA,S,+BAOzC,WACE2K,OAAOsd,iBAAiB,SAAUpmB,KAAK06B,wB,GA/BzB9pB,IAAMtQ,WCKJu6B,QACW,cAA7B/xB,OAAO6Y,SAASmZ,UAEe,UAA7BhyB,OAAO6Y,SAASmZ,UAEhBhyB,OAAO6Y,SAASmZ,SAAStX,MACvB,2DCZNuX,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFxtB,SAASytB,eAAe,SDyHpB,kBAAmBxY,WACrBA,UAAUyY,cAAcC,MACrB3a,MAAK,SAAA4a,GACJA,EAAaC,gBAEdvD,OAAM,SAAA5L,GACLhQ,QAAQgQ,MAAMA,EAAMoP,c","file":"static/js/main.0125669f.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nconst initialState = {\n  tool : null,\n  currentOpenSubMenu : null,\n  autoActivate : null,\n  previousSelectedTools : {},\n  selectAreaVisible : false,\n  selectAreaPosition : {\n    x : 0,\n    y : 0,\n    width : 0,\n    height : 0,\n  }\n};\n\nconst store = createContext(initialState);\nconst { Provider, Consumer } = store;\n\nconst ToolsProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    const newState = {...state};\n    switch(action.type) {\n      case 'activateTool':\n        newState.tool = action.data.tool;\n        if(state.currentOpenSubMenu) {\n          newState.previousSelectedTools[state.currentOpenSubMenu] = action.data.tool;\n        }\n        return newState;\n      case 'activateSubMenu':\n        newState.currentOpenSubMenu = action.data.subMenu;\n        if(newState.previousSelectedTools[newState.currentOpenSubMenu] && action.data.subMenu !== null) {\n          newState.autoActivate = newState.previousSelectedTools[newState.currentOpenSubMenu];\n        } else if (action.data.defaultTool) {\n          newState.autoActivate = action.data.defaultTool;\n        }\n        return newState;\n      case 'resetToolbar':\n        newState.tool = null;\n        newState.currentOpenSubMenu = null;\n        newState.autoActivate = null;\n        return newState;\n      case 'resetAutoActivate':\n        newState.autoActivate = null;\n        return newState;\n      case 'activateSelectArea':\n        newState.selectAreaVisible = true;\n        newState.selectAreaPosition = action.data.selectAreaPosition;\n        return newState;\n      case 'updateSelectArea':\n        newState.selectAreaPosition = action.data.selectAreaPosition;\n        return newState;\n      case 'resetSelectArea':\n        newState.selectAreaVisible = false;\n        newState.selectAreaPosition = initialState.selectAreaPosition;\n        return newState;\n      default:\n        throw new Error();\n    };\n  }, {...initialState});\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nconst ToolsConsumer = Consumer;\n\nexport { store, ToolsProvider, ToolsConsumer };","import React, {Component} from 'react';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nclass Tool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n    }\n  \n    handleToolSelect = (e) => {\n        this.context.dispatch({type : \"activateTool\", data : {tool : this.props.type}});\n        this.props.handleDeselectAllElements();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            >{(this.props.content || null)}</div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.context.state.autoActivate === this.props.type) {\n            this.handleToolSelect();\n            this.context.dispatch({type : \"resetAutoActivate\"});\n        }\n\n    }\n    \n  }\n\n\n  Tool.contextType = store;\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.context.dispatch(\n            {\n                type : \"activateSelectArea\", \n                data : {\n                    selectAreaPosition : {\n                        x : dragStartX,\n                        y : dragStartY,\n                        width : e.movementX,\n                        height : e.movementY,\n                    }\n                }\n            }\n        );\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n\n        const selectionAreaCoords = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n\n        this.context.dispatch(\n            {\n                type : \"updateSelectArea\", \n                data : {\n                    selectAreaPosition : Object.assign({}, this.context.state.selectAreaPosition, positionUpdate)\n                }\n            }\n        );\n\n        this.setState(selectionAreaCoords);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n        this.context.dispatch(\n            {\n                type : \"resetSelectArea\"\n            }\n        );\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  Select.contextType = store;\n\n  export default Select;","import React, {Component} from 'react';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleToggleSubMenu = (e) => {\n        e.stopPropagation();\n        const {\n            toolSubMenuOpen\n        } = this.state;\n\n        if(toolSubMenuOpen) {\n\n            this.setState({\n                toolSubMenuOpen : false\n            });\n            this.context.dispatch(\n                {\n                    type : \"activateSubMenu\", \n                    data : {\n                        subMenu : null\n                    }\n                }\n            );\n\n        } else {\n\n            this.setState({\n                toolSubMenuOpen : true\n            });\n\n            this.context.dispatch(\n                {\n                    type : \"activateSubMenu\", \n                    data : {\n                        subMenu : this.props.type,\n                        defaultTool : this.props.defaultTool\n                    }\n                }\n            );\n        }\n        \n        \n    }\n  \n    render() {\n\n        let submenuCSS = `toolbar_submenu toolbar_subMenu_${this.props.type}`;\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        const itemColumnLimit = 5;\n        const subMenuItemColumns = [[]];\n        let counter = 0,\n            columnCounter = 0;\n        this.props.subMenuItems.forEach((item) => {\n            if(counter < itemColumnLimit) {\n                subMenuItemColumns[columnCounter].push(item);\n                counter++;\n            } else {\n                counter = 0;\n                columnCounter++;\n                subMenuItemColumns[columnCounter] = [];\n                subMenuItemColumns[columnCounter].push(item);\n                counter++;\n            }\n        });\n\n        let toolbarIcon = `toolbar_${this.props.type}`;\n\n        if(this.context.state.previousSelectedTools[this.props.type] && !this.props.noIconChange) {\n            toolbarIcon = `toolbar_${this.context.state.previousSelectedTools[this.props.type]}`;\n        }\n\n        return (\n            <div \n                className={`toolbar_tool ${toolbarIcon}`}\n                onClick={this.handleToggleSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    <div className={\"toolbar_submenu_scrollContainer\"}>\n                    {\n                        subMenuItemColumns.map((column, i) => (\n                            <div className=\"toolbar_subMenu_column\" key={`subMenu_column_${i}`}>\n                                {column.map(item => item)}\n                            </div>\n                        ))\n                    }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        const shouldAutoCloseMenu = this.context.state.currentOpenSubMenu !== this.props.type;\n        if(shouldAutoCloseMenu && this.state.toolSubMenuOpen) {\n            this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  MultiTool.contextType = store;\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\",\n            alignItems : \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\",\n        hidden : false,\n        groups : []\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n\n        this.subMenuType = \"shape\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu}\n                defaultTool={\"shapeRect\"}\n            />\n                   \n        );\n    }\n    \n  }\n\n  Shape.contextType = store;\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.subMenuType = \"postit\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"postitSquare\"}\n            />\n                   \n        );\n    }\n    \n  }\n  \n  Postit.contextType = store;\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.subMenuType = \"line\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"lineStraight\"}\n            />\n                   \n        );\n    }\n    \n  }\n\n  Line.contextType = store;\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Emoji extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 24;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"emoji\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.emojiCharacterCode = window.workshoppr.emojiCharacter;\n        newElement.fixedRatio = \"true\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"emoji\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.emojiCharacterCode = window.workshoppr.emojiCharacter;\n        newElement.fixedRatio = \"true\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            emojiCharacter,\n            emojiCharacterCode,\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type={\"emoji_\"+emojiCharacterCode}\n                content={emojiCharacter}\n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Emoji;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nimport Emoji from './emoji';\n\nclass Emojis extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n\n        this.subMenuType = \"emoji\";\n        if(!window.workshoppr) {\n            window.workshoppr = {};\n        }\n        window.workshoppr.emojiCharacter = String.fromCodePoint((String(\"128512\").toString(16)));\n    }\n\n    uglyHack(e) {\n        //NEEDS TO BE REMOOVED ONCE WE SWITCH TO STORES FOR ELEMENT DATA\n        window.workshoppr.emojiCharacter = String.fromCodePoint((String(e.target.id).toString(16)));\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const emojRange = [128512,128515,128516,128513,128518,128517,129315,128514,128578,128579,128521,128522,128519,129392,128525,129321,128536,128535,9786,128538,128537,128523,128539,128540,129322,128541,129297,129303,129325,129323,129300,129296,129320,128528,128529,128527,128530,128580,128556,128558,129317,128524,128532,128554,129316,128564,128567,129298,129301,129314,129326,129319,129397,129398,129396,128565,129327,129312,129395,128526,129299,129488,128533,128577,128562,128563,129402,128552,128560,128549,128546,128557,128561,128534,128531,128553,128548,128545,129324,128520,128127,128128,9760,128169,129313,128121,128122,128123,128125,128126,129302,128570,128569,128571,128576,128575,128584,128585,128586,128139,128140,128157,128148,10084,129505,128155,128154,128153,128156,128175,128165,128166,128168,128371,128163,128172,128495,128173,128164,128075,129306,128400,9995,128406,128076,9996,129310,129311,129304,129305,128072,128073,128070,128405,128071,9757,128077,128078,128074,129307,129308,128079,128588,128080,129309,128591,9997,128133,128170,129462,128066,128067,129504,129463,129460,128064,128065,128069,128068,128118,129490,128104,129492,128105,128117,128116,128581,128129,128587,129318,129335,127877,129464,129465,129497,129498,129499,129500,129501,129502,129503,127939,128131,128378,129496,128704,128716,128053,128018,129421,128054,128021,128041,128058,129418,129437,128049,128008,129409,128047,128005,128006,128052,128014,129412,129427,129420,128046,128002,128003,128055,128022,128023,128015,128016,128042,128043,129426,129433,128024,129423,129435,128045,128001,128057,128048,128063,128007,129428,129415,128059,128040,128060,129432,129441,128062,129411,128020,128019,128035,128036,128038,128039,129413,129414,129442,129417,129434,128056,129436,128010,128034,129422,128013,129430,129429,128051,128044,128032,128033,128025,128012,129419,128027,128028,128029,128030,128375,129410,129439,129440,128144,127801,127794,127795,127796,127797,9752,127809,127815,127816,127817,127818,127819,127820,127821,129389,127822,127823,127825,127827,129373,127813,129381,127814,129364,129365,127798,127812,127838,129384,129360,129374,129472,129385,127828,127839,127829,127789,129386,127790,127859,127857,127846,127849,127856,129473,127851,127852,127853,127868,127870,127863,127864,127866,127867,129346,127757,127758,127759,128506,129517,127956,127755,127957,127958,128642,128643,128644,128652,128656,128658,128657,128659,128661,127949,128690,128756,128761,128758,128755,128674,9992,128641,127771,9728,127776,9729,9925,9928,127780,127782,127784,127786,127785,127752,9748,9889,10052,9731,127754,127875,127876,129512,127880,127881,127882,127873,127942,9917,127936,127955,127918,127922,9824,9829,9830,9827,128083];\n\n        const subMenuTools = [];\n\n        emojRange.forEach(x => {\n            const emojiEntity = String.fromCodePoint((String(x).toString(16)));\n              subMenuTools.push(\n                <Emoji\n                    emojiCharacter={(\n                    <span className={\"emojiCharacter\"} id={x} onClick={this.uglyHack}>    \n                        {emojiEntity}\n                    </span>\n                    )}\n                    emojiCharacterCode={emojiEntity}\n                    key={\"tool_emoji-\"+x}\n                    handleDeselectAllElements={handleDeselectAllElements}\n                    handleDrawCanvasShow={handleDrawCanvasShow}\n                    registerDragHandler={registerDragHandler}\n                    handleDragMove={handleDragMove}\n                    handleDragEnd={handleDragEnd}\n                    currentSelectedTool={currentSelectedTool}\n                />\n            );\n        });\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"emoji_😀\"}\n                noIconChange={true}\n            />\n                   \n        );\n    }\n    \n  }\n\n  Emojis.contextType = store;\n\n  export default Emojis;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Unnamed\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Unnamed\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Link extends Component {\n\n    handleLinkClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleLinkDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"link\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleLinkClick}\n                handleDragStart={this.handleLinkDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport Slide from \"./slide\";\nimport Link from \"./link\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.subMenuType = \"more\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Link\n                key={\"tool_link\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />\n        ];\n\n        return (\n\n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"slide\"}\n                noIconChange={true}\n            />\n                   \n        );\n    }\n    \n  }\n\n  More.contextType = store;\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Emojis from './emojis';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.props.handleDeselectAllElements();\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\"\n            >\n                <div className=\"toolbar\">\n                    <Select \n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Emojis\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleDeselectAllElements={handleDeselectAllElements}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    render() {\n        const {\n            handleDeselectAllElements,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        return (\n            <div className=\"tools\">\n                <Toolbar\n                    handleDeselectAllElements={handleDeselectAllElements} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {PureComponent} from 'react';\nimport { store } from '../../context/tools';\n\nimport './styles.css';\n\nclass DrawCanvas extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n    }\n\n    handleDrawCanvasHide = (e) => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        this.context.dispatch({type : \"resetToolbar\"});\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n  \n    render() {\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.context.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.context.state.tool && this.context.state.tool !== \"pan\") {\n            drawCanvasStyles.display = \"block\";\n        }\n\n        return (\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onPointerUp={this.handleDrawCanvasHide}\n                    //onPointerOut={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n        );\n    }\n    \n  }\n\n  DrawCanvas.contextType = store;\n\n  export default DrawCanvas;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : false\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24,\n        elementHeight : 0\n      };\n      this.sizeCheckerInterval = null;\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize*this.props.gridSpace.zoomLevel\n        });\n    }\n\n    sizeChecker = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            const newFontSize = (this.state.fontSize/3)*2;\n            this.setState({fontSize : newFontSize});\n        } else if(isAutoResize && (this.textInput.clientHeight < this.textContainer.clientHeight) && this.state.fontSize < 24) {\n            const twoThirds = (1/3*2);\n            const nextExpectedHeight = (this.textInput.clientHeight/(twoThirds*100))*100;\n            if(nextExpectedHeight < this.textContainer.clientHeight) {\n                const newFontSize = (this.state.fontSize/(twoThirds*100))*100;\n                this.setState({fontSize : newFontSize});\n            }\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            if(this.state.elementHeight !== this.textContainer.scrollHeight) {\n                this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n                this.setState({elementHeight : this.textContainer.scrollHeight});\n            }\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            data\n        } = nextProps;\n\n        const {\n            fontSize,\n            elementHeight\n        } = nextState;\n\n        const needsUpdateData = (data !== this.props.data);\n        const needsUpdateFont = (fontSize !== this.state.fontSize);\n        const needsUpdateLayout = (elementHeight !== this.state.elementHeight);\n\n        if(needsUpdateData || needsUpdateFont || needsUpdateLayout) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       const textStyles = {\n            fontSize : this.state.fontSize\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = this.state.elementHeight;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        if(data.fontStyle.textAlign) {\n            textStyles.textAlign = data.fontStyle.textAlign;\n            if(data.fontStyle.textAlign === \"left\") {\n                styles.justifyContent = \"flex-start\";\n            } else if (data.fontStyle.textAlign === \"right\") {\n                styles.justifyContent = \"flex-end\";\n            }\n        }\n\n        //TOTEST : text aligns correctly\n        if(data.fontStyle.alignItems) {\n            textStyles.alignItems = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                styles.alignItems = \"flex-start\";\n            } else if (data.fontStyle.alignItems === \"bottom\") {\n                styles.alignItems = \"flex-end\";\n            }\n        }\n        if(data.fontStyle.color) {\n            textStyles.color = data.fontStyle.color;\n        }\n\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={textStyles}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data && this.props.data.id) {\n            this.textInput.focus();\n            const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n            if(moveCaretToEnd && document.createRange) {\n                let range = document.createRange();\n                range.selectNodeContents(this.textInput);\n                range.collapse(false);\n                let selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            if(!prevProps.data || (this.props.data.id !== prevProps.data.id)) {\n                this.setState({\n                    fontSize :  this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel,\n                    elementHeight : this.props.data.styles.height/this.props.gridSpace.zoomLevel\n                });\n                this.sizeCheckerInterval = setInterval(this.sizeChecker, 100);\n            }\n            \n       } else {\n           clearInterval(this.sizeCheckerInterval);\n       }\n   }\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n    fontColors : [\n      \"#ffffff\", //white\n      \"#999\", //grey\n      \"#080808\" //text grey/black\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      update : {\n        predefinedColor : this.props.colorID\n      }\n    });\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles[0].styles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            fill : color,\n            fillOpacity : newFillOpacity\n          }\n        }\n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            fillOpacity : e.target.value\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        const fillOpacity = this.props.currentStyles[0].styles.fillOpacity;\n\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles[0].styles.fill \n        };\n\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            stroke : color,\n            strokeOpacity : newStrokeOpacity\n          }\n        }\n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeOpacity : e.target.value\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeWidth : (e.target.value*this.props.initialZoomLevel)\n          }\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextFormat\";\n\nclass TextFormat extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"fontWeight\" : newFontWeight\n          }\n        }\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"fontStyle\" : newFontStyle\n          }\n        }\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            textDecorationLine\n          }\n        }\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            textDecorationLine\n          }\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text format\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextFormat;","import React, {Component} from 'react';\n\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleUpdateColor = (color) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            color\n          }\n        }\n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          update : {\n            fontStyle : {\n              fontFamily : e.target.value\n            }\n          }\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            fontSize : (e.target.value*this.props.initialZoomLevel)\n          }\n        }\n      });\n    }\n\n    render() {\n        const theme = this.context;\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.fontColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('fontColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        min=\"0\"\n                        onChange={this.handleSizeChange}\n                        value={Math.round(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  FontStyle.contextType = ThemeContext;\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction AlignTopIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignCenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignBottomIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"left\"\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"right\"\n          }\n        }\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"center\"\n          }\n        }\n      });\n    }\n\n    handleAlignTop = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"top\"\n          }\n        }\n      });\n    }\n\n    handleAlignCenter = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"center\"\n          }\n        }\n      });\n    }\n\n    handleAlignBottom = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"bottom\"\n          }\n        }\n      });\n    }\n\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null,\n            topAlignSelected = (this.props.fontStyle.alignItems === \"top\") ? \"selected\" : null,\n            centerAlignSelected = (this.props.fontStyle.alignItems === \"center\") ? \"selected\" : null,\n            bottomAlignSelected = (this.props.fontStyle.alignItems === \"bottom\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${topAlignSelected}`} onClick={this.handleAlignTop}>\n                      <AlignTopIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerAlignSelected}`} onClick={this.handleAlignCenter}>\n                      <AlignCenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${bottomAlignSelected}`} onClick={this.handleAlignBottom}>\n                      <AlignBottomIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n\n    this.props.handleUpdateElementProperty({\n      update : {\n        link : e.target.value\n      }\n    });\n\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slide, i) =>  <option value={`element://${slide.id}`} key={`linkOption_${slide.id}`}>Slide {(i+1)}</option>)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring to front\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send to back\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          URL : e.target.value\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.URL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementVisibility extends Component {\n\n    handleToggleLock = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          hidden : !this.props.isHidden\n        }\n      });\n    }\n\n    render() {\n        \n      const {isHidden} = this.props;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Make this element not visible\"}\n          >\n            {isHidden ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M12 6.5c2.76 0 5 2.24 5 5 0 .51-.1 1-.24 1.46l3.06 3.06c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l2.17 2.17c.47-.14.96-.24 1.47-.24zM3.42 2.45L2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.97-.3 4.31-.82l3.43 3.43 1.41-1.41L3.42 2.45zM12 16.5c-2.76 0-5-2.24-5-5 0-.77.18-1.5.49-2.14l1.57 1.57c-.03.18-.06.37-.06.57 0 1.66 1.34 3 3 3 .2 0 .38-.03.57-.07L14.14 16c-.65.32-1.37.5-2.14.5zm2.97-5.33c-.15-1.4-1.25-2.49-2.64-2.64l2.64 2.64z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M12 4C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementVisibility;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementGroup extends Component {\n\n    areElementsAlreadyGrouped = () => {\n      const { elements } = this.props;\n        \n      let areGrouped = true;\n\n      if(elements[0].groups.length) {\n        const lastGroup = elements[0].groups[elements[0].groups.length-1]; \n        elements.forEach(element => {\n          if(element.groups.length) {\n            if(element.groups[element.groups.length-1] !== lastGroup) {\n              areGrouped = false;\n            }\n          } else {\n            areGrouped = false;\n          }\n          \n        })\n      } else {\n        areGrouped = false;\n      }\n      return areGrouped;\n    }\n\n    handleToggleGroup = () => {\n      const areGrouped = this.areElementsAlreadyGrouped();\n\n      if(!areGrouped) {\n        this.props.handleUpdateElementProperty({\n          update : {\n            groups : [Shortid.generate()]\n          }\n        });\n      } else {\n        const { elements } = this.props;\n        const lastGroup = elements[0].groups[elements[0].groups.length-1];\n        this.props.handleUpdateElementProperty({\n          remove : {\n            groups : [lastGroup]\n          }\n        });\n      }\n      \n    }\n\n    render() {\n      \n      const areGrouped = this.areElementsAlreadyGrouped();\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleGroup}\n            title={(!areGrouped ? \"Group these elements\" : \"Ungroup these elements\")}\n          >\n            {!areGrouped ?\n              <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"m23,7l0,-6l-6,0l0,2l-10,0l0,-2l-6,0l0,6l2,0l0,10l-2,0l0,6l6,0l0,-2l10,0l0,2l6,0l0,-6l-2,0l0,-10l2,0zm-20,-4l2,0l0,2l-2,0l0,-2zm2,18l-2,0l0,-2l2,0l0,2zm12,-2l-10,0l0,-2l-2,0l0,-10l2,0l0,-2l10,0l0,2l2,0l0,10l-2,0l0,2zm4,2l-2,0l0,-2l2,0l0,2zm-2,-16l0,-2l2,0l0,2l-2,0z\" fill={iconColor}/>\n                <rect fill=\"none\" height=\"5.5\" id=\"svg_2\" stroke={iconColor} width=\"5.5\" x=\"8\" y=\"10.22656\"/>\n                <rect fill=\"none\" height=\"5.5\" id=\"svg_3\" stroke={iconColor} width=\"5.5\" x=\"11.25\" y=\"7.72656\"/>\n              </svg>\n              :\n              <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect fill=\"none\" height=\"9.25\"  stroke={iconColor} width=\"9\" x=\"5.25\" y=\"9.47656\"/>\n                <rect fill=\"none\" height=\"9.25\"stroke={iconColor} width=\"9\" x=\"11\" y=\"3.72656\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementGroup;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport TextFormat from './editors/textFormat';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\nimport ElementVisibility from './editors/elementVisibility';\nimport ElementGroup from './editors/elementGroup';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"textFormat\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textFormat\",  \"textAlignment\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textFormat\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"youtube\" : [\"url\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"group\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements.map((element) => element.id);\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = [...multiElementEditableFeatures];\n            let areAllShapes = true;\n            selectedElements.forEach(element => {\n                if(element.type !== \"shape\") {\n                    areAllShapes = false;\n                }\n            });\n            if(areAllShapes) {\n                editButtonTypes.unshift(\"customColor\");\n            }\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textFormat':\n                    return <TextFormat \n                                key={`${selectedElements[0].id}_${button}`}\n                                fontStyle={selectedElements[0].fontStyle}\n                                initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                currentOpenSubMenu={this.state.currentOpenSubMenu}\n                            />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'group':\n                        return <ElementGroup \n                            key={`${selectedElements[0].id}_${button}`}\n                            elements={selectedElements}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        />;\n                    case 'visibility':\n                        return <ElementVisibility \n                            key={`${selectedElements[0].id}_${button}`}\n                            isHidden={selectedElements[0].hidden}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    URL={selectedElements[0].URL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Guides extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          leftGuideVisible : false,\n          rightGuideVisible : false,\n          topGuideVisible : false,\n          bottomGuideVisible : false\n        };\n        this.hideGuidesTimeout = null;\n    }\n\n    hideGuides = () => {\n        this.setState({\n            leftGuideVisible : false,\n            rightGuideVisible : false,\n            topGuideVisible : false,\n            bottomGuideVisible : false,\n        });\n    }\n\n    render() {\n        const {\n            boundingBox\n        } = this.props;\n\n        const {\n            leftGuideVisible,\n            rightGuideVisible,\n            topGuideVisible,\n            bottomGuideVisible\n        } = this.state;\n\n        const leftGuideStyles = {\n            height : `100vh`,\n            width : `1px`,\n            transform : `translate3d(${(boundingBox.x)}px, 0px, 0)`\n        };\n\n        const rightGuideStyles = {\n            height : `100vh`,\n            width : `1px`,\n            transform : `translate3d(${(boundingBox.x+boundingBox.width)}px, 0px, 0)`\n        };\n\n        const topGuideStyles = {\n            height : `1px`,\n            width : `100vw`,\n            transform : `translate3d(0px, ${(boundingBox.y)}px, 0)`\n        };\n\n        const bottomGuideStyles = {\n            height : `1px`,\n            width : `100vw`,\n            transform : `translate3d(0px, ${(boundingBox.y+boundingBox.height)}px, 0)`\n        };\n\n        if(leftGuideVisible) {\n            leftGuideStyles.opacity = 0.3;\n        }\n\n        if(rightGuideVisible) {\n            rightGuideStyles.opacity = 0.3;\n        }\n\n        if(topGuideVisible) {\n            topGuideStyles.opacity = 0.3;\n        }\n\n        if(bottomGuideVisible) {\n            bottomGuideStyles.opacity = 0.3;\n        }\n\n        return (\n            <div className=\"guides\">\n                <div className=\"guide\" style={leftGuideStyles} />\n                <div className=\"guide\" style={rightGuideStyles} />\n                <div className=\"guide\" style={topGuideStyles} />\n                <div className=\"guide\" style={bottomGuideStyles} />\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const movingRight = this.props.boundingBox.x > prevProps.boundingBox.x,\n              movingLeft = this.props.boundingBox.x < prevProps.boundingBox.x,\n              resizingWidth = (this.props.boundingBox.width !== prevProps.boundingBox.width),\n              movingUp = this.props.boundingBox.y < prevProps.boundingBox.y,\n              movingDown = this.props.boundingBox.y > prevProps.boundingBox.y,\n              resizingHeight = (this.props.boundingBox.height !== prevProps.boundingBox.height),\n              newState = {},\n              hideTimeout = 3500;\n        \n        if(movingRight) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if (movingLeft) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if (resizingWidth) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        }\n\n        if (movingUp) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if(movingDown) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if(resizingHeight) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        }\n\n        if(Object.keys(newState).length > 0) {\n            this.setState(newState);\n        }\n    }\n}\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, currentState.zoomLevel, currentState.offsetX, currentState.offsetY);\n                const xPercentageIncrease = (boundingBox.rawWidth + (e.movementX*currentState.zoomLevel))/boundingBox.rawWidth,\n                      yPercentageIncrease = (boundingBox.rawHeight + (e.movementY*currentState.zoomLevel))/boundingBox.rawHeight;\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    //TOTEST : Multi-selected elements resize correctly \n                    newElement.styles.width *= xPercentageIncrease;\n                    newElement.styles.height *= yPercentageIncrease;\n                    const relativeXOffset = newElement.styles.x-boundingBox.rawX,\n                          relativeYOffset = newElement.styles.y-boundingBox.rawY;\n\n                    newElement.styles.x = (newElement.styles.x-relativeXOffset)+(relativeXOffset*xPercentageIncrease);\n                    newElement.styles.y = (newElement.styles.y-relativeYOffset)+(relativeYOffset*yPercentageIncrease);\n\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width + (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                //TOTEST : Fixed ratio elements resize correctly \n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width + (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                //TOTEST : Single elements resize correctly\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <>\n            <Guides \n                boundingBox={boundingBox}\n            />\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n            \n           </>\n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    handleElementDragStart() {\n        console.log(\"drag started\");\n        const selectedElementIds = this.getSelectedElements(this.state.elementState).map(element => element.id);\n        this.handleShiftElementPosition(\"forward\", selectedElementIds);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragStartHandler\" : this.handleElementDragStart,\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component, PureComponent} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(`miralFile_${this.props.fileName}`);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDblClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\nconst autosave_fileName = `miral_autoSave`;\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n\n    deselectElements(elementState) {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(item.selected !== false) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n\n    autoSave = () => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        if(Object.keys(applicationState.elements).length > 0) {\n            const stateToSave = {\n                elements : applicationState.elements,\n                elementState : applicationState.elementState,\n                boardName : applicationState.boardName,\n                zoomLevel : applicationState.zoomLevel,\n                offsetX : applicationState.offsetX,\n                offsetY : applicationState.offsetY\n            };\n            window.localStorage.setItem(autosave_fileName, JSON.stringify(stateToSave));\n        } else {\n            window.localStorage.removeItem(autosave_fileName);\n        }\n       \n        \n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        \n        let fileName = `miralFile_${applicationState.boardName}`;\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    saveToFile = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(fileName);\n        const dataToLoad = JSON.parse(file);\n        const state = Object.assign({}, this.props.applicationState, dataToLoad);\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.props.handleUpdateElementsAndState(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                        deleteFile={this.deleteFileFromLocalStorage}\n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n\n    deleteFileFromLocalStorage = () => {\n        const applicationState = this.props.getState();\n        const {\n            boardName \n        } = applicationState;\n\n        window.localStorage.removeItem(`miralFile_${boardName}`);\n        this.newFile();\n    }\n\n    newFile = () => {\n        //TODO write robust mechanism to determine whether file has changed.\n        const checkWillLoseChanges = window.localStorage.getItem(autosave_fileName);\n        let userConfirmation = true;\n        if(checkWillLoseChanges) {\n            userConfirmation = window.confirm(\"All changes in current board will be lost, are you sure?\");\n        }\n        if(userConfirmation) {\n            const applicationState = this.props.getState();\n            const blankState = {\n                elements : {},\n                elementState : {},\n                boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n                zoomLevel : 100,\n                offsetX : 0,\n                offsetY : 0\n            };\n            const state = Object.assign({}, applicationState, blankState);\n            this.props.handleUpdateElementsAndState(state);\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        }\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.props.loadTemplatesAndTutorials();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr.com</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.newFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M4.01 2L4 22h16V8l-6-6H4.01zM13 9V3.5L18.5 9H13z\"/>\n                                    </svg>\n                                    <span>New board</span>\n                                </div>\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                {(!mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToBrowser}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                                <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                            </svg>\n                                            <span>Save to Browser</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromBrowser}\n                                        >\n                                            <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                                <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                            </svg>\n                                            <span>Load from Browser</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.deleteFileFromLocalStorage}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"/>\n                                    </svg>\n                                    <span>Delete board</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadTemplatesAndTutorials}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 8v12H2V10h20zm-6 6l-6-3.27v6.53L16 16z\"/>\n                                    </svg>\n                                    <span>Templates &amp; Guides</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        //enable monday.com save options & disable browser save\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n        //load previous autosave\n        const checkIfAlreadyExists = window.localStorage.getItem(autosave_fileName);\n        if(checkIfAlreadyExists) {\n            //this.loadFileFromBrowser(autosave_fileName);\n        }\n        //start autosave\n        //setInterval(this.autoSave, 5000);\n\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleJoinBoard = (e) => {\n        window.workshoppr.joinBoard(this.state.organisation, this.state.boardID);\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleJoinBoard}\n                                >Join existing session</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        } else if (window.location.href.indexOf(\"boardId=\") !== -1) {\n            const organisation = window.location.href.match(/boardViewId=([^&$]*)/m)[1];\n            const boardID = window.location.href.match(/boardId=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(Array.isArray(clone[subPropertyKey])) {\n          clone[subPropertyKey] = [].concat(clone[subPropertyKey]);\n        } else if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n\nexport function isObjectAndNotNull(item) {\n  return typeof item === 'object' && item !== null;\n};\n\nexport function mergeObjects(primaryObject, mergeObject) {\n  const mergedObject = {...primaryObject};\n  Object.keys(mergeObject).forEach(key => {\n    if(Array.isArray(mergeObject[key]) && Array.isArray(primaryObject[key])) {\n      mergedObject[key] = mergedObject[key].concat(mergeObject[key]);\n    } else if(isObjectAndNotNull(mergeObject[key]) && isObjectAndNotNull(primaryObject[key])) {\n      mergedObject[key] = mergeObjects(primaryObject[key], mergeObject[key]);\n    } else {\n      mergedObject[key] = mergeObject[key];\n    }\n  });\n  return mergedObject;\n}\n\nexport function removeData(primaryObject, mergeObject) {\n  const mergedObject = {...primaryObject};\n  Object.keys(mergeObject).forEach(key => {\n    \n    if(Array.isArray(mergeObject[key]) && Array.isArray(primaryObject[key])) {\n      mergeObject[key].forEach(itemToRemove => {\n        mergedObject[key] = mergedObject[key].filter(item => item !== itemToRemove);\n      });\n    } else if(isObjectAndNotNull(mergeObject[key]) && isObjectAndNotNull(primaryObject[key])) {\n      mergedObject[key] = removeData(primaryObject[key], mergeObject[key]);\n    } else {\n      delete mergedObject[key];\n    }\n  });\n  return mergedObject;\n}","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n      this.SAFARIHACK_SCREENX = 0;\n      this.SAFARIHACK_SCREENY = 0;\n      this.containerElement = null;\n    }\n\n    handleMouseWheel = (e) => {\n        if (e.ctrlKey) {\n            e.preventDefault();\n            this.handleZoom(e);\n        } else {\n            const simulatedPanEvent = {\n                movementX : e.deltaX*-1,\n                movementY : e.deltaY*-1\n            };\n            this.props.handlePanMove(simulatedPanEvent);\n        }\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + (dir*2) : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            isSelected : this.props.isSelected(e.target.id),\n            elementID : e.target.id\n        });\n        this.SAFARIHACK_SCREENX = e.screenX;\n        this.SAFARIHACK_SCREENY = e.screenY;\n\n        console.log(e.target.id);\n        \n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            isSelected,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        \n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            let dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            const wasStartOfDrag = (drag === \"mouseDown\" && !wasAccidentalMovement);\n            const wasMiddleOfDrag = (dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement);\n            const wasCanvasDrag = (!wasAccidentalMovement && !isSelected && elementID !== \"drawCanvas\" && elementID !== \"resizerHandle\" && elementID !== \"elementSelectionArea\");\n            if(wasCanvasDrag) {\n                dragHandlers = this.props.dragHandlers[\"board\"];\n                this.setState({elementID : \"board\"});\n            }\n            if(wasStartOfDrag) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else if(wasMiddleOfDrag) {\n                //THIS BROWSER HACK IS NEEDED BECAUSE SAFARI POINTERMOVE EVENT DOES NOT SUPPORT MOVEMENTX or MOVEMENTY - PLEASE REMOVE IF NO LONGER NEEDED (i raised a ticket with apple)\n                const movementX = e.screenX-this.SAFARIHACK_SCREENX;\n                const movementY = e.screenY-this.SAFARIHACK_SCREENY;\n                this.SAFARIHACK_SCREENX = e.screenX;\n                this.SAFARIHACK_SCREENY = e.screenY;\n                e.movementX = movementX;\n                e.movementY = movementY;\n                //END BROWSER HACK\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -3 && interactionMovement < 3)\n    }\n\n    render() {\n\n        const styles={\n            cursor : \"pointer\",\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\",\n            touchAction : \"none\"\n        }\n        \n        return (\n            <div\n                style={styles}\n                onPointerDown={this.handleMouseDown}\n                onPointerMove={this.handleMouseMove}\n                onPointerUp={this.handleMouseUp}\n                id=\"interActionManager\"\n                ref={(container) => { this.containerElement = container; }}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mouseleave\", (e) => {\n            const {\n                drag\n            } = this.state;\n            if(drag === \"mouseDown\" || drag === \"dragging\") {\n                //this.handleMouseUp(e); TODO Figure out how to do this while still keeping toolbar happy.\n            }\n        });\n        this.containerElement.addEventListener('wheel', this.handleMouseWheel,{ passive: false });\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        //TAB THROUGH ELEMENTS\n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.props.cancelJoinCreds}\n                    >Cancel</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    getJoinCreds = (organisation, boardID) => {\n        const newState = {\n            requestCreds : true\n        };\n        if(organisation) {\n            newState.organisation = organisation;\n        }\n        if(boardID) {\n            newState.boardID = boardID;\n        }\n        this.setState(newState);\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    cancelJoinCreds = () => {\n        const newState =  {requestCreds : false};\n        this.setState(newState);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Back</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                        cancelJoinCreds={this.cancelJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n        if(!window.workshoppr) {\n            window.workshoppr = {};\n        }\n        window.workshoppr.joinBoard = this.getJoinCreds;\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideListItem extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            editMode : false\n        };\n    }\n\n    handleToggleEditMode = (e) => {\n        e.stopPropagation();\n        this.setState({\n            editMode : !this.state.editMode\n        });\n    }\n\n    handleJumpToSlide = () => {\n        this.props.handleJumpToSlide(this.props.slideID, this.props.slideNumber);\n    }\n\n    handleSlideNameChange = (e) => {\n        this.props.changeSlideName(this.props.slideID, e.target.value);\n    }\n\n    render() {\n        const {\n            editMode\n        } = this.state;\n        return (\n            <div\n                className={\"slideList_item\"} \n                key={`slideList_name_${this.props.slideNumber}`} \n            >\n            {editMode \n                ? (\n                    <div\n                        className={\"slideList_name\"}\n                    >\n                        <span className={\"slideList_identifier\"}>\n                            <input value={this.props.slideName} onChange={this.handleSlideNameChange} />\n                        </span>\n                        <div className={\"slideList_tools\"}>\n                            <span className={\"slideList_close\"} onClick={this.handleToggleEditMode} />\n                        </div>\n                    </div>\n                ) : (\n                    <div \n                        className={\"slideList_name\"}\n                        onClick={this.handleJumpToSlide}\n                    >\n                        <span className={\"slideList_identifier\"}>\n                            {this.props.slideNumber+1} - {this.props.slideName}\n                        </span>\n                        <div className={\"slideList_tools\"}>\n                            <span className={\"slideList_editName\"} onClick={this.handleToggleEditMode} />\n                        </div>\n                    </div>\n                ) \n            }\n            \n            </div>)\n    }\n}\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : 0,\n            slideNav : false\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide].id;\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide].id, 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        \n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide].id;\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide].id, 1);\n        }\n\n    }\n\n    toggleSlideList = () => {\n        this.setState({\n            slideNav : !this.state.slideNav\n        });\n    }\n\n    handleJumpToSlide = (slideID, slideNumber) => {\n        this.props.animateToElement(slideID, 1);\n        this.setState({currentSlide : slideNumber, slideNav : false});\n    }\n  \n    render() {\n\n        const {\n            currentSlide,\n            slideNav\n        } = this.state;\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n        //TOTEST : Buttons are disabled when user cannot go to next slide\n        let slideBackwardsDisabled = \"buttonDisabled\";\n        if(currentSlide !== 0) {\n            slideBackwardsDisabled = \"\";\n        }\n\n        let slideForwardsDisabled = \"buttonDisabled\";\n        if(currentSlide < slides.length-1) {\n            slideForwardsDisabled = \"\";\n        }\n\n        const slideNavVisible = slideNav ? \"dropDown_open\" : \"\",\n              slideNavIcon = slideNav ? \"openIcon\" : \"\";\n\n        const slideNames = slides.map((slide, i) => {\n            return (\n            <SlideListItem \n                key={`slideList_name_${i}`}\n                slideNumber={i}\n                slideName={slide.slideName}\n                slideID={slide.id}\n                handleJumpToSlide={this.handleJumpToSlide}\n                changeSlideName={this.props.changeSlideName}\n            />);\n        });\n\n        return (\n            <div className={\"slideList_controls\"} style={slidesNavStyles}>\n                <span \n                    className={`iconButton backward ${slideBackwardsDisabled}`}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span\n                    className={`dropDown ${slideNavIcon}`}\n                    onClick={this.toggleSlideList}\n                >Slide {(this.state.currentSlide+1)} of {slides.length}\n                </span>\n                <span \n                    className={`iconButton forward ${slideForwardsDisabled}`}\n                    onClick={this.handleSlideForward}\n                />\n                <div className={`slideList ${slideNavVisible}`}>\n                    {slideNames}\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {PureComponent} from 'react';\n\nclass VisibilityOverlay extends PureComponent {\n  \n    render() {\n        const {shapeProps} = this.props;\n        const iconSize = shapeProps.width/5;\n        return (\n            <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                    style={{\n                        backgroundColor : \"#ccc\",\n                        backgroundImage : \"url('/icons/visibility_off-24px.svg')\",\n                        backgroundPosition : \"center center\",\n                        backgroundSize : `${iconSize}px ${iconSize}px`,\n                        backgroundRepeat : \"no-repeat\",\n                        pointerEvents : \"none\"\n                    }}\n                />\n        );\n    }\n    \n  }\n\n  export default VisibilityOverlay;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        let visibility = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByUser\";\n        } else if(elementState.selected) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByOtherUser\";\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            let textAlign = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                textAlign = \"flex-start\";\n            } else if(data.fontStyle.alignItems === \"bottom\") {\n                textAlign = \"flex-end\";\n            }\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                        style={{\n                            alignItems : textAlign\n                        }}\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n                {visibility}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            let textAlign = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                textAlign = \"flex-start\";\n            } else if(data.fontStyle.alignItems === \"bottom\") {\n                textAlign = \"flex-end\";\n            }\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                        style={{\n                            alignItems : textAlign\n                        }}\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isUniqueSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.URL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByUser\";\n        } else if(elementState.selected) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByOtherUser\";\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n\n        const slideTitle = (data.slideName === \"Unnamed\") ? `Slide ${this.props.slideNumber}` : data.slideName;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{slideTitle}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Link extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleLinkClick = (e) => {\n        if(this.props.data.link.indexOf(\"element://\") !== -1) {\n            const element = this.props.data.link.split(\"://\")[1];\n            this.props.animateToElement(element, 1);\n        } else if (this.props.data.link.indexOf(\"wswb\") !== -1) {\n            const realURL = this.props.data.link.replace(/wswb/, \"http\");\n            this.props.loadRemoteBoard(realURL);\n        } else if (this.props.data.link.indexOf(\"http\") !== -1) {\n            window.open(this.props.data.link,'_blank');\n        }\n        \n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let shape = null;\n        let overlay = null;\n        let linkHitArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 15*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n        \n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        if(data.link) {\n            \n            linkHitArea = (<rect \n                height={shapeProps.height-strokeWidth}\n                width={shapeProps.width-strokeWidth}\n                x={shapeProps.x+(strokeWidth/2)}\n                y={shapeProps.y+(strokeWidth/2)}\n                fillOpacity={0}\n                onClick={this.handleLinkClick}\n                cursor={\"pointer\"}\n            />);\n\n        }\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {linkHitArea}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Link;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Youtube extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n          iframePointerEvents : \"none\"\n      };\n      this.iframe = null;\n      this.currentFocus = null;\n    }\n\n    checkFocus = () => {\n        if(document.activeElement.title !== this.currentFocus) {\n          this.disableInteraction();\n        } else {\n            setTimeout(this.checkFocus, 1000);\n        }\n      }\n\n    handlePlayIntent = () => {\n        this.setState({iframePointerEvents : \"auto\"});\n        this.iframe.contentWindow.focus();\n        this.currentFocus = document.activeElement.title;\n        setTimeout(this.checkFocus, 1000);\n    }\n\n    disableInteraction = () => {\n        this.setState({iframePointerEvents : \"none\"});\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let iframe = null;\n        let overlay = null;\n        let hitArea = null;\n        let playArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 20*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n\n        let iframeOpacity = 1;\n        if(this.state.iframePointerEvents === \"none\") {\n            iframeOpacity = 0.6;\n        }\n\n        \n        const youtubeIDMatcher = /(?:embed\\/|v=)\\b(.+?)(?![\\w-])/g;\n        const videoID = youtubeIDMatcher.exec(data.URL);\n        const youtubeURL = \"https://www.youtube.com/embed/\"+videoID[1];\n        \n        iframe = \n            <foreignObject\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n                fill=\"#000\"\n                pointerEvents={this.state.iframePointerEvents}\n\n            >\n                <iframe\n                    title={\"youtubeVideo\"+data.id}\n                    width={(shapeProps.width/data.initialZoomLevel)}\n                    height={(shapeProps.height/data.initialZoomLevel)} \n                    src={youtubeURL} \n                    frameBorder=\"0\" \n                    allow=\"clipboard-write; encrypted-media; picture-in-picture\"\n                    allowFullScreen={true}\n                    style={{\n                        transform : `scale(${data.initialZoomLevel})`,\n                        transformOrigin : \"top\",\n                        opacity: iframeOpacity\n                    }}\n                    ref={(container) => { this.iframe = container; }}\n                />\n            \n            </foreignObject>;\n            \n        hitArea = (<rect\n            id={data.id} \n            x={shapeProps.x}\n            y={shapeProps.y}\n            height={shapeProps.height}\n            width={shapeProps.width}\n            fillOpacity={0}\n        />);\n        // CHANGE THIS SO THERE IS TEXT WHEN IT IS GREYED OUT SAYING DOUBLE CLICK TO ACIVATE, \n        if(this.state.iframePointerEvents === \"none\") {\n            playArea = (\n                <rect\n                    x={(shapeProps.x+(shapeProps.width/2)-(68*data.initialZoomLevel)/2)}\n                    y={(shapeProps.y+(shapeProps.height/2)-(48*data.initialZoomLevel)/2)}\n                    height={(48*data.initialZoomLevel)}\n                    width={(68*data.initialZoomLevel)}\n                    fillOpacity={0}\n                    cursor={\"pointer\"}\n                    onClick={this.handlePlayIntent}\n                />\n            );\n        }\n        \n\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {hitArea}\n                {iframe}\n                {playArea}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Emoji extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let emoji = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        emoji = (\n            <g\n            transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/24)})`}\n            pointerEvents={\"none\"}\n            >\n                <text\n                    fontFamily={\"'Noto Color Emoji', 'Apple Color Emoji', 'Segoe UI Emoji', Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif, LastResort\"}\n                    fontSize={\"24px\"}\n                    x={0}\n                    y={24}\n                    dy={-1}\n                    textLength={24}\n                    pointerEvents={\"none\"}\n                    style={{userSelect: \"none\"}}\n                >\n                    {data.emojiCharacterCode}\n                </text>\n            </g>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {emoji}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Emoji;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\nimport Link from './link';\nimport Youtube from './youtube';\nimport Emoji from './emoji';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            isUniqueSelected,\n            zoomLevel,\n            animateToElement,\n            loadRemoteBoard\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    isUniqueSelected={isUniqueSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"link\") {\n                slides.push(element.id);\n                return (<Link\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                    animateToElement={animateToElement}\n                    loadRemoteBoard={loadRemoteBoard}\n                />);\n            } else if (element.type === \"youtube\") {\n                return (<Youtube\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"emoji\") {\n                return (<Emoji\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n\n\n\nclass Pattern extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    \n\n    render() {\n       \n        const widthHeight = 10*this.props.zoomLevel,\n              strokeWidth = 5*this.props.zoomLevel;\n\n        return (\n            <>\n            <pattern id=\"diagonalHatch\" width={widthHeight} height={widthHeight} patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\">\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2={widthHeight} style={{stroke:\"#ccc\", strokeWidth: strokeWidth, strokeOpacity : 0.2 }} />\n            </pattern>\n            </>\n        );\n    }\n    \n  }\n\n  export default Pattern;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport DrawCanvas from './ui/tools/drawCanvas';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\nimport SlideNavigator from './ui/slideNavigator';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone, mergeObjects, removeData} from './utils';\n\n//SVG\nimport Pattern from './pattern';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        boardID : Shortid.generate(),\n        userID : Shortid.generate(),\n        zoomLevel : 50,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        }\n      };\n      this.canvasAnimations = [];\n    }\n\n    handlePanStart = (e, dragStartX, dragStartY) => {\n        this.clearCanvasAnimations();\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        \n\n        const elementData = elements[elementID];\n\n        //get correct zoomLevel\n\n        const elementHeightInReal = elementData.styles.height/zoomLevel,\n              elementWidthInReal = elementData.styles.width/zoomLevel;\n\n        let heightZoomLevel = zoomLevel,\n            widthZoomLevel = zoomLevel;\n        \n        heightZoomLevel = ((elementHeightInReal/this.props.height)*1.3)*zoomLevel;\n        widthZoomLevel = ((elementWidthInReal/this.props.width)*1.3)*zoomLevel;\n\n        const finalZoomLevel = Math.round(Math.max(heightZoomLevel, widthZoomLevel));\n\n        //get element position\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*finalZoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*finalZoomLevel),\n            zoomLevel : finalZoomLevel\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              endZoomLevel = finalPosition.zoomLevel,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              valueIncrementZoom = (endZoomLevel - zoomLevel) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentZoomLevel = zoomLevel,\n            currentSinValue = 0,\n            counter = 0;\n        \n        this.clearCanvasAnimations();\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentZoomLevel += Math.round(valueIncrementZoom * (Math.sin(currentSinValue) ** 2) * 2);\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, newZoomLevel, incrementDelay) {\n                this.canvasAnimations.push(setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                        zoomLevel : newZoomLevel\n                    });\n                }, incrementDelay));\n            }.bind(this)(currentValueX, currentValueY, currentZoomLevel, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n    clearCanvasAnimations = () => {\n        this.canvasAnimations.forEach(animation => {\n            clearTimeout(animation);\n        });\n        this.canvasAnimations = [];\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    selectGroupedElements = (newElementState) => {\n        const selectedElements = this.getSelectedElements(newElementState);\n        selectedElements.forEach(element => {\n            if(element.groups.length) {\n                const groups = element.groups;\n                groups.forEach(group => {\n                    const groupElements = Object.keys(this.state.elements).filter(element => this.state.elements[element].groups.indexOf(group) !== -1);\n                    groupElements.forEach(groupedElement => {\n                        newElementState[groupedElement] = {...newElementState[groupedElement]};\n                        newElementState[groupedElement].selected = this.state.userID;\n                    })\n                })\n            }\n        })\n        return newElementState;\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        let newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID) && isMultiSelect) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        } else if (this.isSelected(elementID) && !isMultiSelect) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        newElementStateData = this.selectGroupedElements(newElementStateData);\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = this.deselectElements(this.state.elementState);\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    deselectElements = (elementState) => {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newHeight  = Number(height)*this.state.zoomLevel;\n        if(this.state.elements[elementID].styles.height !== newHeight) {\n            const newElementsData = {...this.state.elements};\n            newElementsData[elementID] = {...newElementsData[elementID]};\n            newElementsData[elementID].styles = {...newElementsData[elementID].styles};\n            newElementsData[elementID].styles.height = newHeight;\n            this.setState({elements : newElementsData});\n        }\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        data.id.forEach((id) => {\n\n            if(data.update) {\n                let newElement = mergeObjects(newElementsData[id], data.update);\n                newElementsData[id] = newElement;\n            } else if(data.remove) {\n                let newElement = removeData(newElementsData[id], data.remove);\n                newElementsData[id] = newElement;\n            }\n            \n        });\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {},\n              newElementState = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(newIdsOrder.length, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(0, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n            newElementState[id] = this.state.elementState[id];\n        });\n        this.setState({\n            elementState : newElementState,\n            elements : newElementsData,\n            storeUndo : true\n        });\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID] = {...newElementsState[elementID]};\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        //TOTEST : nothing happens when no elements selected\n        if(selectedElements.length) { \n            const newElements = {...elements};\n            const newElementsState = {...elementState};\n            const duplicatesOffsetMargin = 8;\n\n            const duplicatesOffsetPosition = {\n                x : selectedElements[0].styles.x,\n                x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n            };\n\n            //get position for new duplicate elements\n            selectedElements.forEach(element => {\n                if(element.styles.x < duplicatesOffsetPosition.x) {\n                    duplicatesOffsetPosition.x = element.styles.x;\n                }\n                const elementX1 = element.styles.x + element.styles.width;\n                if(elementX1 > duplicatesOffsetPosition.x1) {\n                    duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n                }\n            });\n\n            const newDuplicateElements = [];\n\n            //duplicate elements & state\n            selectedElements.forEach(element => {\n                const newID = Shortid.generate();\n                const duplicateElement = objectClone(element);\n                const duplicateElementState = objectClone(elementState[element.id]);\n                duplicateElement.id = newID;\n                duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n                newElements[newID] = duplicateElement;\n                newElementsState[newID] = duplicateElementState;\n                //remove selected status for old items\n                newElementsState[element.id] = {...newElementsState[element.id]};\n                newElementsState[element.id].selected = false;\n                newDuplicateElements.push(duplicateElement);\n            });\n\n            //replace groups with new groups\n            const allPreviousGroupIDs = {};\n            newDuplicateElements.forEach(newDuplicateElement => {\n                newDuplicateElement.groups.forEach(oldGroup => {\n                    allPreviousGroupIDs[oldGroup] = true;\n                });\n            });\n            newDuplicateElements.forEach(newDuplicateElement => {\n                const newGroups = newDuplicateElement.groups.map(oldGroup => {\n                    if(allPreviousGroupIDs[oldGroup] === true) {\n                        const newGroupID = Shortid.generate();\n                        allPreviousGroupIDs[oldGroup] = newGroupID;\n                    }\n                    return allPreviousGroupIDs[oldGroup];\n                });\n                newDuplicateElement.groups = newGroups;\n            });\n\n            this.setState(\n                {\n                    elementState : newElementsState,\n                    elements : newElements\n                }\n            );\n        }\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID, elementState) => {\n        const {\n            userID\n        } = this.state;\n\n        if(!elementState) {\n            elementState = this.state.elementState;\n        }\n        \n        let isSelected = false;\n\n        if(elementState[elementID] && elementState[elementID].selected === userID) {\n            isSelected = true;\n        }\n\n        return isSelected;\n    }\n\n    isUniqueSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        const isSelected = elementState[elementID].selected === userID;\n        let selectedCount = 0;\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedCount++;\n            }\n        });\n        const isUniqueSelcted = isSelected && selectedCount === 1;\n        return isUniqueSelcted;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID, elementState)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return {...this.state};\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        const slideKeys = Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        const slides = slideKeys.map(slideKey => {\n            return {\n                id : slideKey,\n                slideName : elements[slideKey].slideName\n            }\n        });\n\n        return slides;\n    }\n\n    changeSlideName = (slideID, newName) => {\n        const {\n            elements\n        } = this.state;\n        const newElements = {...elements};\n        const newSlideElement = {...elements[slideID]};\n        newSlideElement.slideName = newName;\n        newElements[slideID] = newSlideElement;\n        this.setState({elements : newElements});\n    } \n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = this.deselectElements(elementState);\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (element.styles.x - pasteBuffer.boundingBox.rawX);\n            const newY = pointerPosition.y + (element.styles.y - pasteBuffer.boundingBox.rawY);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        const newState = {\n            elements : newElements,\n            elementState : newElementState\n        };\n\n        if(pasteBuffer.type === \"cut\") {\n            newState.pasteBuffer = {\n                type : null,\n                elements : [],\n                elementState : []\n            };\n        }\n\n        this.setState(newState);\n    }\n\n    loadRemoteBoard = (url) => {\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => {\n                const newState = Object.assign({}, this.state, data);\n                this.setState(newState);\n            })\n            .catch(e => console.log(e));\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.loadRemoteBoard(\"https://raw.githubusercontent.com/SimonKenyonShepard/miral_templates/main/whiteboardFile_splashScreen.wswb\");\n    }\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY),\n              gridSizeMin = 24,\n              gridSizeMax = 96,\n              gridRange = gridSizeMax-gridSizeMin,\n              percentageGridSize = (zoomLevel-(Math.floor(zoomLevel/100)*100))/100,\n              backgroundGridSize = gridSizeMax-(gridRange*percentageGridSize),\n              backgroundPositionX = ((offsetX)/zoomLevel*-1)-percentageGridSize,\n              backgroundPositionY = ((offsetY)/zoomLevel*-1)-percentageGridSize;\n\n        const gridPosition = {\n            backgroundPosition : `${backgroundPositionX}px ${backgroundPositionY}px`,\n            backgroundSize : `${backgroundGridSize}px ${backgroundGridSize}px`\n        };\n\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                        handlePanMove={this.handlePanMove}\n                        isSelected={this.isSelected}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <Pattern \n                                zoomLevel={zoomLevel}\n                            />\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                isUniqueSelected={this.isUniqueSelected}\n                                animateToElement={this.animateToElement}\n                                loadRemoteBoard={this.loadRemoteBoard}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <DrawCanvas \n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            removeDragHandler={this.removeDragHandler}\n                        />\n                    </InteractionManager>\n                    \n                    <BoardControls\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        storeUndo={this.state.storeUndo}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        boardName={this.state.boardName}\n                        updateBoardName={this.updateBoardName}\n                        toggleBoardShare={this.toggleBoardShare}\n                    />\n                    <NavBar \n                        getState={this.getState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        loadTemplatesAndTutorials={this.loadTemplatesAndTutorials}\n                    />\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <Tools\n                        handleDeselectAllElements={this.handleDeselectAllElements}\n                        handleSelectElementsWithinArea={this.handleSelectElementsWithinArea} \n                        registerDragHandler={this.registerDragHandler}\n                        removeDragHandler={this.removeDragHandler}\n                        currentSelectedTool={this.state.tool}\n                    />\n                    <div className=\"bottomLeft\">\n                        <SlideNavigator\n                            getSlides={this.getSlides}\n                            changeSlideName={this.changeSlideName}\n                            animateToElement={this.animateToElement}\n                        />\n                        <MultiUserManager\n                            userID={this.state.userID} \n                            shareBoard={this.state.shareBoard}\n                            elements={this.state.elements}\n                            elementState={this.state.elementState}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            multiUserUpdate={this.state.multiUserUpdate}\n                            pointerPosition={this.state.pointerPosition}\n                            offsetX={this.state.offsetX}\n                            offsetY={this.state.offsetY}\n                            zoomLevel={this.state.zoomLevel}\n                        />\n                    </div>\n                    <div className=\"bottomRight\">\n                        <Altimeter zoomLevel={zoomLevel} />\n                    </div>\n                    \n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        const isNotFirstUse = window.localStorage.getItem(\"miral_isFirstUse\");\n        if(!isNotFirstUse) {\n            this.loadTemplatesAndTutorials();\n            window.localStorage.setItem(\"miral_isFirstUse\", true);\n        }\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\nimport { ToolsProvider } from './board/context/tools.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <ToolsProvider>\n          <div className=\"App\">\n              <Board width={width} height={height} />\n          </div>\n        </ToolsProvider>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}