{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/utils.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/slideNavigator.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/index.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","createElementBaseObject","id","initialZoomLevel","styles","width","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","text","link","ShapeCircle","currentState","newState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","postitRect","postitSquare","postitRectV","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","push","shift","getUpdatedPointsBuffer","Line","lineStraight","lineSmooth","lineFreehand","lineStraightArrow","Image","presetWidthAndHeight","imgURL","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Slide","slideName","handleSlideClick","handleSlideDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","More","slide","pdf","iframe","youtube","timer","poll","Toolbar","newStyles","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onMouseUp","PureComponent","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","handleKeyPress","textContainer","scrollHeight","clientHeight","newFontSize","gridSpace","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","nextProps","position","alignItems","justifyContent","visibility","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","onKeyPress","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","themes","light","preDefinedColors","primaryColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","property","value","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","target","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","FONT_FAMILIES","FontStyle","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","handleFontChange","handleSizeChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","font","CenterIcon","iconColor","LeftIcon","RightIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","leftSelected","centerSelected","rightSelected","currentIcon","Link","handleLinkChange","list","getSlides","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","URL","handleURLChange","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","element","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Resizer","keys","forEach","item","newElementsData","newElementStyles","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","metaKey","handleSetCurrentElement","selectedItemKeys","filter","isSelected","rawHeight","rawWidth","rawX","rawY","elementKeys","currentElements","prevElements","removedElements","addedElements","updateElementDragPosition","handleElementDragEnd","handleSelect","FileOption","loadFile","fileName","Navbar","handleOpenMenu","menuVisible","subMenu","saveToBrowser","applicationState","getState","stateToSave","boardName","localStorage","getItem","Date","getHours","getMinutes","setItem","JSON","stringify","saveToFile","a","createElement","file","Blob","href","createObjectURL","download","click","loadFileFromBrowser","parse","handleUpdateElementsAndState","fileInput","accept","onchange","files","reader","FileReader","onload","result","readAsText","getSavedFromBrowser","saveToMonday","monday","mondaySdk","storage","instance","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","mondaySaveAvailable","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","iconAnimation","iconFillColor","placeholder","defaultValue","organisation","match","companyName","objectClone","obj","clone","subPropertyKey","createNewObjectsForChangedElements","newData","patch","change","changePath","path","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","ctrlKey","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","slidesNavStyles","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleZoom","dir","sign","deltaY","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","updatePointerPosition","dragHandlers","wasAccidentalMovement","handleMouseUp","interactionTime","wasProbablyClick","interactionMovement","onMouseDown","onMouseMove","onWheel","children","KeyboardManager","isTextBox","textEditor","tagName","getAttribute","handleDuplicateElements","shuntSelectedElements","copy","cut","paste","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","colors","HOST","MultiUserManager","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","joinBoard","initializeBoard","shareEnded","owner","boardContents","emit","setInterval","purgeEmitQueue","checkBoardForUpdates","error","console","log","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","handleTextEdit","shapeProps","overlay","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","onDoubleClick","setTimeout","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","background","slideNumber","Elements","elementNodes","fontStyles","Board","elementData","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","dontDeselect","handleDeselectAllElements","newElements","prevElementData","unScaledFontSize","newElementStateData","newSelectedElement","newDragHandlers","newHandlers","bind","Number","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","getSelectedElements","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","coOrds","direction","pasteBuffer","calculateSelectedElementsBoundingBox","newX","newY","toLocaleDateString","multiUserUpdate","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","stepCount","valueIncrementX","valueIncrementY","sinValueIncrement","PI","currentValueX","currentValueY","currentSinValue","counter","sin","time","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","gridPosition","in","stdDeviation","ddx","dy","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanStart","handlePanMove","handlePanEnd","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0ce3f256.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\"\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"postitSquare\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            postitRect : false,\n            postitSquare : false,\n            postitRectV : false,\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitSquare}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRect}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRectV}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"postit\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"postit\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"lineStraight\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            lineStraight : false,\n            lineSmooth : false,\n            lineFreehand : false,\n            lineStraightArrow : false,\n            lineSmoothArrow : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraight}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmooth}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraightArrow}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmoothArrow}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineFreehand}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"slide\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            slide : false,\n            pdf : false,\n            iframe : false,\n            youtube : false,\n            timer : false,\n            poll : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.slide}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.pdf}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.youtube}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.timer}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.poll}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = () => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        const dontDeselectBoardElements = true;\n        this.props.handleToolSelect(\"pan\", dontDeselectBoardElements);\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onMouseUp={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : true\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24*props.gridSpace.zoomLevel\n      };\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize\n        });\n        // this.setState({\n        //     fontSize : 24*this.props.gridSpace.zoomLevel\n        // });\n    }\n\n    handleKeyPress = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            let newFontSize = 0;\n            if(this.state.fontSize > 8*this.props.gridSpace.zoomLevel) {\n                newFontSize = this.state.fontSize - 8*this.props.gridSpace.zoomLevel;\n                \n            } else {\n                newFontSize = this.state.fontSize/2;\n            }\n            this.setState({fontSize : newFontSize});\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const {\n            data\n        } = nextProps;\n\n        const needsUpdate = (data !== this.props.data);\n        if(needsUpdate) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = componentStyles.height/gridSpace.zoomLevel;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                onKeyPress={this.handleKeyPress}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={{\n                        fontSize : this.state.fontSize/this.props.gridSpace.zoomLevel\n                    }}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data) {\n            this.textInput.focus();\n            const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n            if(moveCaretToEnd && document.createRange) {\n                let range = document.createRange();\n                range.selectNodeContents(this.textInput);\n                range.collapse(false);\n                let selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            \n       }\n        \n        // if(this.props.data && this.props.data.unScaledFontSize && this.props.data.unScaledFontSize !== this.state.fontSize) {\n        //     this.setState({fontSize : this.props.data.unScaledFontSize});\n        // }\n        //Can't remember why this was needed.\n   }\n\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      property : \"predefinedColor\",\n      value : this.props.colorID\n    })\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"fill\" : color, fillOpacity : newFillOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, fillOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles.fill \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"stroke\" : color, strokeOpacity : newStrokeOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeWidth : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontWeight\" : newFontWeight}\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontStyle\" : newFontStyle}\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          property : \"fontStyle\",\n          value : {...this.props.fontStyle, fontFamily : e.target.value}\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, fontSize : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        onChange={this.handleSizeChange}\n                        value={(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"left\"}\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"right\"}\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"center\"}\n      });\n    }\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n    \n    this.props.handleUpdateElementProperty({\n      property : \"link\",\n      value : e.target.value\n    });\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slideName) =>  <option value={slideName} />)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring forward\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send backwards\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      \n      this.props.handleUpdateElementProperty({\n        property : \"imgURL\",\n        value : e.target.value\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.imgURL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"fontStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textAlignment\", \"link\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"fontStyle\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements[0].id;\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = multiElementEditableFeatures;\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    imgURL={selectedElements[0].imgURL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    newElement.styles.width += e.movementX*currentState.zoomLevel;\n                    newElement.styles.height += e.movementX*currentState.zoomLevel;\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width+ (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n           \n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component, PureComponent} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(this.props.fileName);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = window.localStorage.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    saveToFile = (e) => {\n        const applicationState = this.props.getState();\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(`miralFile_${fileName}`);\n        const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.props.handleUpdateElementsAndState(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const { applicationState } = this.props;\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr.com</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToBrowser}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                    </svg>\n                                    <span>Save to Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.getSavedFromBrowser}\n                                >\n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                        <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                    </svg>\n                                    <span>Load from Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : -1\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n    } \n  \n    render() {\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n\n        return (\n            <div className={\"undoControls\"} style={slidesNavStyles}>\n                <span \n                    className={\"iconButton backward\"}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span>Slide {(this.state.currentSlide+1)} of {slides.length}</span>\n                <span \n                    className={\"iconButton forward\"}\n                    onClick={this.handleSlideForward}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\nimport SlideNavigator from './slideNavigator';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n\n                <SlideNavigator \n                    getSlides={this.props.getSlides}\n                    animateToElement={this.props.animateToElement}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + dir : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            elementID : e.target.id\n        });\n        //console.log(e.target);\n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            const dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            if(drag === \"mouseDown\" && !wasAccidentalMovement) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else \n            if(dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement) {\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -5 && interactionMovement < 5)\n    }\n\n    render() {\n\n        const styles={\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\"\n        }\n        \n        return (\n            <div\n                style={styles}\n\n                onMouseDown={this.handleMouseDown}\n                onMouseMove={this.handleMouseMove}\n                onMouseUp={this.handleMouseUp}\n                onWheel={this.handleZoom}\n                id=\"interActionManager\"\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\") {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\") {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\") {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\") {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Return to Miral</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.imgURL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{data.slideName} {this.props.slideNumber}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            zoomLevel\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone} from './utils';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        userID : Shortid.generate(),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        },\n      };\n    }\n\n    handlePanStart(e, dragStartX, dragStartY) {\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove(e) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        console.log(\"animate to\", elementID, duration);\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        //get element position\n\n        const elementData = elements[elementID];\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*zoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*zoomLevel)\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentSinValue = 0,\n            counter = 0;\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, incrementDelay) {\n                setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                    });\n                }, incrementDelay);\n            }.bind(this)(currentValueX, currentValueY, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n  \n    handleToolSelect = (type, dontDeselect) => {\n        if(!dontDeselect) {\n            this.handleDeselectAllElements();\n        }\n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID)) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = {...this.state.elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newElementsData = {...this.state.elements};\n        newElementsData[elementID].styles.height = Number(height)*this.state.zoomLevel;\n        this.setState(newElementsData); //HOW DOES THIS WORK?\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement[data.property] = data.value;\n        newElementsData[data.id] = newElement;\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(arrayPosition+1, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(arrayPosition-1, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n        });\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        const newElements = {...elements};\n        const newElementsState = {...elementState};\n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const duplicatesOffsetMargin = 8;\n\n        const duplicatesOffsetPosition = {\n            x : selectedElements[0].styles.x,\n            x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n        };\n\n        //get position for new duplicate elements\n        selectedElements.forEach(element => {\n            if(element.styles.x < duplicatesOffsetPosition.x) {\n                duplicatesOffsetPosition.x = element.styles.x;\n            }\n            const elementX1 = element.styles.x + element.styles.width;\n            if(elementX1 > duplicatesOffsetPosition.x1) {\n                duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n            }\n        });\n\n        //duplicate elements & state\n        selectedElements.forEach(element => {\n            const newID = Shortid.generate();\n            const duplicateElement = objectClone(element);\n            const duplicateElementState = objectClone(elementState[element.id]);\n            duplicateElement.id = newID;\n            duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n            newElements[newID] = duplicateElement;\n            newElementsState[newID] = duplicateElementState;\n            //remove selected status for old items\n            newElementsState[element.id] = {...newElementsState[element.id]};\n            newElementsState[element.id].selected = false;\n        });\n\n        this.setState(\n            {\n                elementState : newElementsState,\n                elements : newElements\n            }\n        );\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        return elementState[elementID].selected === userID;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return this.state;\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        return Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (pasteBuffer.boundingBox.rawX - element.styles.x);\n            const newY = pointerPosition.y + (pasteBuffer.boundingBox.rawY - element.styles.y);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n        })\n    }\n\n\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY);\n        const gridPosition = {\n            backgroundPosition : `${(offsetX*-1)/zoomLevel}px ${(offsetY*-1)/zoomLevel}px`\n        };\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <NavBar \n                            getState={this.getState}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        />\n                        <Altimeter zoomLevel={zoomLevel} />\n                        <BoardControls\n                            elements={this.state.elements}\n                            elementState={this.state.elementState}\n                            storeUndo={this.state.storeUndo}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            boardName={this.state.boardName}\n                            updateBoardName={this.updateBoardName}\n                            toggleBoardShare={this.toggleBoardShare}\n                            getSlides={this.getSlides}\n                            animateToElement={this.animateToElement}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <Tools\n                            handleToolSelect={this.handleToolSelect} \n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            currentSelectedTool={this.state.tool}\n                        />\n                    </InteractionManager>\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <MultiUserManager\n                        userID={this.state.userID} \n                        shareBoard={this.state.shareBoard}\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        multiUserUpdate={this.state.multiUserUpdate}\n                        pointerPosition={this.state.pointerPosition}\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                    />\n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}