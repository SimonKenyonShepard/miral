{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/textFormat/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/utils.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/slideNavigator.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/index.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","createElementBaseObject","id","initialZoomLevel","styles","width","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","text","link","ShapeCircle","currentState","newState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","postitRect","postitSquare","postitRectV","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","push","shift","getUpdatedPointsBuffer","Line","lineStraight","lineSmooth","lineFreehand","lineStraightArrow","Image","presetWidthAndHeight","imgURL","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Slide","slideName","handleSlideClick","handleSlideDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","More","slide","pdf","iframe","youtube","timer","poll","Toolbar","newStyles","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onMouseUp","PureComponent","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","gridSpace","sizeChecker","textContainer","scrollHeight","clientHeight","newFontSize","elementHeight","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","sizeCheckerInterval","nextProps","nextState","needsUpdateData","needsUpdateFont","needsUpdateLayout","position","alignItems","justifyContent","visibility","textStyles","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","setInterval","clearInterval","themes","light","preDefinedColors","primaryColors","fontColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","property","value","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","target","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","TextFormat","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","FONT_FAMILIES","FontStyle","handleFontChange","handleSizeChange","font","round","CenterIcon","iconColor","LeftIcon","RightIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","leftSelected","centerSelected","rightSelected","currentIcon","Link","handleLinkChange","list","getSlides","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","URL","handleURLChange","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","handleKeyPress","isTextBox","textEditor","tagName","getAttribute","ctrlKey","metaKey","handleDuplicateElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","element","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Resizer","keys","forEach","item","newElementsData","newElementStyles","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","handleSetCurrentElement","selectedItemKeys","filter","isSelected","rawHeight","rawWidth","rawX","rawY","elementKeys","currentElements","prevElements","removedElements","addedElements","updateElementDragPosition","handleElementDragEnd","handleSelect","FileOption","loadFile","fileName","Navbar","handleOpenMenu","menuVisible","subMenu","saveToBrowser","applicationState","getState","stateToSave","boardName","localStorage","getItem","Date","getHours","getMinutes","setItem","JSON","stringify","saveToFile","a","createElement","file","Blob","href","createObjectURL","download","click","loadFileFromBrowser","parse","handleUpdateElementsAndState","fileInput","accept","onchange","files","reader","FileReader","onload","result","readAsText","getSavedFromBrowser","saveToMonday","monday","mondaySdk","storage","instance","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","mondaySaveAvailable","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","iconAnimation","iconFillColor","placeholder","defaultValue","organisation","match","companyName","objectClone","obj","clone","subPropertyKey","createNewObjectsForChangedElements","newData","patch","change","changePath","path","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","slidesNavStyles","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleZoom","dir","sign","deltaY","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","updatePointerPosition","dragHandlers","wasAccidentalMovement","handleMouseUp","interactionTime","wasProbablyClick","interactionMovement","onMouseDown","onMouseMove","onWheel","children","KeyboardManager","copy","cut","paste","shuntSelectedElements","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","colors","HOST","MultiUserManager","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","joinBoard","initializeBoard","shareEnded","owner","boardContents","emit","purgeEmitQueue","checkBoardForUpdates","error","console","log","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","handleTextEdit","shapeProps","overlay","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","onDoubleClick","isUniqueSelected","setTimeout","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","background","slideNumber","Elements","elementNodes","fontStyles","Board","elementData","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","clearCanvasAnimations","canvasAnimations","animation","clearTimeout","dontDeselect","handleDeselectAllElements","newElements","prevElementData","unScaledFontSize","newElementStateData","newSelectedElement","newDragHandlers","newHandlers","bind","newHeight","Number","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","getSelectedElements","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","coOrds","selectedCount","direction","pasteBuffer","calculateSelectedElementsBoundingBox","newX","newY","toLocaleDateString","multiUserUpdate","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","stepCount","valueIncrementX","valueIncrementY","sinValueIncrement","PI","currentValueX","currentValueY","currentSinValue","counter","sin","time","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","gridPosition","in","stdDeviation","ddx","dy","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanStart","handlePanMove","handlePanEnd","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.60f8c8e5.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\"\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"postitSquare\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            postitRect : false,\n            postitSquare : false,\n            postitRectV : false,\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitSquare}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRect}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRectV}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"postit\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"postit\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"lineStraight\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            lineStraight : false,\n            lineSmooth : false,\n            lineFreehand : false,\n            lineStraightArrow : false,\n            lineSmoothArrow : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraight}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmooth}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraightArrow}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmoothArrow}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineFreehand}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.slideName = \"Slide\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"slide\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            slide : false,\n            pdf : false,\n            iframe : false,\n            youtube : false,\n            timer : false,\n            poll : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.slide}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.pdf}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.youtube}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.timer}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.poll}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = () => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        const dontDeselectBoardElements = true;\n        this.props.handleToolSelect(\"pan\", dontDeselectBoardElements);\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onMouseUp={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : true\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24,\n        elementHeight : 0\n      };\n      this.sizeCheckerInterval = null;\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize*this.props.gridSpace.zoomLevel\n        });\n    }\n\n    sizeChecker = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            let newFontSize = 0;\n            newFontSize = (this.state.fontSize/3)*2;\n            this.setState({fontSize : newFontSize});\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            if(this.state.elementHeight !== this.textContainer.scrollHeight) {\n                this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n                this.setState({elementHeight : this.textContainer.scrollHeight});\n            }\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            data\n        } = nextProps;\n\n        const {\n            fontSize,\n            elementHeight\n        } = nextState;\n\n        const needsUpdateData = (data !== this.props.data);\n        const needsUpdateFont = (fontSize !== this.state.fontSize);\n        const needsUpdateLayout = (elementHeight !== this.state.elementHeight);\n\n        if(needsUpdateData || needsUpdateFont || needsUpdateLayout) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       const textStyles = {\n            fontSize : this.state.fontSize\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = this.state.elementHeight;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        if(data.fontStyle.textAlign) {\n            textStyles.textAlign = data.fontStyle.textAlign;\n            if(data.fontStyle.textAlign === \"left\") {\n                styles.justifyContent = \"flex-start\";\n            } else if (data.fontStyle.textAlign === \"right\") {\n                styles.justifyContent = \"flex-end\";\n            }\n        }\n        if(data.fontStyle.color) {\n            textStyles.color = data.fontStyle.color;\n        }\n\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={textStyles}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data && this.props.data.id) {\n            this.textInput.focus();\n            const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n            if(moveCaretToEnd && document.createRange) {\n                let range = document.createRange();\n                range.selectNodeContents(this.textInput);\n                range.collapse(false);\n                let selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            if(!prevProps.data || (this.props.data.id !== prevProps.data.id)) {\n                this.setState({\n                    fontSize :  this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel,\n                    elementHeight : this.props.data.styles.height/this.props.gridSpace.zoomLevel\n                });\n                this.sizeCheckerInterval = setInterval(this.sizeChecker, 100);\n            }\n            \n       } else {\n           clearInterval(this.sizeCheckerInterval);\n       }\n   }\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n    fontColors : [\n      \"#ffffff\", //white\n      \"#999\", //grey\n      \"#080808\" //text grey/black\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      property : \"predefinedColor\",\n      value : this.props.colorID\n    })\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"fill\" : color, fillOpacity : newFillOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, fillOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles.fill \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"stroke\" : color, strokeOpacity : newStrokeOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeWidth : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextFormat\";\n\nclass TextFormat extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontWeight\" : newFontWeight}\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontStyle\" : newFontStyle}\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text format\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextFormat;","import React, {Component} from 'react';\n\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleUpdateColor = (color) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"color\" : color} \n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          property : \"fontStyle\",\n          value : {...this.props.fontStyle, fontFamily : e.target.value}\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, fontSize : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        const theme = this.context;\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.fontColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('fontColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        min=\"0\"\n                        onChange={this.handleSizeChange}\n                        value={Math.round(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  FontStyle.contextType = ThemeContext;\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"left\"}\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"right\"}\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"center\"}\n      });\n    }\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n    \n    this.props.handleUpdateElementProperty({\n      property : \"link\",\n      value : e.target.value\n    });\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slideName) =>  <option value={slideName} />)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring to front\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send to back\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      \n      this.props.handleUpdateElementProperty({\n        property : \"imgURL\",\n        value : e.target.value\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.imgURL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport TextFormat from './editors/textFormat';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"textFormat\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textFormat\",  \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textFormat\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements[0].id;\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    \n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = multiElementEditableFeatures;\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textFormat':\n                    return <TextFormat \n                                key={`${selectedElements[0].id}_${button}`}\n                                fontStyle={selectedElements[0].fontStyle}\n                                initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                currentOpenSubMenu={this.state.currentOpenSubMenu}\n                            />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    imgURL={selectedElements[0].imgURL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    newElement.styles.width += e.movementX*currentState.zoomLevel;\n                    newElement.styles.height += e.movementX*currentState.zoomLevel;\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width + (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width + (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n           \n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component, PureComponent} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(this.props.fileName);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = window.localStorage.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    saveToFile = (e) => {\n        const applicationState = this.props.getState();\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(`miralFile_${fileName}`);\n        const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.props.handleUpdateElementsAndState(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const { applicationState } = this.props;\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr.com</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToBrowser}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                    </svg>\n                                    <span>Save to Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.getSavedFromBrowser}\n                                >\n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                        <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                    </svg>\n                                    <span>Load from Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : -1\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide];\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide], 1);\n        }\n    } \n  \n    render() {\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n\n        return (\n            <div className={\"undoControls\"} style={slidesNavStyles}>\n                <span \n                    className={\"iconButton backward\"}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span>Slide {(this.state.currentSlide+1)} of {slides.length}</span>\n                <span \n                    className={\"iconButton forward\"}\n                    onClick={this.handleSlideForward}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\nimport SlideNavigator from './slideNavigator';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n\n                <SlideNavigator \n                    getSlides={this.props.getSlides}\n                    animateToElement={this.props.animateToElement}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + dir : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            elementID : e.target.id\n        });\n        //console.log(e.target);\n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            const dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            if(drag === \"mouseDown\" && !wasAccidentalMovement) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else \n            if(dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement) {\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -5 && interactionMovement < 5)\n    }\n\n    render() {\n\n        const styles={\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\"\n        }\n        \n        return (\n            <div\n                style={styles}\n\n                onMouseDown={this.handleMouseDown}\n                onMouseMove={this.handleMouseMove}\n                onMouseUp={this.handleMouseUp}\n                onWheel={this.handleZoom}\n                id=\"interActionManager\"\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Return to Miral</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isUniqueSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.imgURL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{data.slideName} {this.props.slideNumber}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            isUniqueSelected,\n            zoomLevel\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    isUniqueSelected={isUniqueSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone} from './utils';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        userID : Shortid.generate(),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        },\n      };\n      this.canvasAnimations = [];\n    }\n\n    handlePanStart(e, dragStartX, dragStartY) {\n        this.clearCanvasAnimations();\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove(e) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        console.log(\"animate to\", elementID, duration);\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        //get element position\n\n        const elementData = elements[elementID];\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*zoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*zoomLevel)\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentSinValue = 0,\n            counter = 0;\n        \n        this.clearCanvasAnimations();\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, incrementDelay) {\n                this.canvasAnimations.push(setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                    });\n                }, incrementDelay));\n            }.bind(this)(currentValueX, currentValueY, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n    clearCanvasAnimations = () => {\n        this.canvasAnimations.forEach(animation => {\n            clearTimeout(animation);\n        });\n        this.canvasAnimations = [];\n    }\n\n  \n    handleToolSelect = (type, dontDeselect) => {\n        if(!dontDeselect) {\n            this.handleDeselectAllElements();\n        }\n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID)) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = {...this.state.elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newHeight  = Number(height)*this.state.zoomLevel;\n        if(this.state.elements[elementID].styles.height !== newHeight) {\n            const newElementsData = {...this.state.elements};\n            newElementsData[elementID] = {...newElementsData[elementID]};\n            newElementsData[elementID].styles = {...newElementsData[elementID].styles};\n            newElementsData[elementID].styles.height = newHeight;\n            this.setState({elements : newElementsData});\n        }\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement[data.property] = data.value;\n        newElementsData[data.id] = newElement;\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {},\n              newElementState = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(newIdsOrder.length, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(0, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n            newElementState[id] = this.state.elementState[id];\n        });\n        this.setState({\n            elementState : newElementState,\n            elements : newElementsData,\n            storeUndo : true\n        });\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID] = {...newElementsState[elementID]};\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        const newElements = {...elements};\n        const newElementsState = {...elementState};\n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const duplicatesOffsetMargin = 8;\n\n        const duplicatesOffsetPosition = {\n            x : selectedElements[0].styles.x,\n            x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n        };\n\n        //get position for new duplicate elements\n        selectedElements.forEach(element => {\n            if(element.styles.x < duplicatesOffsetPosition.x) {\n                duplicatesOffsetPosition.x = element.styles.x;\n            }\n            const elementX1 = element.styles.x + element.styles.width;\n            if(elementX1 > duplicatesOffsetPosition.x1) {\n                duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n            }\n        });\n\n        //duplicate elements & state\n        selectedElements.forEach(element => {\n            const newID = Shortid.generate();\n            const duplicateElement = objectClone(element);\n            const duplicateElementState = objectClone(elementState[element.id]);\n            duplicateElement.id = newID;\n            duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n            newElements[newID] = duplicateElement;\n            newElementsState[newID] = duplicateElementState;\n            //remove selected status for old items\n            newElementsState[element.id] = {...newElementsState[element.id]};\n            newElementsState[element.id].selected = false;\n        });\n\n        this.setState(\n            {\n                elementState : newElementsState,\n                elements : newElements\n            }\n        );\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        return elementState[elementID].selected === userID;\n    }\n\n    isUniqueSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        const isSelected = elementState[elementID].selected === userID;\n        let selectedCount = 0;\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedCount++;\n            }\n        });\n        const isUniqueSelcted = isSelected && selectedCount === 1;\n        return isUniqueSelcted;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return this.state;\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        return Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (pasteBuffer.boundingBox.rawX - element.styles.x);\n            const newY = pointerPosition.y + (pasteBuffer.boundingBox.rawY - element.styles.y);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n        })\n    }\n\n\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY);\n        const gridPosition = {\n            backgroundPosition : `${(offsetX*-1)/zoomLevel}px ${(offsetY*-1)/zoomLevel}px`\n        };\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                isUniqueSelected={this.isUniqueSelected}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <NavBar \n                            getState={this.getState}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        />\n                        <Altimeter zoomLevel={zoomLevel} />\n                        <BoardControls\n                            elements={this.state.elements}\n                            elementState={this.state.elementState}\n                            storeUndo={this.state.storeUndo}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            boardName={this.state.boardName}\n                            updateBoardName={this.updateBoardName}\n                            toggleBoardShare={this.toggleBoardShare}\n                            getSlides={this.getSlides}\n                            animateToElement={this.animateToElement}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <Tools\n                            handleToolSelect={this.handleToolSelect} \n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            currentSelectedTool={this.state.tool}\n                        />\n                    </InteractionManager>\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <MultiUserManager\n                        userID={this.state.userID} \n                        shareBoard={this.state.shareBoard}\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        multiUserUpdate={this.state.multiUserUpdate}\n                        pointerPosition={this.state.pointerPosition}\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                    />\n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}