{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/utils.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","createElementBaseObject","id","initialZoomLevel","styles","width","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","text","ShapeCircle","currentState","newState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","Postit","postitRect","postitSquare","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","push","shift","getUpdatedPointsBuffer","Line","lineStraight","lineSmooth","lineFreehand","lineStraightArrow","Image","presetWidthAndHeight","imgURL","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Slide","alert","PDF","Iframe","Youtube","Timer","Poll","More","Toolbar","newStyles","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onMouseUp","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","handleKeyPress","textContainer","scrollHeight","clientHeight","newFontSize","gridSpace","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","position","alignItems","justifyContent","visibility","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","onKeyPress","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","themes","light","preDefinedColors","primaryColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","property","value","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","target","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","FONT_FAMILIES","FontStyle","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","handleFontChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","font","CenterIcon","iconColor","LeftIcon","RightIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","leftSelected","centerSelected","rightSelected","currentIcon","Link","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","URL","handleURLChange","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","element","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Resizer","keys","forEach","item","newElementsData","newElementStyles","fontStyleIncreaseMultiplier","wrapperStyles","isVisible","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","ElementDrag","elementID","isMultiSelect","metaKey","handleSetCurrentElement","selectedItemKeys","filter","isSelected","rawHeight","rawWidth","rawX","rawY","currentElements","elementKeys","prevElements","removedElements","addedElements","updateElementDragPosition","handleSelect","FileOption","loadFile","fileName","Navbar","handleOpenMenu","menuVisible","subMenu","saveToBrowser","applicationState","stateToSave","boardName","localStorage","getItem","Date","getHours","getMinutes","setItem","JSON","stringify","loadFileFromBrowser","file","parse","handleUpdateElementsAndState","getSavedFromBrowser","files","saveToMonday","monday","mondaySdk","applicationCache","storage","instance","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","mondaySaveAvailable","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","iconAnimation","iconFillColor","link","placeholder","defaultValue","href","organisation","match","companyName","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","prevCombinedData","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleZoom","dir","sign","deltaY","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","updatePointerPosition","dragHandlers","wasAccidentalMovement","handleMouseUp","interactionTime","wasProbablyClick","interactionMovement","onMouseDown","onMouseMove","onWheel","children","PureComponent","KeyboardManager","isTextBox","textEditor","tagName","getAttribute","ctrlKey","handleDuplicateElements","console","log","addEventListener","removeEventListener","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","colors","HOST","MultiUserManager","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","joinBoard","initializeBoard","shareEnded","owner","boardContents","emit","setInterval","purgeEmitQueue","checkBoardForUpdates","error","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","createNewObjectsForChangedElements","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","newData","patch","change","changePath","path","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","handleTextEdit","shapeProps","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","onDoubleClick","setTimeout","postItShapeTypes","dropShadow","postItRectShapeTypes","postItBaseWidth","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","objectClone","obj","clone","subPropertyKey","Board","dontDeselect","handleDeselectAllElements","newElements","prevElementData","elementData","unScaledFontSize","newElementStateData","newSelectedElement","newDragHandlers","newHandlers","bind","Number","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","getSelectedElements","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","coOrds","toLocaleDateString","multiUserUpdate","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","elementNodes","fontStyles","calculateSelectedElementsBoundingBox","gridPosition","in","stdDeviation","markerWidth","markerHeight","refX","refY","orient","markerUnits","handlePanMove","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.33070bce.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\" \n        },\n        text : \"\",\n        initialZoomLevel\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"postitSquare\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            postitRect : false,\n            postitSquare : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitSquare}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRect}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"postit\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"postit\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"lineStraight\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            lineStraight : false,\n            lineSmooth : false,\n            lineFreehand : false,\n            lineStraightArrow : false,\n            lineSmoothArrow : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraight}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmooth}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraightArrow}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmoothArrow}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineFreehand}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/miral/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.imgURL = \"/miral/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {Component} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = () => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        const dontDeselectBoardElements = true;\n        this.props.handleToolSelect(\"pan\", dontDeselectBoardElements);\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onMouseUp={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : true\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24*props.gridSpace.zoomLevel\n      };\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize\n        });\n        // this.setState({\n        //     fontSize : 24*this.props.gridSpace.zoomLevel\n        // });\n    }\n\n    handleKeyPress = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            let newFontSize = 0;\n            if(this.state.fontSize > 8*this.props.gridSpace.zoomLevel) {\n                newFontSize = this.state.fontSize - 8*this.props.gridSpace.zoomLevel;\n                \n            } else {\n                newFontSize = this.state.fontSize/2;\n            }\n            this.setState({fontSize : newFontSize});\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = componentStyles.height/gridSpace.zoomLevel;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                onKeyPress={this.handleKeyPress}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={{\n                        fontSize : this.state.fontSize/this.props.gridSpace.zoomLevel\n                    }}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n        this.textInput.focus();\n        const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n\n        if(moveCaretToEnd && document.createRange) {\n            let range = document.createRange();\n            range.selectNodeContents(this.textInput);\n            range.collapse(false);\n            let selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n\n        // if(this.props.data && this.props.data.unScaledFontSize && this.props.data.unScaledFontSize !== this.state.fontSize) {\n        //     this.setState({fontSize : this.props.data.unScaledFontSize});\n        // }\n        //Can't remember why this was needed.\n   }\n\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      property : \"predefinedColor\",\n      value : this.props.colorID\n    })\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"fill\" : color, fillOpacity : newFillOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, fillOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles.fill \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"stroke\" : color, strokeOpacity : newStrokeOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeWidth : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontWeight\" : newFontWeight}\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontStyle\" : newFontStyle}\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          property : \"fontStyle\",\n          value : {...this.props.fontStyle, fontFamily : e.target.value}\n        });\n      }\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"left\"}\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"right\"}\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"center\"}\n      });\n    }\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n  }\n\n  render() {\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring forward\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send backwards\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      \n      this.props.handleUpdateElementProperty({\n        property : \"imgURL\",\n        value : e.target.value\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.imgURL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"fontStyle\", /* \"link\", */ \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textAlignment\", /* \"link\", */ \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textAlignment\", /* \"link\", */ \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements[0].id;\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    render() {\n\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = multiElementEditableFeatures;\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link key={`${selectedElements[0].id}_${button}`}/>;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    imgURL={selectedElements[0].imgURL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    newElement.styles.width += e.movementX*currentState.zoomLevel;\n                    newElement.styles.height += e.movementX*currentState.zoomLevel;\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width+ (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n           \n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n\n\n    render() {\n        const { boundingBox } = this.props;\n\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(this.props.fileName);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\n\nclass Navbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    saveToBrowser = (e) => {\n        const { applicationState } = this.props;\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = window.localStorage.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(`miralFile_${fileName}`);\n        const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const { applicationState } = this.props;\n        const stateToSave = {\n            userID : applicationState.userID,\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationCache.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Your company name</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToBrowser}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                    </svg>\n                                    <span>Save to Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.getSavedFromBrowser}\n                                >\n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                        <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                    </svg>\n                                    <span>Load from Browser</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://simonkenyonshepard.github.io/miral\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : []\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState} \n        };\n  \n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n        \n        const newCombinedData = {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState} \n        };\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevCombinedData = {\n            elements : prevProps.elements,\n            elementState : prevProps.elementState \n        };\n        const currentCombinedData = {\n            elements : this.props.elements,\n            elementState : this.props.elementState \n        };\n        const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n        const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n        \n        if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0 && this.props.storeUndo) {\n            this.setState({\n                undo : [...this.state.undo, elementsDiffUndo],\n                updates : [...this.state.updates, elementsDiffUpdates]\n            });\n            this.props.handleUpdateElementsAndState({storeUndo : false})\n        }\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\n\nimport './styles.css';\n\n\nclass BoardControls extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + dir : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            elementID : e.target.id\n        });\n        //console.log(e.target);\n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n\n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            const dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            if(drag === \"mouseDown\" && !wasAccidentalMovement) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else if(dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement) {\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -5 && interactionMovement < 5)\n    }\n\n    render() {\n\n        const styles={\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\"\n        }\n        \n        return (\n            <div\n                style={styles}\n\n                onMouseDown={this.handleMouseDown}\n                onMouseMove={this.handleMouseMove}\n                onMouseUp={this.handleMouseUp}\n                onWheel={this.handleZoom}\n                id=\"interActionManager\"\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {Component} from 'react';\n\n\nclass KeyboardManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            console.log(\"backspace\");\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        \n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = this.createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    createNewObjectsForChangedElements(newData, patch) {\n        if(patch.length > 0) {\n            patch.forEach(change => {\n                const changePath = change.path.split(\"/\");\n                newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n            })\n        }\n        return newData;\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Return to Miral</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(shapeProps.strokeWidth/2)}px dashed #5086F2`};\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.handleTextEdit();\n        }, 300);\n        \n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(shapeProps.strokeWidth/2)}px dashed #5086F2`};\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        }\n        const postItColor = data.predefinedColor;\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    <path \n                        d={postItShapeData.dropShadow} \n                        fill=\"rgba(0,0,0, 0.4)\" \n                        filter={`url(#${postItShapeData.filter})`}\n                    />\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.imgURL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\n\n//ELEMENTS\nimport Shape from './elements/shape';\nimport Text from './elements/text';\nimport Postit from './elements/postit';\nimport Line from './elements/line';\nimport Image from './elements/image';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone} from './utils';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        userID : Shortid.generate(),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0}\n      };\n    }\n\n    handlePanStart(e, dragStartX, dragStartY) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((dragStartX+e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((dragStartY+e.movementY)*-zoomLevel)\n        });\n    }\n\n    handlePanMove(e) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel)\n        });\n    }\n  \n    handleToolSelect = (type, dontDeselect) => {\n        if(!dontDeselect) {\n            this.handleDeselectAllElements();\n        }\n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID)) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = {...this.state.elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newElementsData = {...this.state.elements};\n        newElementsData[elementID].styles.height = Number(height)*this.state.zoomLevel;\n        this.setState(newElementsData); //HOW DOES THIS WORK?\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement[data.property] = data.value;\n        newElementsData[data.id] = newElement;\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(arrayPosition+1, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(arrayPosition-1, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n        });\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        const newElements = {...elements};\n        const newElementsState = {...elementState};\n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const duplicatesOffsetMargin = 8;\n\n        const duplicatesOffsetPosition = {\n            x : selectedElements[0].styles.x,\n            x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n        };\n\n        //get position for new duplicate elements\n        selectedElements.forEach(element => {\n            if(element.styles.x < duplicatesOffsetPosition.x) {\n                duplicatesOffsetPosition.x = element.styles.x;\n            }\n            const elementX1 = element.styles.x + element.styles.width;\n            if(elementX1 > duplicatesOffsetPosition.x1) {\n                duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n            }\n        });\n\n        //duplicate elements & state\n        selectedElements.forEach(element => {\n            const newID = Shortid.generate();\n            const duplicateElement = objectClone(element);\n            const duplicateElementState = objectClone(elementState[element.id]);\n            duplicateElement.id = newID;\n            duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n            newElements[newID] = duplicateElement;\n            newElementsState[newID] = duplicateElementState;\n            //remove selected status for old items\n            newElementsState[element.id] = {...newElementsState[element.id]};\n            newElementsState[element.id].selected = false;\n        });\n\n        this.setState(\n            {\n                elementState : newElementsState,\n                elements : newElements\n            }\n        );\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0\n        };\n    }\n\n    isSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        return elementState[elementID].selected === userID;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            }\n            return null;\n        });\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY);\n        const gridPosition = {\n            backgroundPosition : `${(offsetX*-1)/zoomLevel}px ${(offsetY*-1)/zoomLevel}px`\n        };\n        return (\n            <div \n                className={`boardWrapper ${tool}`} \n                style={gridPosition}\n            >\n                <InteractionManager\n                    offsetX={this.state.offsetX}\n                    offsetY={this.state.offsetY}\n                    zoomLevel={this.state.zoomLevel}\n                    updateBoardPosition={this.updateBoardPosition}\n                    dragHandlers={this.state.dragHandlers}\n                    updatePointerPosition={this.updatePointerPosition}\n                >\n                    <svg id=\"board\" \n                        width={`${width}px`}\n                        height={`${height}px`}\n                        viewBox={viewBox}\n                        >\n                        <defs>\n                            <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                            </filter>\n                            <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                            </filter>\n                            <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                            </marker>\n                        </defs>\n                        <ElementDrag \n                            boundingBox={boundingBox}\n                            elementKeys={elementKeys}\n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                        />\n                        {elementNodes}\n                    </svg>\n                    <Resizer \n                        isVisible={(selectedElements.length > 0)}\n                        registerDragHandler={this.registerDragHandler}\n                        boundingBox={boundingBox}\n                    />\n                    <NavBar \n                        applicationState={this.state}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                    />\n                    <Altimeter zoomLevel={zoomLevel} />\n                    <BoardControls\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        storeUndo={this.state.storeUndo}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        boardName={this.state.boardName}\n                        updateBoardName={this.updateBoardName}\n                        toggleBoardShare={this.toggleBoardShare}\n                    />\n                    <TextEditor \n                        data={textEditor}\n                        gridSpace={{offsetX, offsetY, zoomLevel}}\n                        handleUpdatedText={this.handleUpdatedText}\n                        handleSetElementHeight={this.handleSetElementHeight}\n                    />\n                    <ElementEditor \n                        selectedElements={selectedElements}\n                        gridSpace={{offsetX, offsetY, zoomLevel}}\n                        handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleShiftElementPosition={this.handleShiftElementPosition}\n                        boundingBox={boundingBox}\n                    />\n                    <Tools\n                        handleToolSelect={this.handleToolSelect} \n                        registerDragHandler={this.registerDragHandler}\n                        removeDragHandler={this.removeDragHandler}\n                        handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                        currentSelectedTool={this.state.tool}\n                    />\n                </InteractionManager>\n                <KeyboardManager \n                    handleDeleteElements={this.handleDeleteElements}\n                    handleDuplicateElements={this.handleDuplicateElements}\n                    textEditor={textEditor}\n                />\n                <MultiUserManager\n                    userID={this.state.userID} \n                    shareBoard={this.state.shareBoard}\n                    elements={this.state.elements}\n                    elementState={this.state.elementState}\n                    handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                    multiUserUpdate={this.state.multiUserUpdate}\n                    pointerPosition={this.state.pointerPosition}\n                    offsetX={this.state.offsetX}\n                    offsetY={this.state.offsetY}\n                    zoomLevel={this.state.zoomLevel}\n                />\n            </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            //\"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}