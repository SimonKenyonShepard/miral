{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/link.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/textFormat/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/editors/elementVisibility/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/utils.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/slideNavigator.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/elements/shared/visibilityOverlay.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/link/index.js","board/elements/youtube/index.js","board/elements/index.js","board/pattern.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","createElementBaseObject","id","initialZoomLevel","styles","width","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","alignItems","text","link","hidden","ShapeCircle","currentState","newState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","postitRect","postitSquare","postitRectV","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","push","shift","getUpdatedPointsBuffer","Line","lineStraight","lineSmooth","lineFreehand","lineStraightArrow","Image","presetWidthAndHeight","URL","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Slide","slideName","handleSlideClick","handleSlideDragStart","Link","handleLinkClick","handleLinkDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","More","slide","pdf","iframe","youtube","timer","poll","Toolbar","newStyles","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","console","log","target","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onPointerUp","PureComponent","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","gridSpace","sizeChecker","textContainer","scrollHeight","clientHeight","newFontSize","elementHeight","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","sizeCheckerInterval","nextProps","nextState","needsUpdateData","needsUpdateFont","needsUpdateLayout","position","justifyContent","visibility","textStyles","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","setInterval","clearInterval","themes","light","preDefinedColors","primaryColors","fontColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","update","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","value","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","TextFormat","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","FONT_FAMILIES","FontStyle","handleFontChange","handleSizeChange","font","round","CenterIcon","iconColor","LeftIcon","RightIcon","AlignTopIcon","AlignCenterIcon","AlignBottomIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","handleAlignTop","handleAlignCenter","handleAlignBottom","leftSelected","centerSelected","rightSelected","topAlignSelected","centerAlignSelected","bottomAlignSelected","currentIcon","handleLinkChange","list","getSlides","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","handleURLChange","ElementVisibility","isHidden","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","element","handleKeyPress","isTextBox","textEditor","tagName","getAttribute","ctrlKey","metaKey","handleDuplicateElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","areAllShapes","forEach","unshift","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Guides","hideGuides","leftGuideVisible","rightGuideVisible","topGuideVisible","bottomGuideVisible","hideGuidesTimeout","leftGuideStyles","rightGuideStyles","topGuideStyles","bottomGuideStyles","movingRight","movingLeft","resizingWidth","movingUp","movingDown","resizingHeight","clearTimeout","setTimeout","keys","Resizer","item","newElementsData","calculateSelectedElementsBoundingBox","xPercentageIncrease","rawWidth","yPercentageIncrease","rawHeight","newElementStyles","relativeXOffset","rawX","relativeYOffset","rawY","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","handleSetCurrentElement","selectedItemKeys","filter","isSelected","elementKeys","currentElements","prevElements","removedElements","addedElements","updateElementDragPosition","handleElementDragEnd","handleSelect","FileOption","loadFile","fileName","onDoubleClick","handleDblClick","Navbar","handleOpenMenu","menuVisible","subMenu","autoSave","applicationState","getState","deselectElements","stateToSave","boardName","localStorage","setItem","JSON","stringify","removeItem","saveToBrowser","saveToFile","a","createElement","file","Blob","href","createObjectURL","download","click","loadFileFromBrowser","getItem","dataToLoad","parse","handleUpdateElementsAndState","fileInput","accept","onchange","files","reader","FileReader","onload","result","readAsText","getSavedFromBrowser","deleteFile","deleteFileFromLocalStorage","saveToMonday","monday","mondaySdk","storage","instance","Date","getHours","getMinutes","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","newFile","userConfirmation","confirm","blankState","toLocaleDateString","loadTemplatesAndTutorials","mondaySaveAvailable","newElementStateData","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","handleJoinBoard","workshoppr","joinBoard","organisation","iconAnimation","iconFillColor","placeholder","defaultValue","match","companyName","objectClone","obj","clone","subPropertyKey","createNewObjectsForChangedElements","newData","patch","change","changePath","path","isObjectAndNotNull","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","SlideListItem","handleToggleEditMode","editMode","handleJumpToSlide","slideID","slideNumber","handleSlideNameChange","changeSlideName","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","toggleSlideList","slideNav","slidesNavStyles","slideBackwardsDisabled","slideForwardsDisabled","slideNavVisible","slideNavIcon","slideNames","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleMouseWheel","handleZoom","simulatedPanEvent","deltaX","deltaY","handlePanMove","dir","sign","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","SAFARIHACK_SCREENX","screenX","SAFARIHACK_SCREENY","screenY","updatePointerPosition","dragHandlers","wasAccidentalMovement","wasStartOfDrag","wasMiddleOfDrag","handleMouseUp","interactionTime","wasProbablyClick","containerElement","interactionMovement","touchAction","onPointerDown","onPointerMove","children","passive","KeyboardManager","copy","cut","paste","shuntSelectedElements","Avatar","wrapperCSS","Cursor","cursorRef","createRef","cursorAnimation","lastUpdate","pointerPosition","prevX","prevY","current","animate","easing","duration","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","cancelJoinCreds","colors","HOST","MultiUserManager","getJoinCreds","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","initializeBoard","shareEnded","owner","boardContents","emit","purgeEmitQueue","checkBoardForUpdates","error","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","VisibilityOverlay","shapeProps","iconSize","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","handleTextEdit","overlay","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","isUniqueSelected","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","background","slideTitle","realURL","loadRemoteBoard","open","linkHitArea","checkFocus","activeElement","currentFocus","disableInteraction","handlePlayIntent","iframePointerEvents","contentWindow","hitArea","playArea","iframeOpacity","youtubeURL","exec","src","frameBorder","allow","allowFullScreen","transformOrigin","Elements","elementNodes","fontStyles","Pattern","widthHeight","patternTransform","patternUnits","Board","handlePanStart","clearCanvasAnimations","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","heightZoomLevel","widthZoomLevel","elementData","elementHeightInReal","elementWidthInReal","finalZoomLevel","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","canvasAnimations","animation","dontDeselect","handleDeselectAllElements","newElements","prevElementData","unScaledFontSize","newSelectedElement","newDragHandlers","newHandlers","bind","newHeight","Number","mergeObjects","primaryObject","mergeObject","mergedObject","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","getSelectedElements","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","coOrds","selectedCount","slideKey","newName","newSlideElement","direction","pasteBuffer","newX","newY","fetch","resp","json","catch","multiUserUpdate","stepCount","valueIncrementX","valueIncrementY","valueIncrementZoom","sinValueIncrement","PI","currentValueX","currentValueY","currentZoomLevel","currentSinValue","counter","sin","time","newZoomLevel","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","percentageGridSize","backgroundGridSize","gridSizeMax","backgroundPositionY","gridPosition","in","stdDeviation","ddx","dy","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanEnd","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.31994800.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\",\n            alignItems : \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\",\n        hidden : false\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"postitSquare\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            postitRect : false,\n            postitSquare : false,\n            postitRectV : false,\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitSquare}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRect}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.postitRectV}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"postit\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"postit\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"lineStraight\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            lineStraight : false,\n            lineSmooth : false,\n            lineFreehand : false,\n            lineStraightArrow : false,\n            lineSmoothArrow : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraight}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmooth}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineStraightArrow}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineSmoothArrow}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.lineFreehand}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Unnamed\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Unnamed\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Link extends Component {\n\n    handleLinkClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleLinkDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"link\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleLinkClick}\n                handleDragStart={this.handleLinkDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport Link from \"./link\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"slide\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            slide : false,\n            link : false,\n            pdf : false,\n            iframe : false,\n            youtube : false,\n            timer : false,\n            poll : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.slide}\n            />,\n            <Link\n                key={\"tool_link\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.link}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.pdf}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.youtube}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.timer}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.poll}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = (e) => {\n        console.log(\"handleDrawCanvasHide\", e.target);\n        if(this.state.drawCanvasVisible) {\n            console.log(\"handleDrawCanvasHide if\");\n            const resetSelectArea = {\n                selectAreaVisible : false,\n                selectAreaPosition : {\n                    x : 0,\n                    y : 0,\n                    width : 0,\n                    height : 0,\n                }\n            };\n            const resetDrawCanvas = {\n                drawCanvasVisible : false\n            };\n            this.props.removeDragHandler(\"drawCanvas\");\n            const dontDeselectBoardElements = true;\n            this.props.handleToolSelect(\"pan\", dontDeselectBoardElements);\n            this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n        }\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onPointerUp={this.handleDrawCanvasHide}\n                    //onPointerOut={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : false\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24,\n        elementHeight : 0\n      };\n      this.sizeCheckerInterval = null;\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize*this.props.gridSpace.zoomLevel\n        });\n    }\n\n    sizeChecker = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            const newFontSize = (this.state.fontSize/3)*2;\n            this.setState({fontSize : newFontSize});\n        } else if(isAutoResize && (this.textInput.clientHeight < this.textContainer.clientHeight) && this.state.fontSize < 24) {\n            const twoThirds = (1/3*2);\n            const nextExpectedHeight = (this.textInput.clientHeight/(twoThirds*100))*100;\n            if(nextExpectedHeight < this.textContainer.clientHeight) {\n                const newFontSize = (this.state.fontSize/(twoThirds*100))*100;\n                this.setState({fontSize : newFontSize});\n            }\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            if(this.state.elementHeight !== this.textContainer.scrollHeight) {\n                this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n                this.setState({elementHeight : this.textContainer.scrollHeight});\n            }\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            data\n        } = nextProps;\n\n        const {\n            fontSize,\n            elementHeight\n        } = nextState;\n\n        const needsUpdateData = (data !== this.props.data);\n        const needsUpdateFont = (fontSize !== this.state.fontSize);\n        const needsUpdateLayout = (elementHeight !== this.state.elementHeight);\n\n        if(needsUpdateData || needsUpdateFont || needsUpdateLayout) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       const textStyles = {\n            fontSize : this.state.fontSize\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = this.state.elementHeight;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        if(data.fontStyle.textAlign) {\n            textStyles.textAlign = data.fontStyle.textAlign;\n            if(data.fontStyle.textAlign === \"left\") {\n                styles.justifyContent = \"flex-start\";\n            } else if (data.fontStyle.textAlign === \"right\") {\n                styles.justifyContent = \"flex-end\";\n            }\n        }\n\n        //TOTEST : text aligns correctly\n        if(data.fontStyle.alignItems) {\n            textStyles.alignItems = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                styles.alignItems = \"flex-start\";\n            } else if (data.fontStyle.alignItems === \"bottom\") {\n                styles.alignItems = \"flex-end\";\n            }\n        }\n        if(data.fontStyle.color) {\n            textStyles.color = data.fontStyle.color;\n        }\n\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={textStyles}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data && this.props.data.id) {\n            this.textInput.focus();\n            const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n            if(moveCaretToEnd && document.createRange) {\n                let range = document.createRange();\n                range.selectNodeContents(this.textInput);\n                range.collapse(false);\n                let selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            if(!prevProps.data || (this.props.data.id !== prevProps.data.id)) {\n                this.setState({\n                    fontSize :  this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel,\n                    elementHeight : this.props.data.styles.height/this.props.gridSpace.zoomLevel\n                });\n                this.sizeCheckerInterval = setInterval(this.sizeChecker, 100);\n            }\n            \n       } else {\n           clearInterval(this.sizeCheckerInterval);\n       }\n   }\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n    fontColors : [\n      \"#ffffff\", //white\n      \"#999\", //grey\n      \"#080808\" //text grey/black\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      update : {\n        predefinedColor : this.props.colorID\n      }\n    });\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles[0].styles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            fill : color,\n            fillOpacity : newFillOpacity\n          }\n        }\n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            fillOpacity : e.target.value\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        const fillOpacity = this.props.currentStyles[0].styles.fillOpacity;\n\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles[0].styles.fill \n        };\n\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            stroke : color,\n            strokeOpacity : newStrokeOpacity\n          }\n        }\n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeOpacity : e.target.value\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeWidth : (e.target.value*this.props.initialZoomLevel)\n          }\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextFormat\";\n\nclass TextFormat extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"fontWeight\" : newFontWeight\n          }\n        }\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"fontStyle\" : newFontStyle\n          }\n        }\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            textDecorationLine\n          }\n        }\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            textDecorationLine\n          }\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text format\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextFormat;","import React, {Component} from 'react';\n\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleUpdateColor = (color) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            color\n          }\n        }\n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          update : {\n            fontStyle : {\n              fontFamily : e.target.value\n            }\n          }\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            fontSize : (e.target.value*this.props.initialZoomLevel)\n          }\n        }\n      });\n    }\n\n    render() {\n        const theme = this.context;\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.fontColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('fontColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        min=\"0\"\n                        onChange={this.handleSizeChange}\n                        value={Math.round(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  FontStyle.contextType = ThemeContext;\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction AlignTopIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignCenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignBottomIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"left\"\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"right\"\n          }\n        }\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"center\"\n          }\n        }\n      });\n    }\n\n    handleAlignTop = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"top\"\n          }\n        }\n      });\n    }\n\n    handleAlignCenter = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"center\"\n          }\n        }\n      });\n    }\n\n    handleAlignBottom = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"bottom\"\n          }\n        }\n      });\n    }\n\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null,\n            topAlignSelected = (this.props.fontStyle.alignItems === \"top\") ? \"selected\" : null,\n            centerAlignSelected = (this.props.fontStyle.alignItems === \"center\") ? \"selected\" : null,\n            bottomAlignSelected = (this.props.fontStyle.alignItems === \"bottom\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${topAlignSelected}`} onClick={this.handleAlignTop}>\n                      <AlignTopIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerAlignSelected}`} onClick={this.handleAlignCenter}>\n                      <AlignCenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${bottomAlignSelected}`} onClick={this.handleAlignBottom}>\n                      <AlignBottomIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n\n    this.props.handleUpdateElementProperty({\n      update : {\n        link : e.target.value\n      }\n    });\n\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slide, i) =>  <option value={`element://${slide.id}`} key={`linkOption_${slide.id}`}>Slide {(i+1)}</option>)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring to front\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send to back\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          URL : e.target.value\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.URL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementVisibility extends Component {\n\n    handleToggleLock = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          hidden : !this.props.isHidden\n        }\n      });\n    }\n\n    render() {\n        \n      const {isHidden} = this.props;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Make this element not visible\"}\n          >\n            {isHidden ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M12 6.5c2.76 0 5 2.24 5 5 0 .51-.1 1-.24 1.46l3.06 3.06c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l2.17 2.17c.47-.14.96-.24 1.47-.24zM3.42 2.45L2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.97-.3 4.31-.82l3.43 3.43 1.41-1.41L3.42 2.45zM12 16.5c-2.76 0-5-2.24-5-5 0-.77.18-1.5.49-2.14l1.57 1.57c-.03.18-.06.37-.06.57 0 1.66 1.34 3 3 3 .2 0 .38-.03.57-.07L14.14 16c-.65.32-1.37.5-2.14.5zm2.97-5.33c-.15-1.4-1.25-2.49-2.64-2.64l2.64 2.64z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M12 4C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementVisibility;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport TextFormat from './editors/textFormat';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\nimport ElementVisibility from './editors/elementVisibility';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"textFormat\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textFormat\",  \"textAlignment\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textFormat\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"youtube\" : [\"url\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements.map((element) => element.id);\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = [...multiElementEditableFeatures];\n            let areAllShapes = true;\n            selectedElements.forEach(element => {\n                if(element.type !== \"shape\") {\n                    areAllShapes = false;\n                }\n            });\n            if(areAllShapes) {\n                editButtonTypes.unshift(\"customColor\");\n            }\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textFormat':\n                    return <TextFormat \n                                key={`${selectedElements[0].id}_${button}`}\n                                fontStyle={selectedElements[0].fontStyle}\n                                initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                currentOpenSubMenu={this.state.currentOpenSubMenu}\n                            />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'visibility':\n                        return <ElementVisibility \n                            key={`${selectedElements[0].id}_${button}`}\n                            isHidden={selectedElements[0].hidden}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    URL={selectedElements[0].URL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Guides extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          leftGuideVisible : false,\n          rightGuideVisible : false,\n          topGuideVisible : false,\n          bottomGuideVisible : false\n        };\n        this.hideGuidesTimeout = null;\n    }\n\n    hideGuides = () => {\n        this.setState({\n            leftGuideVisible : false,\n            rightGuideVisible : false,\n            topGuideVisible : false,\n            bottomGuideVisible : false,\n        });\n    }\n\n    render() {\n        const {\n            boundingBox\n        } = this.props;\n\n        const {\n            leftGuideVisible,\n            rightGuideVisible,\n            topGuideVisible,\n            bottomGuideVisible\n        } = this.state;\n\n        const leftGuideStyles = {\n            height : `100vh`,\n            width : `1px`,\n            transform : `translate3d(${(boundingBox.x)}px, 0px, 0)`\n        };\n\n        const rightGuideStyles = {\n            height : `100vh`,\n            width : `1px`,\n            transform : `translate3d(${(boundingBox.x+boundingBox.width)}px, 0px, 0)`\n        };\n\n        const topGuideStyles = {\n            height : `1px`,\n            width : `100vw`,\n            transform : `translate3d(0px, ${(boundingBox.y)}px, 0)`\n        };\n\n        const bottomGuideStyles = {\n            height : `1px`,\n            width : `100vw`,\n            transform : `translate3d(0px, ${(boundingBox.y+boundingBox.height)}px, 0)`\n        };\n\n        if(leftGuideVisible) {\n            leftGuideStyles.opacity = 0.3;\n        }\n\n        if(rightGuideVisible) {\n            rightGuideStyles.opacity = 0.3;\n        }\n\n        if(topGuideVisible) {\n            topGuideStyles.opacity = 0.3;\n        }\n\n        if(bottomGuideVisible) {\n            bottomGuideStyles.opacity = 0.3;\n        }\n\n        return (\n            <div className=\"guides\">\n                <div className=\"guide\" style={leftGuideStyles} />\n                <div className=\"guide\" style={rightGuideStyles} />\n                <div className=\"guide\" style={topGuideStyles} />\n                <div className=\"guide\" style={bottomGuideStyles} />\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const movingRight = this.props.boundingBox.x > prevProps.boundingBox.x,\n              movingLeft = this.props.boundingBox.x < prevProps.boundingBox.x,\n              resizingWidth = (this.props.boundingBox.width !== prevProps.boundingBox.width),\n              movingUp = this.props.boundingBox.y < prevProps.boundingBox.y,\n              movingDown = this.props.boundingBox.y > prevProps.boundingBox.y,\n              resizingHeight = (this.props.boundingBox.height !== prevProps.boundingBox.height),\n              newState = {},\n              hideTimeout = 3500;\n        \n        if(movingRight) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if (movingLeft) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if (resizingWidth) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        }\n\n        if (movingUp) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if(movingDown) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if(resizingHeight) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        }\n\n        if(Object.keys(newState).length > 0) {\n            this.setState(newState);\n        }\n    }\n}\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, currentState.zoomLevel, currentState.offsetX, currentState.offsetY);\n                const xPercentageIncrease = (boundingBox.rawWidth + (e.movementX*currentState.zoomLevel))/boundingBox.rawWidth,\n                      yPercentageIncrease = (boundingBox.rawHeight + (e.movementY*currentState.zoomLevel))/boundingBox.rawHeight;\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    //TOTEST : Multi-selected elements resize correctly \n                    newElement.styles.width *= xPercentageIncrease;\n                    newElement.styles.height *= yPercentageIncrease;\n                    const relativeXOffset = newElement.styles.x-boundingBox.rawX,\n                          relativeYOffset = newElement.styles.y-boundingBox.rawY;\n\n                    newElement.styles.x = (newElement.styles.x-relativeXOffset)+(relativeXOffset*xPercentageIncrease);\n                    newElement.styles.y = (newElement.styles.y-relativeYOffset)+(relativeYOffset*yPercentageIncrease);\n\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width + (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                //TOTEST : Fixed ratio elements resize correctly \n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width + (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                //TOTEST : Single elements resize correctly\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <>\n            <Guides \n                boundingBox={boundingBox}\n            />\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n            \n           </>\n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component, PureComponent} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(`miralFile_${this.props.fileName}`);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDblClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\nconst autosave_fileName = `miral_autoSave`;\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n\n    deselectElements(elementState) {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(item.selected !== false) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n\n    autoSave = () => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        if(Object.keys(applicationState.elements).length > 0) {\n            const stateToSave = {\n                elements : applicationState.elements,\n                elementState : applicationState.elementState,\n                boardName : applicationState.boardName,\n                zoomLevel : applicationState.zoomLevel,\n                offsetX : applicationState.offsetX,\n                offsetY : applicationState.offsetY\n            };\n            window.localStorage.setItem(autosave_fileName, JSON.stringify(stateToSave));\n        } else {\n            window.localStorage.removeItem(autosave_fileName);\n        }\n       \n        \n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        \n        let fileName = `miralFile_${applicationState.boardName}`;\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    saveToFile = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(fileName);\n        const dataToLoad = JSON.parse(file);\n        const state = Object.assign({}, this.props.applicationState, dataToLoad);\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.props.handleUpdateElementsAndState(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                        deleteFile={this.deleteFileFromLocalStorage}\n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n\n    deleteFileFromLocalStorage = () => {\n        const applicationState = this.props.getState();\n        const {\n            boardName \n        } = applicationState;\n\n        window.localStorage.removeItem(`miralFile_${boardName}`);\n        this.newFile();\n    }\n\n    newFile = () => {\n        //TODO write robust mechanism to determine whether file has changed.\n        const checkWillLoseChanges = window.localStorage.getItem(autosave_fileName);\n        let userConfirmation = true;\n        if(checkWillLoseChanges) {\n            userConfirmation = window.confirm(\"All changes in current board will be lost, are you sure?\");\n        }\n        if(userConfirmation) {\n            const applicationState = this.props.getState();\n            const blankState = {\n                elements : {},\n                elementState : {},\n                boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n                zoomLevel : 100,\n                offsetX : 0,\n                offsetY : 0\n            };\n            const state = Object.assign({}, applicationState, blankState);\n            this.props.handleUpdateElementsAndState(state);\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        }\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.props.loadTemplatesAndTutorials();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr.com</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.newFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M4.01 2L4 22h16V8l-6-6H4.01zM13 9V3.5L18.5 9H13z\"/>\n                                    </svg>\n                                    <span>New board</span>\n                                </div>\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                {(!mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToBrowser}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                                <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                            </svg>\n                                            <span>Save to Browser</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromBrowser}\n                                        >\n                                            <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                                <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                            </svg>\n                                            <span>Load from Browser</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.deleteFileFromLocalStorage}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"/>\n                                    </svg>\n                                    <span>Delete board</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadTemplatesAndTutorials}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 8v12H2V10h20zm-6 6l-6-3.27v6.53L16 16z\"/>\n                                    </svg>\n                                    <span>Templates &amp; Guides</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        //enable monday.com save options & disable browser save\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n        //load previous autosave\n        const checkIfAlreadyExists = window.localStorage.getItem(autosave_fileName);\n        if(checkIfAlreadyExists) {\n            //this.loadFileFromBrowser(autosave_fileName);\n        }\n        //start autosave\n        //setInterval(this.autoSave, 5000);\n\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleJoinBoard = (e) => {\n        window.workshoppr.joinBoard(this.state.organisation, this.state.boardID);\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleJoinBoard}\n                                >Join existing session</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        } else if (window.location.href.indexOf(\"boardId=\") !== -1) {\n            const organisation = window.location.href.match(/boardViewId=([^&$]*)/m)[1];\n            const boardID = window.location.href.match(/boardId=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n\nexport function isObjectAndNotNull(item) {\n  return typeof item === 'object' && item !== null;\n};\n\nexport function mergeObjects(primaryObject, mergeObject) {\n  const mergedObject = {...primaryObject};\n  Object.keys(mergeObject).forEach(key => {\n    \n    if(isObjectAndNotNull(mergeObject[key]) && isObjectAndNotNull(primaryObject[key])) {\n      mergedObject[key] = mergeObjects(primaryObject[key], mergeObject[key]);\n    } else {\n      mergedObject[key] = mergeObject[key];\n    }\n  });\n  return mergedObject;\n}","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideListItem extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            editMode : false\n        };\n    }\n\n    handleToggleEditMode = (e) => {\n        e.stopPropagation();\n        this.setState({\n            editMode : !this.state.editMode\n        });\n    }\n\n    handleJumpToSlide = () => {\n        this.props.handleJumpToSlide(this.props.slideID, this.props.slideNumber);\n    }\n\n    handleSlideNameChange = (e) => {\n        this.props.changeSlideName(this.props.slideID, e.target.value);\n    }\n\n    render() {\n        const {\n            editMode\n        } = this.state;\n        return (\n            <div \n                key={`slideList_name_${this.props.slideNumber}`} \n            >\n            {editMode \n                ? (\n                    <div\n                        className={\"slideList_name\"}\n                    >\n                        <span className={\"slideList_identifier\"}>\n                            <input value={this.props.slideName} onChange={this.handleSlideNameChange} />\n                        </span>\n                        <div className={\"slideList_tools\"}>\n                            <span className={\"slideList_close\"} onClick={this.handleToggleEditMode} />\n                        </div>\n                    </div>\n                ) : (\n                    <div \n                        className={\"slideList_name\"}\n                        onClick={this.handleJumpToSlide}\n                    >\n                        <span className={\"slideList_identifier\"}>\n                            {this.props.slideNumber+1} - {this.props.slideName}\n                        </span>\n                        <div className={\"slideList_tools\"}>\n                            <span className={\"slideList_editName\"} onClick={this.handleToggleEditMode} />\n                        </div>\n                    </div>\n                ) \n            }\n            \n            </div>)\n    }\n}\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : 0,\n            slideNav : false\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide].id;\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide].id, 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        \n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide].id;\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide].id, 1);\n        }\n\n    }\n\n    toggleSlideList = () => {\n        this.setState({\n            slideNav : !this.state.slideNav\n        });\n    }\n\n    handleJumpToSlide = (slideID, slideNumber) => {\n        this.props.animateToElement(slideID, 1);\n        this.setState({currentSlide : slideNumber, slideNav : false});\n    }\n  \n    render() {\n\n        const {\n            currentSlide,\n            slideNav\n        } = this.state;\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n        //TOTEST : Buttons are disabled when user cannot go to next slide\n        let slideBackwardsDisabled = \"buttonDisabled\";\n        if(currentSlide !== 0) {\n            slideBackwardsDisabled = \"\";\n        }\n\n        let slideForwardsDisabled = \"buttonDisabled\";\n        if(currentSlide < slides.length-1) {\n            slideForwardsDisabled = \"\";\n        }\n\n        const slideNavVisible = slideNav ? \"dropDown_open\" : \"\",\n              slideNavIcon = slideNav ? \"openIcon\" : \"\";\n\n        const slideNames = slides.map((slide, i) => {\n            return (\n            <SlideListItem \n                key={`slideList_name_${i}`}\n                slideNumber={i}\n                slideName={slide.slideName}\n                slideID={slide.id}\n                handleJumpToSlide={this.handleJumpToSlide}\n                changeSlideName={this.props.changeSlideName}\n            />);\n        });\n\n        return (\n            <div className={\"undoControls\"} style={slidesNavStyles}>\n                <span \n                    className={`iconButton backward ${slideBackwardsDisabled}`}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span\n                    className={`dropDown ${slideNavIcon}`}\n                    onClick={this.toggleSlideList}\n                >Slide {(this.state.currentSlide+1)} of {slides.length}\n                </span>\n                <span \n                    className={`iconButton forward ${slideForwardsDisabled}`}\n                    onClick={this.handleSlideForward}\n                />\n                <div className={`slideList ${slideNavVisible}`}>\n                    {slideNames}\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\nimport SlideNavigator from './slideNavigator';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n\n                <SlideNavigator \n                    getSlides={this.props.getSlides}\n                    changeSlideName={this.props.changeSlideName}\n                    animateToElement={this.props.animateToElement}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n      this.SAFARIHACK_SCREENX = 0;\n      this.SAFARIHACK_SCREENY = 0;\n      this.containerElement = null;\n    }\n\n    handleMouseWheel = (e) => {\n        if (e.ctrlKey) {\n            e.preventDefault();\n            this.handleZoom(e);\n        } else {\n            const simulatedPanEvent = {\n                movementX : e.deltaX*-1,\n                movementY : e.deltaY*-1\n            };\n            this.props.handlePanMove(simulatedPanEvent);\n        }\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + (dir*2) : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            isSelected : this.props.isSelected(e.target.id),\n            elementID : e.target.id\n        });\n        this.SAFARIHACK_SCREENX = e.screenX;\n        this.SAFARIHACK_SCREENY = e.screenY;\n        \n    }\n\n    handleMouseMove = (e) => {\n        const {\n            drag,\n            elementID,\n            isSelected,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        \n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            let dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            const wasStartOfDrag = (drag === \"mouseDown\" && !wasAccidentalMovement);\n            const wasMiddleOfDrag = (dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement);\n            const wasCanvasDrag = (!wasAccidentalMovement && !isSelected && elementID !== \"drawCanvas\" && elementID !== \"resizerHandle\" && elementID !== \"elementSelectionArea\");\n            if(wasCanvasDrag) {\n                dragHandlers = this.props.dragHandlers[\"board\"];\n                this.setState({elementID : \"board\"});\n            }\n            if(wasStartOfDrag) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else if(wasMiddleOfDrag) {\n                //THIS BROWSER HACK IS NEEDED BECAUSE SAFARI POINTERMOVE EVENT DOES NOT SUPPORT MOVEMENTX or MOVEMENTY - PLEASE REMOVE IF NO LONGER NEEDED (i raised a ticket with apple)\n                const movementX = e.screenX-this.SAFARIHACK_SCREENX;\n                const movementY = e.screenY-this.SAFARIHACK_SCREENY;\n                this.SAFARIHACK_SCREENX = e.screenX;\n                this.SAFARIHACK_SCREENY = e.screenY;\n                e.movementX = movementX;\n                e.movementY = movementY;\n                //END BROWSER HACK\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -5 && interactionMovement < 5)\n    }\n\n    render() {\n\n        const styles={\n            cursor : \"pointer\",\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\",\n            touchAction : \"none\"\n        }\n        \n        return (\n            <div\n                style={styles}\n                onPointerDown={this.handleMouseDown}\n                onPointerMove={this.handleMouseMove}\n                onPointerUp={this.handleMouseUp}\n                id=\"interActionManager\"\n                ref={(container) => { this.containerElement = container; }}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mouseleave\", (e) => {\n            const {\n                drag\n            } = this.state;\n            if(drag === \"mouseDown\" || drag === \"dragging\") {\n                //this.handleMouseUp(e); TODO Figure out how to do this while still keeping toolbar happy.\n            }\n        });\n        this.containerElement.addEventListener('wheel', this.handleMouseWheel,{ passive: false });\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const currentX = this.props.data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = this.props.data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.cursorRef.current.animate(\n                [\n                    {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                    {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n                ]\n            , {\n                fill: 'forwards',\n                easing: 'ease-out',\n                duration: 500\n              });\n\n        }\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.props.cancelJoinCreds}\n                    >Cancel</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    getJoinCreds = (organisation, boardID) => {\n        const newState = {\n            requestCreds : true\n        };\n        if(organisation) {\n            newState.organisation = organisation;\n        }\n        if(boardID) {\n            newState.boardID = boardID;\n        }\n        this.setState(newState);\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    cancelJoinCreds = () => {\n        const newState =  {requestCreds : false};\n        this.setState(newState);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        \n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        console.log(\"new patch\", data.elementsDiffUpdates);\n        console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Back</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                        cancelJoinCreds={this.cancelJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                console.log(this.props.shareBoard);\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n        window.workshoppr = {};\n        window.workshoppr.joinBoard = this.getJoinCreds;\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {PureComponent} from 'react';\n\nclass VisibilityOverlay extends PureComponent {\n  \n    render() {\n        const {shapeProps} = this.props;\n        const iconSize = shapeProps.width/5;\n        return (\n            <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                    style={{\n                        backgroundColor : \"#ccc\",\n                        backgroundImage : \"url('/icons/visibility_off-24px.svg')\",\n                        backgroundPosition : \"center center\",\n                        backgroundSize : `${iconSize}px ${iconSize}px`,\n                        backgroundRepeat : \"no-repeat\",\n                        pointerEvents : \"none\"\n                    }}\n                />\n        );\n    }\n    \n  }\n\n  export default VisibilityOverlay;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Shape extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        let visibility = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            let textAlign = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                textAlign = \"flex-start\";\n            } else if(data.fontStyle.alignItems === \"bottom\") {\n                textAlign = \"flex-end\";\n            }\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                        style={{\n                            alignItems : textAlign\n                        }}\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n                {visibility}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Text extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            let textAlign = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                textAlign = \"flex-start\";\n            } else if(data.fontStyle.alignItems === \"bottom\") {\n                textAlign = \"flex-end\";\n            }\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                        style={{\n                            alignItems : textAlign\n                        }}\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isUniqueSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default Text;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                lineHeight : `${(data.fontStyle.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.URL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n\n        const slideTitle = (data.slideName === \"Unnamed\") ? `Slide ${this.props.slideNumber}` : data.slideName;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{slideTitle}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Link extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleLinkClick = (e) => {\n        if(this.props.data.link.indexOf(\"element://\") !== -1) {\n            const element = this.props.data.link.split(\"://\")[1];\n            this.props.animateToElement(element, 1);\n        } else if (this.props.data.link.indexOf(\"wswb\") !== -1) {\n            const realURL = this.props.data.link.replace(/wswb/, \"http\");\n            this.props.loadRemoteBoard(realURL);\n        } else if (this.props.data.link.indexOf(\"http\") !== -1) {\n            window.open(this.props.data.link,'_blank');\n        }\n        \n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let shape = null;\n        let overlay = null;\n        let linkHitArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 15*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n        \n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        if(data.link) {\n            \n            linkHitArea = (<rect \n                height={shapeProps.height-strokeWidth}\n                width={shapeProps.width-strokeWidth}\n                x={shapeProps.x+(strokeWidth/2)}\n                y={shapeProps.y+(strokeWidth/2)}\n                fillOpacity={0}\n                onClick={this.handleLinkClick}\n                cursor={\"pointer\"}\n            />);\n\n        }\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {linkHitArea}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Link;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Youtube extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n          iframePointerEvents : \"none\"\n      };\n      this.iframe = null;\n      this.currentFocus = null;\n    }\n\n    checkFocus = () => {\n        if(document.activeElement.title !== this.currentFocus) {\n          this.disableInteraction();\n        } else {\n            setTimeout(this.checkFocus, 1000);\n        }\n      }\n\n    handlePlayIntent = () => {\n        this.setState({iframePointerEvents : \"auto\"});\n        this.iframe.contentWindow.focus();\n        this.currentFocus = document.activeElement.title;\n        setTimeout(this.checkFocus, 1000);\n    }\n\n    disableInteraction = () => {\n        this.setState({iframePointerEvents : \"none\"});\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let iframe = null;\n        let overlay = null;\n        let hitArea = null;\n        let playArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 20*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n\n        let iframeOpacity = 1;\n        if(this.state.iframePointerEvents === \"none\") {\n            iframeOpacity = 0.6;\n        }\n\n        \n        const youtubeIDMatcher = /(?:embed\\/|v=)\\b(.+?)(?![\\w-])/g;\n        const videoID = youtubeIDMatcher.exec(data.URL);\n        const youtubeURL = \"https://www.youtube.com/embed/\"+videoID[1];\n        \n        iframe = \n            <foreignObject\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n                fill=\"#000\"\n                pointerEvents={this.state.iframePointerEvents}\n\n            >\n                <iframe\n                    title={\"youtubeVideo\"+data.id}\n                    width={(shapeProps.width/data.initialZoomLevel)}\n                    height={(shapeProps.height/data.initialZoomLevel)} \n                    src={youtubeURL} \n                    frameBorder=\"0\" \n                    allow=\"clipboard-write; encrypted-media; picture-in-picture\"\n                    allowFullScreen={true}\n                    style={{\n                        transform : `scale(${data.initialZoomLevel})`,\n                        transformOrigin : \"top\",\n                        opacity: iframeOpacity\n                    }}\n                    ref={(container) => { this.iframe = container; }}\n                />\n            \n            </foreignObject>;\n            \n        hitArea = (<rect\n            id={data.id} \n            x={shapeProps.x}\n            y={shapeProps.y}\n            height={shapeProps.height}\n            width={shapeProps.width}\n            fillOpacity={0}\n        />);\n        // CHANGE THIS SO THERE IS TEXT WHEN IT IS GREYED OUT SAYING DOUBLE CLICK TO ACIVATE, \n        if(this.state.iframePointerEvents === \"none\") {\n            playArea = (\n                <rect\n                    x={(shapeProps.x+(shapeProps.width/2)-(68*data.initialZoomLevel)/2)}\n                    y={(shapeProps.y+(shapeProps.height/2)-(48*data.initialZoomLevel)/2)}\n                    height={(48*data.initialZoomLevel)}\n                    width={(68*data.initialZoomLevel)}\n                    fillOpacity={0}\n                    cursor={\"pointer\"}\n                    onClick={this.handlePlayIntent}\n                />\n            );\n        }\n        \n\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {hitArea}\n                {iframe}\n                {playArea}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\nimport Link from './link';\nimport Youtube from './youtube';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            isUniqueSelected,\n            zoomLevel,\n            animateToElement,\n            loadRemoteBoard\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    isUniqueSelected={isUniqueSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"link\") {\n                slides.push(element.id);\n                return (<Link\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                    animateToElement={animateToElement}\n                    loadRemoteBoard={loadRemoteBoard}\n                />);\n            } else if (element.type === \"youtube\") {\n                return (<Youtube\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n\n\n\nclass Pattern extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    \n\n    render() {\n       \n        const widthHeight = 10*this.props.zoomLevel,\n              strokeWidth = 5*this.props.zoomLevel;\n\n        return (\n            <>\n            <pattern id=\"diagonalHatch\" width={widthHeight} height={widthHeight} patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\">\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2={widthHeight} style={{stroke:\"#ccc\", strokeWidth: strokeWidth, strokeOpacity : 0.2 }} />\n            </pattern>\n            </>\n        );\n    }\n    \n  }\n\n  export default Pattern;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone, mergeObjects} from './utils';\n\n//SVG\nimport Pattern from './pattern';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        boardID : Shortid.generate(),\n        userID : Shortid.generate(),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        }\n      };\n      this.canvasAnimations = [];\n    }\n\n    handlePanStart = (e, dragStartX, dragStartY) => {\n        this.clearCanvasAnimations();\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        \n\n        const elementData = elements[elementID];\n\n        //get correct zoomLevel\n\n        const elementHeightInReal = elementData.styles.height/zoomLevel,\n              elementWidthInReal = elementData.styles.width/zoomLevel;\n\n        let heightZoomLevel = zoomLevel,\n            widthZoomLevel = zoomLevel;\n        \n        heightZoomLevel = ((elementHeightInReal/this.props.height)*1.3)*zoomLevel;\n        widthZoomLevel = ((elementWidthInReal/this.props.width)*1.3)*zoomLevel;\n\n        const finalZoomLevel = Math.round(Math.max(heightZoomLevel, widthZoomLevel));\n\n        //get element position\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*finalZoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*finalZoomLevel),\n            zoomLevel : finalZoomLevel\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              endZoomLevel = finalPosition.zoomLevel,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              valueIncrementZoom = (endZoomLevel - zoomLevel) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentZoomLevel = zoomLevel,\n            currentSinValue = 0,\n            counter = 0;\n        \n        this.clearCanvasAnimations();\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentZoomLevel += Math.round(valueIncrementZoom * (Math.sin(currentSinValue) ** 2) * 2);\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, newZoomLevel, incrementDelay) {\n                this.canvasAnimations.push(setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                        zoomLevel : newZoomLevel\n                    });\n                }, incrementDelay));\n            }.bind(this)(currentValueX, currentValueY, currentZoomLevel, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n    clearCanvasAnimations = () => {\n        this.canvasAnimations.forEach(animation => {\n            clearTimeout(animation);\n        });\n        this.canvasAnimations = [];\n    }\n\n  \n    handleToolSelect = (type, dontDeselect) => {\n        if(!dontDeselect) {\n            this.handleDeselectAllElements();\n        }\n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID)) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = this.deselectElements(this.state.elementState);\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    deselectElements = (elementState) => {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newHeight  = Number(height)*this.state.zoomLevel;\n        if(this.state.elements[elementID].styles.height !== newHeight) {\n            const newElementsData = {...this.state.elements};\n            newElementsData[elementID] = {...newElementsData[elementID]};\n            newElementsData[elementID].styles = {...newElementsData[elementID].styles};\n            newElementsData[elementID].styles.height = newHeight;\n            this.setState({elements : newElementsData});\n        }\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        data.id.forEach((id) => {\n            const newElement = mergeObjects(newElementsData[id], data.update);\n            newElementsData[id] = newElement;\n        });\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {},\n              newElementState = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(newIdsOrder.length, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(0, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n            newElementState[id] = this.state.elementState[id];\n        });\n        this.setState({\n            elementState : newElementState,\n            elements : newElementsData,\n            storeUndo : true\n        });\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID] = {...newElementsState[elementID]};\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        //TOTEST : nothing happens when no elements selected\n        if(selectedElements.length) { \n            const newElements = {...elements};\n            const newElementsState = {...elementState};\n            const duplicatesOffsetMargin = 8;\n\n            const duplicatesOffsetPosition = {\n                x : selectedElements[0].styles.x,\n                x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n            };\n\n            //get position for new duplicate elements\n            selectedElements.forEach(element => {\n                if(element.styles.x < duplicatesOffsetPosition.x) {\n                    duplicatesOffsetPosition.x = element.styles.x;\n                }\n                const elementX1 = element.styles.x + element.styles.width;\n                if(elementX1 > duplicatesOffsetPosition.x1) {\n                    duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n                }\n            });\n\n            //duplicate elements & state\n            selectedElements.forEach(element => {\n                const newID = Shortid.generate();\n                const duplicateElement = objectClone(element);\n                const duplicateElementState = objectClone(elementState[element.id]);\n                duplicateElement.id = newID;\n                duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n                newElements[newID] = duplicateElement;\n                newElementsState[newID] = duplicateElementState;\n                //remove selected status for old items\n                newElementsState[element.id] = {...newElementsState[element.id]};\n                newElementsState[element.id].selected = false;\n            });\n\n            this.setState(\n                {\n                    elementState : newElementsState,\n                    elements : newElements\n                }\n            );\n        }\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        \n        let isSelected = false;\n\n        if(elementState[elementID] && elementState[elementID].selected === userID) {\n            isSelected = true;\n        }\n        \n        return isSelected;\n    }\n\n    isUniqueSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        const isSelected = elementState[elementID].selected === userID;\n        let selectedCount = 0;\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedCount++;\n            }\n        });\n        const isUniqueSelcted = isSelected && selectedCount === 1;\n        return isUniqueSelcted;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return {...this.state};\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        const slideKeys = Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        const slides = slideKeys.map(slideKey => {\n            return {\n                id : slideKey,\n                slideName : elements[slideKey].slideName\n            }\n        });\n\n        return slides;\n    }\n\n    changeSlideName = (slideID, newName) => {\n        const {\n            elements\n        } = this.state;\n        const newElements = {...elements};\n        const newSlideElement = {...elements[slideID]};\n        newSlideElement.slideName = newName;\n        newElements[slideID] = newSlideElement;\n        this.setState({elements : newElements});\n    } \n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = this.deselectElements(elementState);\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (element.styles.x - pasteBuffer.boundingBox.rawX);\n            const newY = pointerPosition.y + (element.styles.y - pasteBuffer.boundingBox.rawY);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        const newState = {\n            elements : newElements,\n            elementState : newElementState\n        };\n\n        if(pasteBuffer.type === \"cut\") {\n            newState.pasteBuffer = {\n                type : null,\n                elements : [],\n                elementState : []\n            };\n        }\n\n        this.setState(newState);\n    }\n\n    loadRemoteBoard = (url) => {\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => {\n                const newState = Object.assign({}, this.state, data);\n                this.setState(newState);\n            })\n            .catch(e => console.log(e));\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.loadRemoteBoard(\"https://raw.githubusercontent.com/SimonKenyonShepard/miral_templates/main/whiteboardFile_splashScreen.wswb\");\n    }\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY),\n              gridSizeMin = 24,\n              gridSizeMax = 96,\n              gridRange = gridSizeMax-gridSizeMin,\n              percentageGridSize = (zoomLevel-(Math.floor(zoomLevel/100)*100))/100,\n              backgroundGridSize = gridSizeMax-(gridRange*percentageGridSize),\n              backgroundPositionX = ((offsetX)/zoomLevel*-1)-percentageGridSize,\n              backgroundPositionY = ((offsetY)/zoomLevel*-1)-percentageGridSize;\n\n        const gridPosition = {\n            backgroundPosition : `${backgroundPositionX}px ${backgroundPositionY}px`,\n            backgroundSize : `${backgroundGridSize}px ${backgroundGridSize}px`\n        };\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                        handlePanMove={this.handlePanMove}\n                        isSelected={this.isSelected}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <Pattern \n                                zoomLevel={zoomLevel}\n                            />\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                isUniqueSelected={this.isUniqueSelected}\n                                animateToElement={this.animateToElement}\n                                loadRemoteBoard={this.loadRemoteBoard}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <Tools\n                            handleToolSelect={this.handleToolSelect} \n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            currentSelectedTool={this.state.tool}\n                        />\n                    </InteractionManager>\n                    <Altimeter zoomLevel={zoomLevel} />\n                    <BoardControls\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        storeUndo={this.state.storeUndo}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        boardName={this.state.boardName}\n                        updateBoardName={this.updateBoardName}\n                        toggleBoardShare={this.toggleBoardShare}\n                        getSlides={this.getSlides}\n                        changeSlideName={this.changeSlideName}\n                        animateToElement={this.animateToElement}\n                    />\n                    <NavBar \n                        getState={this.getState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        loadTemplatesAndTutorials={this.loadTemplatesAndTutorials}\n                    />\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <MultiUserManager\n                        userID={this.state.userID} \n                        shareBoard={this.state.shareBoard}\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        multiUserUpdate={this.state.multiUserUpdate}\n                        pointerPosition={this.state.pointerPosition}\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                    />\n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        const isNotFirstUse = window.localStorage.getItem(\"miral_isFirstUse\");\n        if(!isNotFirstUse) {\n            this.loadTemplatesAndTutorials();\n            window.localStorage.setItem(\"miral_isFirstUse\", true);\n        }\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}