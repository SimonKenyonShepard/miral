{"version":3,"sources":["board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/ui/navbar/index.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/utils.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["Tool","handleToolSelect","e","props","type","handleDrawCanvasShow","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","autoActivate","Component","Select","context","handleSelectStart","dragStartX","dragStartY","handleShowSelectionArea","setState","x","y","x1","y1","handleSelectMove","selectionAreaUpdate","state","movementX","movementY","handleUpdateSelectionArea","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","MultiTool","handleOpenSubMenu","stopPropagation","toolSubMenuOpen","handleSetCurrentOpenSubMenu","submenuCSS","subMenuItems","openSubMenu","Shape","currentState","newState","elements","newID","Shortid","generate","id","shapeType","fixedRatio","styles","zoomLevel","offsetX","width","offsetY","height","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","text","initialZoomLevel","elementState","selected","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","tool","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","previousSelectedShapeTool","menuActivated","shapeRect","shapeCircle","shapeTriangle","subMenuTools","key","prevProps","Postit","subType","predefinedColor","clientX","clientY","Math","floor","random","handlePostitClick","handlePostitDragStart","Text","handleTextClick","handleTextDragStart","LineStraight","markerEnd","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","i","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","push","shift","getUpdatedPointsBuffer","Line","Image","imgURL","Slide","PDF","Iframe","Youtube","Timer","Poll","More","Toolbar","multiplier","handleElementDragMove","prevState","Tools","drawCanvasVisible","handleDrawCanvasHide","Object","assign","selectAreaVisible","selectAreaPosition","visible","event","selectionAreaCoords","positionUpdate","selectAreaStyle","display","transform","drawCanvasStyles","style","onMouseUp","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","data","newText","textInput","innerText","textContent","trim","handleKeyPress","textContainer","scrollHeight","clientHeight","newFontSize","gridSpace","handleSetElementHeight","handlePaste","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","position","alignItems","justifyContent","visibility","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","map","line","onKeyPress","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","focus","createRange","range","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","themes","light","preDefinedColors","primaryColors","dark","ThemeContext","React","createContext","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","property","value","colorID","backgroundColor","PredefinedColorPicker","subMenuOpen","currentOpenSubMenu","theme","selectedColor","fillColor","title","contextType","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","target","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","String","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","FONT_FAMILIES","FontStyle","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","handleFontChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","font","CenterIcon","iconColor","LeftIcon","RightIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","leftSelected","centerSelected","rightSelected","currentIcon","Link","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","URL","handleURLChange","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","element","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Resizer","keys","forEach","item","newElementsData","elementID","wrapperStyles","isVisible","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","ElementDrag","selectedItems","filter","rawHeight","rawWidth","rawX","rawY","currentSelectedElements","selectedElementKeys","prevSelectedElements","removedElements","addedElements","updateElementDragPosition","FileOption","loadFile","fileName","Navbar","handleOpenMenu","menuVisible","subMenu","saveToBrowser","applicationState","stateToSave","boardName","applicationCache","localStorage","getItem","Date","getHours","getMinutes","setItem","JSON","stringify","loadFileFromBrowser","file","parse","handleUpdateElementsAndState","getSavedFromBrowser","files","saveToMonday","monday","mondaySdk","storage","instance","then","request","checkFileList","getSavedFromMonday","loadFileFromMonday","mondaySaveAvailable","menuCSS","letFirstMenuHidden","ry","rx","url","location","ancestorOrigins","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","prevCombinedData","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleZoom","dir","sign","deltaY","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handleMouseDown","dragStartTime","now","drag","console","log","wasFirstDrag","dragHandlers","handleMouseUp","interactionTime","interactionMovement","wasProbablyClick","onMouseDown","onMouseMove","onWheel","children","KeyboardManager","textEditor","tagName","ctrlKey","metaKey","handleDuplicateElements","addEventListener","removeEventListener","handleSelect","isMultiSelect","handleSetCurrentElement","handleTextEdit","shapeProps","outline","textBody","lineHeight","padding","triangleStart","triangleMid","triangleEnd","points","onDoubleClick","setTimeout","postItShapeTypes","path","dropShadow","postItShapeData","postItColor","x2","y2","handleCrop","image","imgStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","objectClone","obj","clone","subPropertyKey","Board","handleDeselectAllElements","newElements","elementData","unScaledFontSize","newElementStateData","newDragHandlers","newHandlers","bind","Number","newElement","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isWithinArea","duplicatesOffsetPosition","elementX1","duplicateElement","duplicateElementState","newBoardName","toLocaleDateString","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","elementNodes","calculateSelectedElementsBoundingBox","gridPosition","updateDragPosition","in","stdDeviation","markerWidth","markerHeight","refX","refY","orient","markerUnits","handlePanMove","App","handleWindowResize","innerWidth","innerHeight","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9566953a.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Tool extends Component {\n  \n    handleToolSelect = (e) => {\n        this.props.handleToolSelect(this.props.type);\n        this.props.handleDrawCanvasShow();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            ></div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.props.autoActivate) {\n            this.handleToolSelect();\n        }\n\n    }\n    \n  }\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.props.handleShowSelectionArea(true, e, dragStartX, dragStartY);\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n        const selectionAreaUpdate = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n        this.props.handleUpdateSelectionArea(selectionAreaUpdate);\n        this.setState(selectionAreaUpdate);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  export default Select;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleOpenSubMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            toolSubMenuOpen : !this.state.toolSubMenuOpen\n        });\n        this.props.handleSetCurrentOpenSubMenu(this.props.type);\n    }\n  \n    render() {\n\n        let submenuCSS = \"toolbar_submenu\";\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type}`}\n                onClick={this.handleOpenSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    {this.props.subMenuItems}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        if( this.state.toolSubMenuOpen &&\n            this.props.openSubMenu !== this.props.type) {\n                this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  export default MultiTool;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 1,\n            fixedRatio : \"true\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: width*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 1,\n            fixedRatio : \"true\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: width*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 0,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 0,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"shape\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"shape\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Postit extends Component {\n\n    handlePostitClick(e) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"postit\",\n            subType : \"square\",\n            fixedRatio : \"true\",\n            predefinedColor : 3,\n            styles : {\n                x : (e.clientX*currentState.zoomLevel)+currentState.offsetX,\n                y : (e.clientY*currentState.zoomLevel)+currentState.offsetY,\n                width : 128*currentState.zoomLevel,\n                height: 128*currentState.zoomLevel,\n                fillOpacity: 0,\n                strokeWidth : 2*currentState.zoomLevel\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {};\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"postit\",\n            subType : \"square\",\n            fixedRatio : \"true\",\n            predefinedColor : 3,\n            styles : {\n                x : (e.clientX*currentState.zoomLevel)+currentState.offsetX,\n                y : (e.clientY*currentState.zoomLevel)+currentState.offsetY,\n                width : 128*currentState.zoomLevel,\n                height: 128*currentState.zoomLevel,\n                fillOpacity: 0,\n                strokeWidth : 2*currentState.zoomLevel\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {};\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <Tool type=\"postit\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />    \n        );\n    }\n    \n  }\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"text\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : 240*currentState.zoomLevel,\n                height: (24*1.4)*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 0,\n                strokeWidth : 2*currentState.zoomLevel\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\"\n            },\n            text : \"\"\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"text\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 0,\n                strokeWidth : 2*currentState.zoomLevel\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\"\n            },\n            text : \"\"\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleToolSelect={handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"line\",\n            shapeType : 0,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\",\n                markerEnd : \"url(#arrow)\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"line\",\n            shapeType : 0,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\",\n                markerEnd : \"url(#arrow)\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"line\",\n            shapeType : 1,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\",\n                markerEnd : \"url(#arrow)\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"line\",\n            shapeType : 1,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\",\n                markerEnd : \"url(#arrow)\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"line\",\n            shapeType : 2,\n            styles : {\n                x : currentX,\n                y : currentY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                d : \"\",\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\n\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"line\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"line\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"image\",\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : true\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\n\nimport Slide from \"./slide\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          previousSelectedShapeTool : \"shapeRect\",\n          menuActivated : false\n        };\n    }\n\n    handleToolSelect = (tool) => {\n        if(this.props.currentSelectedTool !== tool) {\n            this.setState({\n                previousSelectedShapeTool : tool\n            });\n            this.props.handleToolSelect(tool);\n        }\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n\n        const autoActivate = {\n            shapeRect : false,\n            shapeCircle : false,\n            shapeTriangle : false\n        };\n\n        if(this.state.menuActivated) {\n            autoActivate[this.state.previousSelectedShapeTool] = true;\n        }\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeRect}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeCircle}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleToolSelect={this.handleToolSelect}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate.shapeTriangle}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type=\"more\" \n                subMenuItems={subMenuTools}\n                openSubMenu={this.props.openSubMenu}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu} \n            />\n                   \n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.openSubMenu !== prevProps.openSubMenu && this.props.openSubMenu === \"more\") {\n            this.setState({menuActivated : true});\n        } else if (this.state.menuActivated) {\n            this.setState({menuActivated : false});\n        }\n    }   \n    \n  }\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\">\n                <div className=\"toolbar\">\n                    <Select \n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleToolSelect={handleToolSelect}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleToolSelect={handleToolSelect}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {Component} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          drawCanvasVisible : false,\n          selectAreaVisible : false,\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    handleDrawCanvasShow = () => {\n        this.setState({drawCanvasVisible : true});\n    }\n\n    handleDrawCanvasHide = () => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        this.props.handleToolSelect(\"pan\");\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n\n    handleShowSelectionArea = (visible, event, dragStartX, dragStartY) => {\n        if(visible) {\n            this.setState({\n                selectAreaVisible : visible,\n                selectAreaPosition : {\n                    x : dragStartX,\n                    y : dragStartY,\n                    width : event.movementX,\n                    height : event.movementY,\n                }\n            });\n        }\n        \n    }\n\n    handleUpdateSelectionArea = (selectionAreaCoords) => {\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n        this.setState({\n            selectAreaPosition : Object.assign({}, this.state.selectAreaPosition, positionUpdate)\n        });\n        \n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.state.drawCanvasVisible) {\n            drawCanvasStyles.display = \"block\";\n        }\n        return (\n            <div className=\"tools\">\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onMouseUp={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n                <Toolbar\n                    handleToolSelect={handleToolSelect} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : true\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24*props.gridSpace.zoomLevel\n      };\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize\n        });\n        // this.setState({\n        //     fontSize : 24*this.props.gridSpace.zoomLevel\n        // });\n    }\n\n    handleKeyPress = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n\n        if(isAutoResize && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            let newFontSize = 0;\n            if(this.state.fontSize > 8*this.props.gridSpace.zoomLevel) {\n                newFontSize = this.state.fontSize - 8*this.props.gridSpace.zoomLevel;\n                \n            } else {\n                newFontSize = this.state.fontSize/2;\n            }\n            this.setState({fontSize : newFontSize});\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize\n        });\n    }\n\n    render() {\n       const {data, gridSpace} = this.props;\n       const styles = {\n           position : \"absolute\",\n           display : \"flex\",\n           alignItems : \"center\",\n           justifyContent : \"center\",\n           visibility: \"hidden\"\n       };\n       let starterText = \"\";\n       let editorKey = \"blank\";\n       if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = componentStyles.height/gridSpace.zoomLevel;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        editorKey=this.props.data.id;\n            \n       }\n        \n        return (\n            <div\n                style={styles}\n                onKeyPress={this.handleKeyPress}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={{\n                        fontSize : this.state.fontSize/this.props.gridSpace.zoomLevel\n                    }}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n        this.textInput.focus();\n        const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n\n        if(moveCaretToEnd && document.createRange) {\n            let range = document.createRange();\n            range.selectNodeContents(this.textInput);\n            range.collapse(false);\n            let selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n\n        // if(this.props.data && this.props.data.unScaledFontSize && this.props.data.unScaledFontSize !== this.state.fontSize) {\n        //     this.setState({fontSize : this.props.data.unScaledFontSize});\n        // }\n        //Can't remember why this was needed.\n   }\n\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      \"#FC72A6\", //pink\n      \"#1B8CA6\", //blue\n      \"#C8DE02\", //green\n      \"#EBE000\", //yellow\n      \"#F2A105\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      property : \"predefinedColor\",\n      value : this.props.colorID\n    })\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"fill\" : color, fillOpacity : newFillOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, fillOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles.fill \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, \"stroke\" : color, strokeOpacity : newStrokeOpacity} \n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeOpacity : e.target.value} \n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeDasharray}\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        property : \"styles\",\n        value : {...this.props.currentStyles, strokeWidth : (e.target.value*this.props.initialZoomLevel)} \n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontWeight\" : newFontWeight}\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"fontStyle\" : newFontStyle}\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, textDecorationLine}\n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          property : \"fontStyle\",\n          value : {...this.props.fontStyle, fontFamily : e.target.value}\n        });\n      }\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"left\"}\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"right\"}\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        property : \"fontStyle\",\n        value : {...this.props.fontStyle, \"textAlign\" : \"center\"}\n      });\n    }\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${leftSelected}`} onClick={this.handleLeftChange}>\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${centerSelected}`} onClick={this.handleCenterChange}>\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div className={`editor_subMenu_icon ${rightSelected}`} onClick={this.handleRightChange}>\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n  }\n\n  render() {\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring forward\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send backwards\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        isLocked : false\n      };\n    }\n\n    handleToggleLock = () => {\n      this.setState({isLocked : !this.state.isLocked});\n    }\n\n    render() {\n        \n      const {isLocked} = this.state;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      \n      this.props.handleUpdateElementProperty({\n        property : \"imgURL\",\n        value : e.target.value\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.imgURL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"fontStyle\", /* \"link\", */ \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textAlignment\", /* \"link\", */ \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textAlignment\", /* \"link\", */ \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements[0].id;\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    render() {\n\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = multiElementEditableFeatures;\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link key={`${selectedElements[0].id}_${button}`}/>;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'lock':\n                        return <ElementLocker key={`${selectedElements[0].id}_${button}`} />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    imgURL={selectedElements[0].imgURL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    newElementsData[item.id].styles.width += e.movementX*currentState.zoomLevel;\n                    newElementsData[item.id].styles.height += e.movementX*currentState.zoomLevel;\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                let elementID = selectedElements[0].id;\n                newElementsData[elementID].styles.width += e.movementX*currentState.zoomLevel;\n                newElementsData[elementID].styles.height += e.movementX*currentState.zoomLevel;\n            } else if(selectedElements.length === 1) {\n                let elementID = selectedElements[0].id;\n                newElementsData[elementID].styles.width += e.movementX*currentState.zoomLevel;\n                newElementsData[elementID].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            this.setState({newState});\n        }\n        \n    }\n\n    render() {\n        const { boundingBox, isVisible } = this.props;\n\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n           \n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItems = Object.keys(this.state.elementState).filter(item => {\n            if(this.state.elementState[item].selected) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItems.length) {\n            selectedItems.forEach(element => {\n                newElementsData[element].styles.x += e.movementX*zoomLevel;\n                newElementsData[element].styles.y += e.movementY*zoomLevel;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        const currentSelectedElements = this.props.selectedElementKeys,\n              prevSelectedElements = prevProps.selectedElementKeys;\n\n        const removedElements = prevSelectedElements.filter(element => {\n            if(currentSelectedElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentSelectedElements.filter(element => {\n            if(prevSelectedElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragMoveHandler\" : this.updateElementDragPosition\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition\n        });\n    }\n}\n\nexport default ElementDrag;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(this.props.fileName);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\n\nclass Navbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    saveToBrowser = (e) => {\n        const { applicationState } = this.props;\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationCache.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = window.localStorage.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(`miralFile_${fileName}`);\n        const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n        this.props.handleUpdateElementsAndState(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const { applicationState } = this.props;\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationCache.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.props.handleUpdateElementsAndState(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Your company name</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToBrowser}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                    </svg>\n                                    <span>Save to Browser</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.getSavedFromBrowser}\n                                >\n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                        <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                    </svg>\n                                    <span>Load from Browser</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : []\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState} \n        };\n  \n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n        \n        const newCombinedData = {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState} \n        };\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevCombinedData = {\n            elements : prevProps.elements,\n            elementState : prevProps.elementState \n        };\n        const currentCombinedData = {\n            elements : this.props.elements,\n            elementState : this.props.elementState \n        };\n        const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n        const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n        \n        if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0 && this.props.storeUndo) {\n            this.setState({\n                undo : [...this.state.undo, elementsDiffUndo],\n                updates : [...this.state.updates, elementsDiffUpdates]\n            });\n            this.props.handleUpdateElementsAndState({storeUndo : false})\n        }\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {Component} from 'react';\n\nimport UndoRedo from './undoRedo';\n\nimport './styles.css';\n\n\nclass BoardControls extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <span className={\"iconButton share\"}></span>\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + dir : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        this.setState({\n            dragStartX : e.clientX,\n            dragStartY : e.clientY,\n            dragStartTime : Date.now(),\n            drag : \"mouseDown\",\n            elementID : e.target.id\n        });\n        console.log(e.target);\n    }\n\n    handleMouseMove = (e) => {\n        if(this.state.drag === \"mouseDown\" || this.state.drag === \"dragging\") {\n            let wasFirstDrag = false;\n            const dragHandlers = this.props.dragHandlers[this.state.elementID];\n            if(this.state.drag === \"mouseDown\") {\n                wasFirstDrag = true;\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, this.state.dragStartX, this.state.dragStartY, e.movementX, e.movementY);\n                }\n               \n            }\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragMove && !wasFirstDrag) {\n                dragHandlers.handleDragMove(e, this.state.dragStartX, this.state.dragStartY);\n            }\n        }\n    }\n\n    handleMouseUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const interactionMovement = (this.state.dragStartX+this.state.dragStartY)-(e.clientX+e.clientY);\n        const wasProbablyClick = (interactionMovement > -5 && interactionMovement < 5) && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd();\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    render() {\n\n        const styles={\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\"\n        }\n        \n        return (\n            <div\n                style={styles}\n\n                onMouseDown={this.handleMouseDown}\n                onMouseMove={this.handleMouseMove}\n                onMouseUp={this.handleMouseUp}\n                onWheel={this.handleZoom}\n                id=\"interActionManager\"\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {Component} from 'react';\n\n\nclass KeyboardManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        if(e.key === \"Backspace\" && this.props.textEditor === null && e.target.tagName !== \"INPUT\") {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        \n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleSelect = (e) => {\n        const isMultiSelect = e.metaKey;\n        this.props.handleSetCurrentElement(this.props.data.id, true, isMultiSelect);\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                fontSize : `${(shapeProps.fontSize)}px`,\n                lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onClick={this.handleSelect}\n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleSelect = (e) => {\n        const isMultiSelect = e.metaKey;\n        this.props.handleSetCurrentElement(this.props.data.id, true, isMultiSelect);\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(shapeProps.strokeWidth/2)}px dashed #5086F2`};\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                fontSize : `${shapeProps.fontSize}px`,\n                lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n                padding : `${data.padding}px`,\n                width : \"100%\"\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n        \n        return (\n            <g \n                onClick={this.handleSelect}\n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.handleTextEdit();\n        }, 300);\n        \n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../theme-context';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleSelect = (e) => {\n        const isMultiSelect = e.metaKey;\n        this.props.handleSetCurrentElement(this.props.data.id, true, isMultiSelect);\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        const postItBaseWidth = 800;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(shapeProps.strokeWidth/2)}px dashed #5086F2`};\n        }\n        if(data.text) {\n            const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n            });\n            const fontStyle = {\n                ...data.fontStyle,\n                fontSize : `${shapeProps.fontSize}px`,\n                lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n                padding : `${data.padding}px`\n            };\n            text = (\n                <foreignObject\n                    className=\"svg_textContainer_foreignObject\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                >\n                    <div\n                        className=\"svg_textContainer\"\n                    >\n                        <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n                    </div>\n                    \n                </foreignObject>\n            );\n        }\n\n        const postItShapeData = postItShapeTypes[(elementState.shapeType || 0)],\n              postItColor = data.predefinedColor;\n\n        \n        return (\n            <g \n                onClick={this.handleSelect}\n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.width}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                    height={shapeProps.width}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    <path \n                        d={postItShapeData.dropShadow} \n                        fill=\"rgba(0,0,0, 0.4)\" \n                        filter={`url(#${postItShapeData.filter})`}\n                    />\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Line extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleSelect = (e) => {\n        const isMultiSelect = e.metaKey;\n        this.props.handleSetCurrentElement(this.props.data.id, true, isMultiSelect);\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         fontSize : `${(shapeProps.fontSize)}px`,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onClick={this.handleSelect}\n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Image extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleSelect = (e) => {\n        const isMultiSelect = e.metaKey;\n        this.props.handleSetCurrentElement(this.props.data.id, true, isMultiSelect);\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        }\n            \n        const imgStyle = {\n            backgroundImage : `url(${data.imgURL})`,\n            backgroundRepeat : \"no-repeat\",\n            backgroundSize : \"contain\",\n            backgroundPosition : \"0 0\",\n            width : \"100%\"\n        };\n        image = (\n            <foreignObject\n                className=\"svg_imageContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div\n                    className=\"svg_imageContainer\"\n                    style={imgStyle}\n                />\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onClick={this.handleSelect}\n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n","import React, {Component} from 'react';\n//UI\nimport Tools from './ui/tools';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\n\n//ELEMENTS\nimport Shape from './elements/shape';\nimport Text from './elements/text';\nimport Postit from './elements/postit';\nimport Line from './elements/line';\nimport Image from './elements/image';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone} from './utils';\n\nimport './styles.css';\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        zoomLevel : 100,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false\n      };\n    }\n\n    handlePanStart(e, dragStartX, dragStartY) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((dragStartX+e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((dragStartY+e.movementY)*-zoomLevel)\n        });\n    }\n\n    handlePanMove(e) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel)\n        });\n    }\n  \n    handleToolSelect = (type) => {\n        this.handleDeselectAllElements(); \n        this.setState({\"tool\" : type});\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        newElements[id].text = \"\";\n        this.setState({textEditor : elementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        newElementsData[data.id].text = data.newText;\n        newElementsData[data.id].styles.fontSize = data.fontSize;\n        newElementsData[data.id].unScaledFontSize = data.fontSize;\n        newElementsData[data.id].padding = 8*this.state.zoomLevel;\n        \n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    handleSetCurrentElement = (elementID, selected, isMultiSelect) => {\n        const newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                newElementStateData[item].selected = false;\n            });\n        }\n        newElementStateData[elementID].selected = !newElementStateData[elementID].selected;\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = {...this.state.elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            newElementStateData[item].selected = false;\n        });\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newElementsData = {...this.state.elements};\n        newElementsData[elementID].styles.height = Number(height)*this.state.zoomLevel;\n        this.setState(newElementsData); //HOW DOES THIS WORK?\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement[data.property] = data.value;\n        newElementsData[data.id] = newElement;\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(arrayPosition+1, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(arrayPosition-1, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n        });\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            let isWithinArea = false;\n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea) {\n                newElementsState[element.id].selected = true;\n            } else {\n                newElementsState[element.id].selected = false;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n\n        const newElements = {...elements};\n        const newElementsState = {...elementState};\n        const selectedElements = [];\n\n        Object.keys(elementState).forEach(element => {\n            if(elementState[element].selected) {\n                selectedElements.push(elements[element]);\n            }\n        });\n\n        const duplicatesOffsetMargin = 8;\n\n        const duplicatesOffsetPosition = {\n            x : selectedElements[0].styles.x,\n            x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n        };\n\n        //get position for new duplicate elements\n        selectedElements.forEach(element => {\n            if(element.styles.x < duplicatesOffsetPosition.x) {\n                duplicatesOffsetPosition.x = element.styles.x;\n            }\n            const elementX1 = element.styles.x + element.styles.width;\n            if(elementX1 > duplicatesOffsetPosition.x1) {\n                duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n            }\n        });\n\n        //duplicate elements & state\n        selectedElements.forEach(element => {\n            const newID = Shortid.generate();\n            const duplicateElement = objectClone(element);\n            const duplicateElementState = objectClone(elementState[element.id]);\n            duplicateElement.id = newID;\n            duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n            newElements[newID] = duplicateElement;\n            newElementsState[newID] = duplicateElementState;\n            //remove selected status for old items\n            newElementsState[element.id].selected = false;\n        });\n\n        this.setState(\n            {\n                elementState : newElementsState,\n                elements : newElements\n            }\n        );\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0\n        };\n    }\n\n    render() {\n        const {width, height} = this.props;\n        const {offsetX, offsetY, zoomLevel, tool, elements, textEditor} = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            if(element.type === \"circle\") {\n                return (<circle\n                            key={element.id} \n                            {...element.styles}\n                            style={{cursor: \"pointer\"}} \n                    />);\n            } else if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    elementState={this.state.elementState[element.id]}\n                    handleTextEdit={this.handleTextEdit}\n                    handleSetCurrentElement={this.handleSetCurrentElement}\n                />);\n            }\n            return null;\n        });\n        const selectedElements = [],\n              selectedElementKeys = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected) {\n                selectedElements.push(this.state.elements[item]);\n                selectedElementKeys.push(item);\n            }\n        });\n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY);\n        const gridPosition = {\n            backgroundPosition : `${(offsetX*-1)/zoomLevel}px ${(offsetY*-1)/zoomLevel}px`\n        };\n        return (\n            <div \n                className={`boardWrapper ${tool}`} \n                style={gridPosition}\n            >\n                <InteractionManager\n                    offsetX={this.state.offsetX}\n                    offsetY={this.state.offsetY}\n                    zoomLevel={this.state.zoomLevel}\n                    updateBoardPosition={this.updateBoardPosition}\n                    updateDragPosition={this.updateDragPosition}\n                    dragHandlers={this.state.dragHandlers}\n                >\n                    <svg id=\"board\" \n                        width={`${width}px`}\n                        height={`${height}px`}\n                        viewBox={viewBox}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseMove={this.handleMouseMove}\n                        onMouseUp={this.handleMouseUp}\n                        >\n                        <defs>\n                            <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                            </filter>\n                            <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                            </filter>\n                            <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                            </marker>\n                        </defs>\n                        <ElementDrag \n                            boundingBox={boundingBox}\n                            selectedElementKeys={selectedElementKeys}\n                            registerDragHandler={this.registerDragHandler}\n                            removeDragHandler={this.removeDragHandler}\n                        />\n                        {elementNodes}\n                    </svg>\n                    <Resizer \n                        isVisible={(selectedElements.length > 0)}\n                        registerDragHandler={this.registerDragHandler}\n                        boundingBox={boundingBox}\n                    />\n                    <NavBar \n                        applicationState={this.state}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                    />\n                    <Altimeter zoomLevel={zoomLevel} />\n                    <BoardControls\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        storeUndo={this.state.storeUndo}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        boardName={this.state.boardName}\n                        updateBoardName={this.updateBoardName}\n                    />\n                    <TextEditor \n                        data={textEditor}\n                        gridSpace={{offsetX, offsetY, zoomLevel}}\n                        handleUpdatedText={this.handleUpdatedText}\n                        handleSetElementHeight={this.handleSetElementHeight}\n                    />\n                    <ElementEditor \n                        selectedElements={selectedElements}\n                        gridSpace={{offsetX, offsetY, zoomLevel}}\n                        handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleShiftElementPosition={this.handleShiftElementPosition}\n                        boundingBox={boundingBox}\n                    />\n                    <Tools\n                        handleToolSelect={this.handleToolSelect} \n                        registerDragHandler={this.registerDragHandler}\n                        removeDragHandler={this.removeDragHandler}\n                        handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                        currentSelectedTool={this.state.tool}\n                    />\n                </InteractionManager>\n                <KeyboardManager \n                    handleDeleteElements={this.handleDeleteElements}\n                    handleDuplicateElements={this.handleDuplicateElements}\n                    textEditor={textEditor}\n                />\n            </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            //\"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height : window.innerHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width : window.innerWidth,\n      height : window.innerHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <div className=\"App\">\n            <Board width={width} height={height} />\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}