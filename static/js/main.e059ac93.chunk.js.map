{"version":3,"sources":["board/context/tools.js","board/ui/tools/toolbar/tool.js","board/ui/tools/toolbar/select.js","board/ui/tools/toolbar/multiTool.js","board/ui/tools/toolbar/utils.js","board/ui/tools/toolbar/shapeCircle.js","board/ui/tools/toolbar/shapeRect.js","board/ui/tools/toolbar/shapeTriangle.js","board/ui/tools/toolbar/shape.js","board/ui/tools/toolbar/postit_square.js","board/ui/tools/toolbar/postit_rect.js","board/ui/tools/toolbar/postit_rect_v.js","board/ui/tools/toolbar/postit.js","board/ui/tools/toolbar/text.js","board/ui/tools/toolbar/lineStraight.js","board/ui/tools/toolbar/lineSmooth.js","board/ui/tools/toolbar/lineStraight_arrow.js","board/ui/tools/toolbar/lineSmooth_arrow.js","board/ui/tools/toolbar/lineFreehand.js","board/ui/tools/toolbar/line.js","board/ui/tools/toolbar/emoji.js","board/ui/tools/toolbar/emojis.js","board/ui/tools/toolbar/image.js","board/ui/tools/toolbar/slide.js","board/ui/tools/toolbar/link.js","board/ui/tools/toolbar/pdf.js","board/ui/tools/toolbar/iframe.js","board/ui/tools/toolbar/youtube.js","board/ui/tools/toolbar/timer.js","board/ui/tools/toolbar/poll.js","board/ui/tools/toolbar/dice.js","board/ui/tools/toolbar/more.js","board/ui/tools/toolbar/index.js","board/ui/tools/index.js","board/ui/tools/drawCanvas.js","board/ui/altimeter/index.js","board/ui/textEditor/index.js","theme-context.js","board/ui/elementEditor/editors/predefinedColorPicker/index.js","board/ui/elementEditor/editors/customColorPicker/index.js","board/ui/elementEditor/editors/customBorderColorPicker/index.js","board/ui/elementEditor/editors/borderStyle/index.js","board/ui/elementEditor/editors/textFormat/index.js","board/ui/elementEditor/editors/fontStyle/index.js","board/ui/elementEditor/editors/textAlignment/index.js","board/ui/elementEditor/editors/link/index.js","board/ui/elementEditor/editors/depthSetter/index.js","board/ui/elementEditor/editors/elementLocker/index.js","board/ui/elementEditor/editors/elementDeleter/index.js","board/ui/elementEditor/editors/elementEditorMenu/index.js","board/ui/elementEditor/editors/url/index.js","board/ui/elementEditor/editors/elementVisibility/index.js","board/ui/elementEditor/editors/elementGroup/index.js","board/ui/elementEditor/index.js","board/ui/resizer/index.js","board/ui/elementDrag/index.js","board/utils.js","board/utils-svg2png.js","board/ui/navbar/index.js","board/ui/boardControls/share.js","board/ui/boardControls/undoRedo.js","board/ui/boardControls/index.js","board/ui/InteractionManager/index.js","board/ui/KeyboardManager/index.js","board/ui/MultiUserManager/avatar.js","board/ui/MultiUserManager/cursor.js","board/ui/MultiUserManager/credentials.js","board/ui/MultiUserManager/index.js","board/ui/slideNavigator/index.js","board/ui/hub/index.js","board/elements/shared/visibilityOverlay.js","board/elements/shared/wrappedText.js","board/elements/shape/index.js","board/elements/text/index.js","board/elements/postit/index.js","board/elements/line/index.js","board/elements/image/index.js","board/elements/slide/index.js","board/elements/link/index.js","board/elements/youtube/index.js","board/elements/emoji/index.js","board/elements/dice/index.js","board/elements/index.js","board/pattern.js","board/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","tool","currentOpenSubMenu","autoActivate","previousSelectedTools","selectAreaVisible","selectAreaPosition","x","y","width","height","store","createContext","Provider","ToolsProvider","Consumer","children","useReducer","state","action","newState","type","data","subMenu","defaultTool","Error","dispatch","value","Tool","props","context","handleToolSelect","e","handleDeselectAllElements","registerDragHandler","handleDragStart","handleDragMove","handleDragEnd","handleClick","this","currentSelectedTool","isSelectedCSS","className","onClick","content","Component","contextType","Select","handleSelectStart","dragStartX","dragStartY","movementX","movementY","setState","x1","y1","handleSelectMove","selectionAreaCoords","positionUpdate","Object","assign","handleSelectEnd","selectionArea","handleSelectElementsWithinArea","handleDrawCanvasShow","MultiTool","handleToggleSubMenu","stopPropagation","toolSubMenuOpen","submenuCSS","subMenuItems","subMenuItemColumns","counter","columnCounter","forEach","item","push","toolbarIcon","noIconChange","map","column","i","key","createElementBaseObject","id","initialZoomLevel","styles","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","strokeDasharray","fontStyle","fontSize","fontFamily","fontWeight","textDecorationLine","color","textAlign","alignItems","text","link","hidden","groups","locked","comments","rotation","flipped","ShapeCircle","currentState","elements","newID","Shortid","generate","zoomLevel","newElement","shapeType","fixedRatio","offsetX","presetWidth","offsetY","elementState","selected","userID","storeUndo","removeDragHandler","elementBeingDrawn","handleShapeClick","handleShapeDragStart","ShapeRect","ShapeTriangle","Shape","subMenuType","subMenuTools","handleSetCurrentOpenSubMenu","PostitSquare","subType","predefinedColor","fontSizeAuto","widthAndHeight","Math","floor","random","handlePostitClick","handlePostitDragStart","PostitRect","PostitRectV","Postit","Text","handleTextClick","handleTextDragStart","LineStraight","LineStraightArrow","markerEnd","lineSmoothArrow","currentX","currentY","d","pathBuffer","smoothingLevel","currentPath","getAveragePoint","offset","buffer","len","length","pt","totalX","totalY","count","newElementGraph","newElementState","newPath","tmpPath","getUpdatedSvgPath","currentElementState","clientX","clientY","shift","getUpdatedPointsBuffer","Line","Emoji","presetWidthAndHeight","emojiCharacterCode","window","workshoppr","emojiCharacter","dragStartHandler","dragMoveHandler","dragEndHandler","clickHandler","Emojis","String","fromCodePoint","toString","target","emojiEntity","uglyHack","Image","URL","Slide","slideName","handleSlideClick","handleSlideDragStart","Link","handleLinkClick","handleLinkDragStart","PDF","alert","Iframe","Youtube","Timer","Poll","Dice","randomNumber","randomDiceNumber","diceNumber","More","Toolbar","openSubMenu","newStyles","multiplier","handleShowSelectionArea","handleUpdateSelectionArea","handleElementDragMove","prevProps","prevState","Tools","PureComponent","DrawCanvas","handleDrawCanvasHide","drawCanvasVisible","selectAreaStyle","display","transform","drawCanvasStyles","style","onPointerUp","Altimeter","ELEMENT_TYPE_PROPERTIES","isExpandToFit","isAutoResize","shape","postit","TextEditor","handleLostFocus","handleUpdatedText","newText","textInput","innerText","textContent","trim","gridSpace","sizeChecker","textIsTooLarge","textContainer","scrollHeight","clientHeight","textIsTooSmall","newFontSize","elementHeight","handleSetElementHeight","handlePaste","event","preventDefault","document","execCommand","clipboardData","getData","handleGotFocus","sizeCheckerInterval","nextProps","nextState","needsUpdateData","needsUpdateFont","needsUpdateLayout","position","justifyContent","visibility","borderTop","textStyles","starterText","editorKey","componentStyles","cx","cy","top","left","overflow","split","line","ref","container","contentEditable","input","onBlur","onFocus","onPaste","suppressContentEditableWarning","setTimeout","focus","createRange","range","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","setInterval","clearInterval","themes","light","preDefinedColors","primaryColors","fontColors","dark","ThemeContext","React","PredefinedColorOption","handleSelectColor","handleUpdateElementProperty","update","colorID","backgroundColor","PredefinedColorPicker","handleOpenSubMenu","subMenuOpen","theme","selectedColor","fillColor","title","CustomColorOption","handleUpdateColor","TransparentColorOption","handleOpacityChange","border","CustomColorPicker","newFillOpacity","currentStyles","name","min","max","step","onChange","CustomBorderColorOption","TransparentBorderColorOption","CustomBorderColorPicker","newStrokeOpacity","borderColor","BorderStyle","handleSolidChange","handleDashedChange","handleDottedChange","handleWidthChange","solidSelected","dashedSelected","dottedSelected","computedStrokeWidth","ceil","xmlns","viewBox","TextFormat","handleBoldChange","newFontWeight","handleItalicChange","newFontStyle","handleUnderlineChange","indexOf","replace","handleStrikeThroughChange","boldSelected","italicSelected","underlineSelected","strikeThroughSelected","FONT_FAMILIES","FontStyle","handleFontChange","handleSizeChange","font","round","CenterIcon","iconColor","LeftIcon","RightIcon","AlignTopIcon","AlignCenterIcon","AlignBottomIcon","TextAlignment","handleLeftChange","handleRightChange","handleCenterChange","handleAlignTop","handleAlignCenter","handleAlignBottom","leftSelected","centerSelected","rightSelected","topAlignSelected","centerAlignSelected","bottomAlignSelected","currentIcon","handleLinkChange","list","getSlides","slide","DepthSetter","handleBringForward","handleShiftElementPosition","ids","handleSendBackward","isForward","ElementLocker","handleToggleLock","isLocked","opacity","ElementDeleter","handleDeleteElements","ElementEditorMenu","handleURLChange","ElementVisibility","isHidden","ElementGroup","areElementsAlreadyGrouped","areGrouped","lastGroup","element","handleToggleGroup","remove","shapeTypeEditableFeatures","multiElementEditableFeatures","ElementEditor","selectedElements","handleKeyPress","isTextBox","textEditor","tagName","getAttribute","ctrlKey","metaKey","handleDuplicateElements","containerPosition","boundingBox","containerClass","editButtonTypes","editButtons","selectedIDs","areAllShapes","unshift","halfEditorWidth","button","options","halfElementWidth","finalLeft","finalTop","Guides","hideGuides","leftGuideVisible","rightGuideVisible","topGuideVisible","bottomGuideVisible","hideGuidesTimeout","leftGuideStyles","rightGuideStyles","topGuideStyles","bottomGuideStyles","movingRight","movingLeft","resizingWidth","movingUp","movingDown","resizingHeight","clearTimeout","keys","Resizer","newElementsData","calculateSelectedElementsBoundingBox","xPercentageIncrease","rawWidth","yPercentageIncrease","rawHeight","newElementStyles","relativeXOffset","rawX","relativeYOffset","rawY","fontStyleIncreaseMultiplier","isVisible","wrapperStyles","resizerStyles","highlightBoxPosition","elementHighlightStyles","r","cursor","handleMouseMove","handleResizeEnd","ElementDrag","elementID","isMultiSelect","handleSetCurrentElement","console","log","selectedElementIds","getSelectedElements","selectedItemKeys","filter","isSelected","elementKeys","currentElements","prevElements","removedElements","addedElements","handleElementDragStart","updateElementDragPosition","handleElementDragEnd","handleSelect","objectClone","obj","clone","subPropertyKey","Array","isArray","concat","createNewObjectsForChangedElements","newData","patch","change","changePath","path","isObjectAndNotNull","updateDocumentTitle","newTitle","replaceAsync","str","regex","asyncFn","a","promises","match","args","promise","Promise","all","getBase64FromUrl","group1","url","group2","proxiedURL","encodeURIComponent","fetch","blob","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","getSvgUrl","svg","createObjectURL","Blob","svgUrlToPng","svgUrl","callback","svgImage","onload","canvas","createElement","canvasCtx","getContext","newHeight","naturalWidth","naturalHeight","verticalOffset","drawImage","imgData","toDataURL","src","cleanSVG","finalSVG","svgToPng","revokeObjectURL","ExportSVG","ExportPNG","ExportTemplate","FileOption","loadFile","fileName","onDoubleClick","handleDblClick","Navbar","exportAsPNG","applicationState","getState","getRawSVG","windowWidth","windowHeight","modData","evt","MouseEvent","view","bubbles","cancelable","setAttribute","boardName","dispatchEvent","menuVisible","savePreviewImage","reject","exportAsSVG","rawSVGWithoutForeignObject","file","href","download","click","handleOpenMenu","autoSave","deselectElements","stateToSave","localStorage","setItem","JSON","stringify","removeItem","saveToBrowser","then","preview","previewImage","saveToFile","exportAsTemplate","loadFileFromBrowser","getItem","dataToLoad","parse","loadNewBoard","fileInput","accept","onchange","files","readAsText","getSavedFromBrowser","deleteFile","deleteFileFromLocalStorage","saveToMonday","monday","mondaySdk","storage","instance","Date","getHours","getMinutes","request","checkFileList","getSavedFromMonday","loadFileFromMonday","handleUpdateElementsAndState","newFile","userConfirmation","confirm","blankState","dragHandlers","toLocaleDateString","loadTemplatesAndTutorials","exportAs","mondaySaveAvailable","newElementStateData","menuCSS","letFirstMenuHidden","ry","rx","location","ancestorOrigins","server","Share","handleOpenShareMenu","handleShareBoard","initials","securityCode","boardID","removeDifficultCharactersToReadForPeople","hash","sessionActive","toggleBoardShare","handleCopyToClipBoard","newClip","navigator","clipboard","writeText","handleNameUpdate","handleNameBoardID","handleInitalsUpdate","handleSecurityCodeUpdate","handleJoinBoard","joinBoard","organisation","iconAnimation","iconFillColor","placeholder","defaultValue","companyName","rfc6902","require","UndoRedo","handleUndo","newUndo","undo","newUpdates","updates","lastUndoAction","pop","lastUpdateAction","newRedo","redo","newCombinedData","applyPatch","handleRedo","lastRedoAction","prevCombinedData","undoIsPossible","redoIsPossible","undoRedoStyles","redoStyles","pointerEvents","undoStyles","currentCombinedData","elementsDiffUpdates","createPatch","elementsDiffUndo","addEventListener","removeEventListener","BoardControls","handleEditBoardName","editBoardName","handleBlur","updateBoardName","InteractionManager","handleMouseWheel","handleZoom","simulatedPanEvent","deltaX","deltaY","handlePanMove","dir","sign","nextZoomLevel","currentCursorPositionX","currentCursorPositionY","newOffsetX","newOffsetY","updateBoardPosition","handlePointerDown","drag","dragStartTime","now","pointers","SAFARIHACK_SCREENX","screenX","SAFARIHACK_SCREENY","screenY","pointerId","handlePointerMove","handleSinglePointerMove","handleMultiPointerMove","updatePointerPosition","wasAccidentalMovement","wasStartOfDrag","wasMiddleOfDrag","previousE","newPointers","dist","hypot","highestX","lowestX","highestY","lowestY","delta","previousPinchZoomDistance","handlePointerUp","handleSinglePointerUp","handleMultiPointerUp","interactionTime","wasProbablyClick","containerElement","interactionMovement","touchAction","onPointerDown","onPointerMove","passive","KeyboardManager","copy","cut","paste","shuntSelectedElements","Avatar","wrapperCSS","Cursor","animateMouse","prevX","prevY","cursorRef","current","animate","easing","duration","createRef","cursorAnimation","lastUpdate","pointerPosition","Credentials","handleNicknameUpdate","handleBoardIDUpdate","handleSubmitCredentials","creds","setJoinCreds","cancelJoinCreds","colors","HOST","MultiUserManager","getJoinCreds","requestCreds","setupJoinBoardSocketConnection","setupShareBoardSocketConnection","meetingData","socket","io","on","shareBoard","connectionFailed","userJoin","userLeft","updatePointer","updateBoard","isParticipant","initializeBoard","shareEnded","owner","boardContents","emit","purgeEmitQueue","checkBoardForUpdates","error","disconnect","boardError","user","hideErrorScreen","boardData","boardUsers","users","newBoardUsers","newBoardUser","userData","prevCombinedBoardData","reason","addToEmitQueue","payload","emitQueue","lastItem","userDockItems","userCursors","containerStyles","boardUser","isInSharedMeeting","mouseMoved","SlideListItem","handleToggleEditMode","editMode","handleJumpToSlide","slideID","slideNumber","handleSlideNameChange","changeSlideName","SlideNavigator","handleSlideForward","currentSlide","nextSlide","slides","nextSlideID","animateToElement","handleSlideBackwards","toggleSlideList","slideNav","slidesNavStyles","slideBackwardsDisabled","slideForwardsDisabled","slideNavVisible","slideNavIcon","slideNames","Item","TutorialTrigger","Home","getSavedBoards","alt","savedBoards","Templates","Hub","hideHub","hubVisible","switchTab","currentTab","from","parentNode","visibleClass","sectionStyles","VisibilityOverlay","shapeProps","iconSize","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","WrappedText","calculateWordLength","createElementNS","textSizeTester","appendChild","body","wordLengths","textBlock","wordsInBlock","word","innerHTML","textSize","getComputedTextLength","removeChild","newLines","textBlockIterator","lines","lineLength","wordIterator","padding","wrappedText","textXAndPadding","textWidthMinusPadding","textYAndPadding","areaHeightMinusPadding","textAnchor","textAnchorPosition","textBlockHeight","textBaseline","textBaseLinePosition","dominantBaseline","letterSpacing","userSelect","dy","handleTextEdit","overlay","outlineWidth","triangleStart","triangleMid","triangleEnd","points","ElementText","outline","isUniqueSelected","postItShapeTypes","dropShadow","postItRectShapeTypes","postItRectVShapeTypes","lowDetail","postItBaseWidth","shadow","postItShapeData","postItColor","x2","y2","handleCrop","image","background","lineHeight","slideTitle","realURL","loadRemoteBoard","open","linkHitArea","checkFocus","activeElement","currentFocus","disableInteraction","handlePlayIntent","iframePointerEvents","iframe","contentWindow","hitArea","playArea","iframeOpacity","youtubeURL","exec","frameBorder","allow","allowFullScreen","transformOrigin","emoji","textLength","handleDiceClick","generateRandomDiceNumber","diceAnimation","audio","Audio","dice","diceNumberToUse","diceCoords","intervalCount","play","interval","Elements","elementNodes","fontStyles","Pattern","widthHeight","patternTransform","patternUnits","Board","handlePanStart","clearCanvasAnimations","panEventTimeStamp","velocityX","velocityY","currentTimeStamp","elapsedTime","velocityX_pixelsPerMilliSecond","velocityY_pixelsPerMilliSecond","heightZoomLevel","widthZoomLevel","elementData","elementHeightInReal","elementWidthInReal","finalZoomLevel","elementCenterPointX","elementCenterPointY","finalPosition","animateToPosition","canvasAnimations","animation","newElements","prevElementData","unScaledFontSize","selectGroupedElements","group","groupedElement","newSelectedElement","newDragHandlers","newHandlers","bind","Number","mergeObjects","primaryObject","mergeObject","mergedObject","removeData","itemToRemove","newElementsState","newIdsOrder","arrayPosition","splice","realSpaceX","realSpaceY","realSpaceX1","realSpaceY1","isSelectable","isWithinArea","duplicatesOffsetPosition","elementX1","newDuplicateElements","duplicateElement","duplicateElementState","allPreviousGroupIDs","newDuplicateElement","oldGroup","newGroups","newGroupID","newBoardName","coOrds","selectedCount","slideKey","newName","newSlideElement","direction","pasteBuffer","newX","newY","resp","json","catch","XMLSerializer","serializeToString","SVGElementRef","multiUserUpdate","stepCount","valueIncrementX","valueIncrementY","valueIncrementZoom","sinValueIncrement","PI","currentValueX","currentValueY","currentZoomLevel","currentSinValue","sin","time","newZoomLevel","incrementDelay","combinedWidth","combinedHeight","itemWidth","itemHeight","itemX","itemY","itemCX","itemCY","zoomedWidth","zoomedHeight","percentageGridSize","backgroundGridSize","gridSizeMax","backgroundPositionY","gridPosition","in","stdDeviation","ddx","markerWidth","markerHeight","refX","refY","orient","markerUnits","keyboardHandlers","handlePanEnd","isNotFirstUse","isNotShare","App","handleWindowResize","clientWidth","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e059ac93.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nconst initialState = {\n  tool : null,\n  currentOpenSubMenu : null,\n  autoActivate : null,\n  previousSelectedTools : {},\n  selectAreaVisible : false,\n  selectAreaPosition : {\n    x : 0,\n    y : 0,\n    width : 0,\n    height : 0,\n  }\n};\n\nconst store = createContext(initialState);\nconst { Provider, Consumer } = store;\n\nconst ToolsProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    const newState = {...state};\n    switch(action.type) {\n      case 'activateTool':\n        newState.tool = action.data.tool;\n        if(state.currentOpenSubMenu) {\n          newState.previousSelectedTools[state.currentOpenSubMenu] = action.data.tool;\n        }\n        return newState;\n      case 'activateSubMenu':\n        newState.currentOpenSubMenu = action.data.subMenu;\n        if(newState.previousSelectedTools[newState.currentOpenSubMenu] && action.data.subMenu !== null) {\n          newState.autoActivate = newState.previousSelectedTools[newState.currentOpenSubMenu];\n        } else if (action.data.defaultTool) {\n          newState.autoActivate = action.data.defaultTool;\n        }\n        return newState;\n      case 'resetToolbar':\n        newState.tool = null;\n        newState.currentOpenSubMenu = null;\n        newState.autoActivate = null;\n        return newState;\n      case 'resetAutoActivate':\n        newState.autoActivate = null;\n        return newState;\n      case 'activateSelectArea':\n        newState.selectAreaVisible = true;\n        newState.selectAreaPosition = action.data.selectAreaPosition;\n        return newState;\n      case 'updateSelectArea':\n        newState.selectAreaPosition = action.data.selectAreaPosition;\n        return newState;\n      case 'resetSelectArea':\n        newState.selectAreaVisible = false;\n        newState.selectAreaPosition = initialState.selectAreaPosition;\n        return newState;\n      default:\n        throw new Error();\n    };\n  }, {...initialState});\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nconst ToolsConsumer = Consumer;\n\nexport { store, ToolsProvider, ToolsConsumer };","import React, {Component} from 'react';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nclass Tool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n    }\n  \n    handleToolSelect = (e) => {\n        this.context.dispatch({type : \"activateTool\", data : {tool : this.props.type}});\n        this.props.handleDeselectAllElements();\n        this.props.registerDragHandler(\"drawCanvas\", {\n            \"dragStartHandler\" : this.props.handleDragStart,\n            \"dragMoveHandler\" : this.props.handleDragMove,\n            \"dragEndHandler\" : this.props.handleDragEnd,\n            \"clickHandler\" : this.props.handleClick\n        });\n    }\n\n    render() {\n\n        const {\n            currentSelectedTool,\n            type\n        } = this.props;\n        \n        let isSelectedCSS = \"\";\n\n        if(type === currentSelectedTool) {\n            isSelectedCSS = \"toolbar_tool_selected\";\n        }\n\n        return (\n            <div \n                className={`toolbar_tool toolbar_${this.props.type} ${isSelectedCSS}`}\n                onClick={this.handleToolSelect}\n            >{(this.props.content || null)}</div>\n        );\n    }\n\n    componentDidUpdate() {\n\n        if(this.context.state.autoActivate === this.props.type) {\n            this.handleToolSelect();\n            this.context.dispatch({type : \"resetAutoActivate\"});\n        }\n\n    }\n    \n  }\n\n\n  Tool.contextType = store;\n\n  export default Tool;","import React, {Component} from 'react';\nimport Tool from './tool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\n\nclass Select extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          x : 0,\n          y : 0,\n          x1 : 0,\n          y1 : 0\n        };\n    }\n\n    handleSelectStart = (e, dragStartX, dragStartY) => {\n        this.context.dispatch(\n            {\n                type : \"activateSelectArea\", \n                data : {\n                    selectAreaPosition : {\n                        x : dragStartX,\n                        y : dragStartY,\n                        width : e.movementX,\n                        height : e.movementY,\n                    }\n                }\n            }\n        );\n        \n        this.setState({\n            x : dragStartX,\n            y : dragStartY,\n            x1 : dragStartX,\n            y1 : dragStartY\n        });\n    }\n\n    handleSelectMove = (e) => {\n\n        const selectionAreaCoords = {\n            x : this.state.x,\n            y : this.state.y,\n            x1 : this.state.x1+e.movementX,\n            y1 : this.state.y1+e.movementY\n        };\n\n        const positionUpdate = {\n            width : selectionAreaCoords.x1-selectionAreaCoords.x,\n            height : selectionAreaCoords.y1-selectionAreaCoords.y\n        };\n\n        if(selectionAreaCoords.x > selectionAreaCoords.x1) {\n            positionUpdate.x = selectionAreaCoords.x1;\n            positionUpdate.width = selectionAreaCoords.x-selectionAreaCoords.x1;\n        }\n\n        if(selectionAreaCoords.y > selectionAreaCoords.y1) {\n            positionUpdate.y = selectionAreaCoords.y1;\n            positionUpdate.height = selectionAreaCoords.y-selectionAreaCoords.y1;\n        }\n\n        this.context.dispatch(\n            {\n                type : \"updateSelectArea\", \n                data : {\n                    selectAreaPosition : Object.assign({}, this.context.state.selectAreaPosition, positionUpdate)\n                }\n            }\n        );\n\n        this.setState(selectionAreaCoords);\n    }\n\n    handleSelectEnd = (e) => {\n        const {\n            x,\n            y,\n            x1,\n            y1\n        } = this.state;\n        const selectionArea = {\n            x,\n            y,\n            x1,\n            y1\n        };\n        if(x > x1) {\n            selectionArea.x = x1;\n            selectionArea.x1 = x;\n        }\n        if(y > y1) {\n            selectionArea.y = y1;\n            selectionArea.y1 = y;\n        }\n        this.props.handleSelectElementsWithinArea(selectionArea.x, selectionArea.y, selectionArea.x1, selectionArea.y1);\n        this.context.dispatch(\n            {\n                type : \"resetSelectArea\"\n            }\n        );\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"select\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleSelectStart}\n                handleDragMove={this.handleSelectMove}\n                handleDragEnd={this.handleSelectEnd}\n                currentSelectedTool={currentSelectedTool} \n            />\n        );\n    }\n    \n  }\n\n  Select.contextType = store;\n\n  export default Select;","import React, {Component} from 'react';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nclass MultiTool extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            toolSubMenuOpen : false\n        };\n    }\n  \n    handleToggleSubMenu = (e) => {\n        e.stopPropagation();\n        const {\n            toolSubMenuOpen\n        } = this.state;\n\n        if(toolSubMenuOpen) {\n\n            this.setState({\n                toolSubMenuOpen : false\n            });\n            this.context.dispatch(\n                {\n                    type : \"activateSubMenu\", \n                    data : {\n                        subMenu : null\n                    }\n                }\n            );\n\n        } else {\n\n            this.setState({\n                toolSubMenuOpen : true\n            });\n\n            this.context.dispatch(\n                {\n                    type : \"activateSubMenu\", \n                    data : {\n                        subMenu : this.props.type,\n                        defaultTool : this.props.defaultTool\n                    }\n                }\n            );\n        }\n        \n        \n    }\n  \n    render() {\n\n        let submenuCSS = `toolbar_submenu toolbar_subMenu_${this.props.type}`;\n        if(this.state.toolSubMenuOpen && this.props.subMenuItems) {\n          submenuCSS += \" toolbar_isVisible\";\n        }\n\n        const itemColumnLimit = 5;\n        const subMenuItemColumns = [[]];\n        let counter = 0,\n            columnCounter = 0;\n        this.props.subMenuItems.forEach((item) => {\n            if(counter < itemColumnLimit) {\n                subMenuItemColumns[columnCounter].push(item);\n                counter++;\n            } else {\n                counter = 0;\n                columnCounter++;\n                subMenuItemColumns[columnCounter] = [];\n                subMenuItemColumns[columnCounter].push(item);\n                counter++;\n            }\n        });\n\n        let toolbarIcon = `toolbar_${this.props.type}`;\n\n        if(this.context.state.previousSelectedTools[this.props.type] && !this.props.noIconChange) {\n            toolbarIcon = `toolbar_${this.context.state.previousSelectedTools[this.props.type]}`;\n        }\n\n        return (\n            <div \n                className={`toolbar_tool ${toolbarIcon}`}\n                onClick={this.handleToggleSubMenu}\n            >\n                <div className={submenuCSS}>\n                    <div className={\"leftArrow\"} />\n                    <div className={\"toolbar_submenu_scrollContainer\"}>\n                    {\n                        subMenuItemColumns.map((column, i) => (\n                            <div className=\"toolbar_subMenu_column\" key={`subMenu_column_${i}`}>\n                                {column.map(item => item)}\n                            </div>\n                        ))\n                    }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        const shouldAutoCloseMenu = this.context.state.currentOpenSubMenu !== this.props.type;\n        if(shouldAutoCloseMenu && this.state.toolSubMenuOpen) {\n            this.setState({toolSubMenuOpen : false});\n        }\n    }\n    \n  }\n\n  MultiTool.contextType = store;\n\n  export default MultiTool;","export function createElementBaseObject(id, type, initialZoomLevel) {\n    return {\n        id,\n        type,\n        styles : {\n            x : 0,\n            y : 0,\n            width : 1,\n            height: 1,\n            fillOpacity: 0,\n            fill: \"#ffffff\",\n            stroke : \"#000000\",\n            strokeOpacity : 1,\n            strokeWidth : 2*initialZoomLevel,\n            strokeDasharray : \"0\"\n        },\n        fontStyle : {\n            fontSize : 24*initialZoomLevel,\n            fontFamily : \"sans-serif\",\n            fontWeight : \"normal\",\n            fontStyle : \"normal\",\n            textDecorationLine : \"\",\n            color : \"#080808\",\n            textAlign: \"center\",\n            alignItems : \"center\" \n        },\n        text : \"\",\n        initialZoomLevel,\n        link : \"\",\n        hidden : false,\n        groups : [],\n        locked : false,\n        comments : [], //not yet implemented\n        rotation : 0, //not yet implemented\n        flipped : false //not yet implemented\n    };\n}","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeCircle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidth = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetWidth*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.fixedRatio = \"true\";\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = width*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"shapeCircle\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeCircle;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass ShapeRect extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeRect\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass ShapeTriangle extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 120,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"shape\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = {\n            id : newID,\n            type : \"shape\",\n            shapeType : 2,\n            styles : {\n                x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n                y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n                width : width*currentState.zoomLevel,\n                height: height*currentState.zoomLevel,\n                fillOpacity: 0,\n                fill: \"#ffffff\",\n                stroke : \"#000000\",\n                strokeOpacity : 1,\n                strokeWidth : 2*currentState.zoomLevel,\n                strokeDasharray : \"0\"\n            },\n            fontStyle : {\n                fontSize : 24*currentState.zoomLevel,\n                fontFamily : \"\",\n                fontWeight : \"normal\",\n                fontStyle : \"normal\",\n                textDecorationLine : \"\",\n                color : \"#080808\",\n                textAlign: \"center\" \n            },\n            text : \"\",\n            initialZoomLevel : currentState.zoomLevel\n        };\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"shapeTriangle\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default ShapeTriangle;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nimport ShapeCircle from './shapeCircle';\nimport ShapeRect from './shapeRect';\nimport ShapeTriangle from './shapeTriangle';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n\n        this.subMenuType = \"shape\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <ShapeRect\n                key={\"tool_shapeRect\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <ShapeCircle\n                key={\"tool_shapeCircle\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <ShapeTriangle\n                key={\"tool_shapeTriangle\"} \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                handleSetCurrentOpenSubMenu={this.props.handleSetCurrentOpenSubMenu}\n                defaultTool={\"shapeRect\"}\n            />\n                   \n        );\n    }\n    \n  }\n\n  Shape.contextType = store;\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitSquare extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((widthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const widthAndHeight = 128;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"square\";\n        newElement.fixedRatio = \"true\";\n        newElement.predefinedColor = 3;\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(widthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = widthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitSquare\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitSquare;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRect extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 128,\n              width = 206;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n       \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 168,\n              width = 256;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rect\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRect\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRect;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass PostitRectV extends Component {\n\n    handlePostitClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 200,\n              width =120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handlePostitDragStart(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const height = 200,\n              width =120\n\n        newState.elements[newID] = createElementBaseObject(newID, \"postit\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.subType = \"rectv\";\n        newElement.predefinedColor = 3;\n        newElement.fixedRatio = \"true\";\n        newElement.fontSizeAuto = true;\n        \n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-(width*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(height*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        let min = 0,\n            max = 3;\n        newState.elementState[newID].shapeType = Math.floor(Math.random() * (max - min + 1)) + min;\n        newState.storeUndo = true;\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            autoActivate\n        } = this.props;\n\n        return (\n            <Tool type=\"postitRectV\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handlePostitClick}\n                handleDragStart={this.handlePostitDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n                autoActivate={autoActivate}\n            />    \n        );\n    }\n    \n  }\n\n  export default PostitRectV;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nimport PostitSquare from './postit_square';\nimport PostitRect from './postit_rect';\nimport PostitRectV from './postit_rect_v';\n\nclass Postit extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.subMenuType = \"postit\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <PostitSquare\n                key={\"tool_postitSquare\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <PostitRect\n                key={\"tool_postitRect\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <PostitRectV\n                key={\"tool_postitRectV\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"postitSquare\"}\n            />\n                   \n        );\n    }\n    \n  }\n  \n  Postit.contextType = store;\n\n  export default Postit;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Text extends Component {\n\n    handleTextClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        const presetWidth = 240,\n              fontSize = 24,\n              lineHeight = 1.4,\n              presetHeight = fontSize*lineHeight;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidth/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidth*currentState.zoomLevel;\n        newElement.styles.height = presetHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleTextDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"text\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool\n        } = this.props;\n       \n        return (\n            <Tool type=\"text\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleTextClick}\n                handleDragStart={this.handleTextDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd} \n                currentSelectedTool={currentSelectedTool}\n            />\n        );\n    }\n    \n  }\n\n  export default Text;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraight extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraight\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraight;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmooth\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass LineStraightArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineStraightArrow\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default LineStraightArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass lineSmoothArrow extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 1;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-(presetWidthAndHeight*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.markerEnd = \"url(#arrow)\";\n        \n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"lineSmoothArrow\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default lineSmoothArrow;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Shape extends Component {\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const currentX = (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n              currentY = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n\n        newState.elements[newID] = createElementBaseObject(newID, \"line\", currentState.zoomLevel);\n\n        const newElement = newState.elements[newID];\n        newElement.shapeType = 2;\n        newElement.styles.x = currentX;\n        newElement.styles.y = currentY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeWidth = currentState.zoomLevel;\n        newElement.styles.d = \"\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID,\n            pathBuffer : [],\n            smoothingLevel : 8,\n            currentPath : `M ${currentX} ${currentY}`\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n\n    handleDragMove(e) {\n\n        var getUpdatedPointsBuffer = function(e, currentState, newElementState) {\n            const {\n                zoomLevel,\n                offsetX,\n                offsetY,\n                elementBeingDrawn\n            } = currentState;\n    \n            const currentElementState = newElementState[elementBeingDrawn];\n    \n            const x = (e.clientX*zoomLevel)+offsetX,\n                  y = (e.clientY*zoomLevel)+offsetY;\n    \n            currentElementState.pathBuffer.push({ x, y });\n    \n            while (currentElementState.pathBuffer.length > currentElementState.smoothingLevel) {\n                currentElementState.pathBuffer.shift();\n            }\n            return newElementState;\n        }\n    \n        var getUpdatedSvgPath = function(currentPath, buffer, smoothingLevel) {\n            var pt = getAveragePoint(0, buffer, smoothingLevel);\n            var tmpPath = \"\";\n        \n            if (pt) {\n                // Get the smoothed part of the path that will not change\n                currentPath += \" L\" + pt.x + \" \" + pt.y;\n        \n                // Get the last part of the path (close to the current mouse position)\n                // This part will change if the mouse moves again\n                \n                for (var offset = 2; offset < buffer.length; offset += 2) {\n                    pt = getAveragePoint(offset, buffer, smoothingLevel);\n                    tmpPath += \" L\" + pt.x + \" \" + pt.y;\n                }\n            }\n            return {\n                currentPath,\n                tmpPath\n            };\n        };\n    \n        var getAveragePoint = function(offset, buffer, smoothingLevel) {\n            var len = buffer.length;\n            if (len % 2 === 1 || len >= smoothingLevel) {\n                var totalX = 0;\n                var totalY = 0;\n                var pt, i;\n                var count = 0;\n                for (i = offset; i < len; i++) {\n                    count++;\n                    pt = buffer[i];\n                    totalX += pt.x;\n                    totalY += pt.y;\n                }\n                return {\n                    x: totalX / count,\n                    y: totalY / count\n                }\n            }\n            return null;\n        };\n\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            let newElementState = {...currentState.elementState};\n            newElementGraph[currentState.elementBeingDrawn].styles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n\n            newElementState = getUpdatedPointsBuffer(e, currentState, newElementState);\n\n            const currentPath = newElementState[currentState.elementBeingDrawn].currentPath;\n\n            const currentPathBuffer = newElementState[currentState.elementBeingDrawn].pathBuffer;\n            const smoothingLevel = newElementState[currentState.elementBeingDrawn].smoothingLevel;\n            const newPath = getUpdatedSvgPath(currentPath, currentPathBuffer, smoothingLevel);\n\n            newElementGraph[currentState.elementBeingDrawn].styles.d = newPath.currentPath+newPath.tmpPath;\n            newElementState[currentState.elementBeingDrawn].currentPath = newPath.currentPath;\n            \n            newState.elements = newElementGraph;\n            newState.elementState = newElementState;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n        newState.tool = \"pan\";\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type=\"lineFreehand\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={this.handleDragMove}\n                handleDragEnd={this.handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport LineStraight from \"./lineStraight\";\nimport LineSmooth from \"./lineSmooth\";\nimport LineStraightArrow from \"./lineStraight_arrow\";\nimport LineSmoothArrow from \"./lineSmooth_arrow\";\nimport LineFreehand from \"./lineFreehand\";\n\nimport './styles.css';\n\nclass Line extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.subMenuType = \"line\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <LineStraight\n                key={\"tool_lineStraight\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <LineSmooth\n                key={\"tool_lineSmooth\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <LineStraightArrow\n                key={\"tool_lineStraightArrow\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <LineSmoothArrow\n                key={\"tool_lineSmoothArrow\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <LineFreehand\n                key={\"tool_lineFreehand\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />\n        ];\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"lineStraight\"}\n            />\n                   \n        );\n    }\n    \n  }\n\n  Line.contextType = store;\n\n  export default Line;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Emoji extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 24;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"emoji\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.emojiCharacterCode = window.workshoppr.emojiCharacter;\n        newElement.fixedRatio = \"true\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"emoji\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.emojiCharacterCode = window.workshoppr.emojiCharacter;\n        newElement.fixedRatio = \"true\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            emojiCharacter,\n            emojiCharacterCode,\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n           \n            <Tool type={\"emoji_\"+emojiCharacterCode}\n                content={emojiCharacter}\n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Emoji;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport './styles.css';\n\nimport Emoji from './emoji';\n\nclass Emojis extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n\n        this.subMenuType = \"emoji\";\n        if(!window.workshoppr) {\n            window.workshoppr = {};\n        }\n        window.workshoppr.emojiCharacter = String.fromCodePoint((String(\"128512\").toString(16)));\n    }\n\n    uglyHack(e) {\n        //NEEDS TO BE REMOOVED ONCE WE SWITCH TO STORES FOR ELEMENT DATA\n        window.workshoppr.emojiCharacter = String.fromCodePoint((String(e.target.id).toString(16)));\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const emojRange = [128512,128515,128516,128513,128518,128517,129315,128514,128578,128579,128521,128522,128519,129392,128525,129321,128536,128535,9786,128538,128537,128523,128539,128540,129322,128541,129297,129303,129325,129323,129300,129296,129320,128528,128529,128527,128530,128580,128556,128558,129317,128524,128532,128554,129316,128564,128567,129298,129301,129314,129326,129319,129397,129398,129396,128565,129327,129312,129395,128526,129299,129488,128533,128577,128562,128563,129402,128552,128560,128549,128546,128557,128561,128534,128531,128553,128548,128545,129324,128520,128127,128128,9760,128169,129313,128121,128122,128123,128125,128126,129302,128570,128569,128571,128576,128575,128584,128585,128586,128139,128140,128157,128148,10084,129505,128155,128154,128153,128156,128175,128165,128166,128168,128371,128163,128172,128495,128173,128164,128075,129306,128400,9995,128406,128076,9996,129310,129311,129304,129305,128072,128073,128070,128405,128071,9757,128077,128078,128074,129307,129308,128079,128588,128080,129309,128591,9997,128133,128170,129462,128066,128067,129504,129463,129460,128064,128065,128069,128068,128118,129490,128104,129492,128105,128117,128116,128581,128129,128587,129318,129335,127877,129464,129465,129497,129498,129499,129500,129501,129502,129503,127939,128131,128378,129496,128704,128716,128053,128018,129421,128054,128021,128041,128058,129418,129437,128049,128008,129409,128047,128005,128006,128052,128014,129412,129427,129420,128046,128002,128003,128055,128022,128023,128015,128016,128042,128043,129426,129433,128024,129423,129435,128045,128001,128057,128048,128063,128007,129428,129415,128059,128040,128060,129432,129441,128062,129411,128020,128019,128035,128036,128038,128039,129413,129414,129442,129417,129434,128056,129436,128010,128034,129422,128013,129430,129429,128051,128044,128032,128033,128025,128012,129419,128027,128028,128029,128030,128375,129410,129439,129440,128144,127801,127794,127795,127796,127797,9752,127809,127815,127816,127817,127818,127819,127820,127821,129389,127822,127823,127825,127827,129373,127813,129381,127814,129364,129365,127798,127812,127838,129384,129360,129374,129472,129385,127828,127839,127829,127789,129386,127790,127859,127857,127846,127849,127856,129473,127851,127852,127853,127868,127870,127863,127864,127866,127867,129346,127757,127758,127759,128506,129517,127956,127755,127957,127958,128642,128643,128644,128652,128656,128658,128657,128659,128661,127949,128690,128756,128761,128758,128755,128674,9992,128641,127771,9728,127776,9729,9925,9928,127780,127782,127784,127786,127785,127752,9748,9889,10052,9731,127754,127875,127876,129512,127880,127881,127882,127873,127942,9917,127936,127955,127918,127922,9824,9829,9830,9827,128083];\n\n        const subMenuTools = [];\n\n        emojRange.forEach(x => {\n            const emojiEntity = String.fromCodePoint((String(x).toString(16)));\n              subMenuTools.push(\n                <Emoji\n                    emojiCharacter={(\n                    <span className={\"emojiCharacter\"} id={x} onClick={this.uglyHack}>    \n                        {emojiEntity}\n                    </span>\n                    )}\n                    emojiCharacterCode={emojiEntity}\n                    key={\"tool_emoji-\"+x}\n                    handleDeselectAllElements={handleDeselectAllElements}\n                    handleDrawCanvasShow={handleDrawCanvasShow}\n                    registerDragHandler={registerDragHandler}\n                    handleDragMove={handleDragMove}\n                    handleDragEnd={handleDragEnd}\n                    currentSelectedTool={currentSelectedTool}\n                />\n            );\n        });\n\n        return (\n           \n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"emoji_😀\"}\n                noIconChange={true}\n            />\n                   \n        );\n    }\n    \n  }\n\n  Emojis.contextType = store;\n\n  export default Emojis;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Image extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const presetWidthAndHeight = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((presetWidthAndHeight/2)*currentState.zoomLevel);\n        newElement.styles.width = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.height = presetWidthAndHeight*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"image\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.URL = \"/icons/insert_photo-noBorder-24px.svg\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"image\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Image;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Slide extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 360,\n              width = 480;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Unnamed\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"slide\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#fdfcfa\";\n        newElement.slideName = \"Unnamed\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"slide\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\nclass Link extends Component {\n\n    handleLinkClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleLinkDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"link\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.shapeType = 0;\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"link\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleLinkClick}\n                handleDragStart={this.handleLinkDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass PDF extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\");\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"pdf\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default PDF;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Iframe extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"iframe\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Iframe;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Youtube extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const width = 240,\n              height = 120;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        \n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n\n        newState.elements[newID] = createElementBaseObject(newID, \"youtube\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.URL = \"https://www.youtube.com/embed/lxf05bSC17E\";\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"youtube\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Timer extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"timer\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Timer;","import React, {Component} from 'react';\n//import Shortid from 'shortid';\nimport Tool from './tool';\n\nimport './styles.css';\n\n\nclass Poll extends Component {\n\n    handleShapeClick(e, dragStartX, dragStartY) {\n        alert(\"Thanks for your click! We are still working on this feature - but now that we know you want it, we will get it done faster!\")\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // const width = 120,\n        //       height = 120;\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX-((width/2)*currentState.zoomLevel),\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY-((height/2)*currentState.zoomLevel),\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.dragStartHandler = null;\n        // newState.dragMoveHandler = null;\n        // newState.dragEndHandler = null;\n        // newState.clickHandler = null;\n        // newState.tool = \"pan\";\n        // newState.storeUndo = true;\n        // this.removeDragHandler(\"drawCanvas\");\n        // this.setState(newState);\n    }\n\n    handleShapeDragStart(e, dragStartX, dragStartY, width, height) {\n        // const currentState = this.state;\n        // const newState = {};\n        // newState.elements = {...currentState.elements};\n        // const newID = Shortid.generate();\n        // newState.elements[newID] = {\n        //     id : newID,\n        //     type : \"image\",\n        //     styles : {\n        //         x : (dragStartX*currentState.zoomLevel)+currentState.offsetX,\n        //         y : (dragStartY*currentState.zoomLevel)+currentState.offsetY,\n        //         width : width*currentState.zoomLevel,\n        //         height: height*currentState.zoomLevel,\n        //         fillOpacity: 0,\n        //         fill: \"#ffffff\",\n        //         stroke : \"#000000\",\n        //         strokeOpacity : 1,\n        //         strokeWidth : 2*currentState.zoomLevel,\n        //         strokeDasharray : \"0\"\n        //     },\n        //     imgURL : \"/miral/icons/insert_photo-noBorder-24px.svg\",\n        //     initialZoomLevel : currentState.zoomLevel\n        // };\n        // newState.elementState = {...currentState.elementState};\n        // newState.elementState[newID] = {\n        //     selected : true\n        // };\n        // newState.elementBeingDrawn = newID;\n        // newState.storeUndo = true;\n        // this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleToolSelect,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"poll\" \n                handleToolSelect={handleToolSelect}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleShapeClick}\n                handleDragStart={this.handleShapeDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Poll;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\nimport Tool from './tool';\n\nimport {createElementBaseObject} from \"./utils\";\n\nimport './styles.css';\n\n\nclass Dice extends Component {\n\n    handleSlideClick(e, dragStartX, dragStartY) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        const height = 40,\n              width = 40;\n        \n        newState.elements[newID] = createElementBaseObject(newID, \"dice\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX-((height/2)*currentState.zoomLevel);\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY-((width/2)*currentState.zoomLevel);\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#666\";\n\n        newElement.fixedRatio = \"true\";\n\n        const randomNumber = Math.random();\n        const randomDiceNumber = Math.floor(randomNumber * (5 - 0 + 1)) + 0;\n        newElement.diceNumber = randomDiceNumber;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.dragStartHandler = null;\n        newState.dragMoveHandler = null;\n        newState.dragEndHandler = null;\n        newState.clickHandler = null;\n        newState.tool = \"pan\";\n        newState.storeUndo = true;\n        this.removeDragHandler(\"drawCanvas\");\n        this.setState(newState);\n    }\n\n    handleSlideDragStart(e, dragStartX, dragStartY, width, height) {\n        const currentState = this.state;\n        const newState = {};\n        newState.elements = {...currentState.elements};\n        const newID = Shortid.generate();\n        newState.elements[newID] = createElementBaseObject(newID, \"dice\", currentState.zoomLevel);\n        \n        const newElement = newState.elements[newID];\n        newElement.styles.x = (dragStartX*currentState.zoomLevel)+currentState.offsetX;\n        newElement.styles.y = (dragStartY*currentState.zoomLevel)+currentState.offsetY;\n        newElement.styles.width = width*currentState.zoomLevel;\n        newElement.styles.height = height*currentState.zoomLevel;\n        newElement.styles.strokeOpacity = 0;\n        newElement.styles.fill = \"#666\";\n\n        newElement.fixedRatio = \"true\";\n\n        const randomNumber = Math.random();\n        const randomDiceNumber = Math.floor(randomNumber * (5 - 0 + 1)) + 0;\n        newElement.diceNumber = randomDiceNumber;\n\n        newState.elementState = {...currentState.elementState};\n        newState.elementState[newID] = {\n            selected : currentState.userID\n        };\n        newState.elementBeingDrawn = newID;\n        newState.storeUndo = true;\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            autoActivate,\n            currentSelectedTool\n        } = this.props;\n\n\n        return (\n           \n            <Tool type=\"dice\" \n                handleDeselectAllElements={handleDeselectAllElements}\n                currentSelectedTool={currentSelectedTool}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleClick={this.handleSlideClick}\n                handleDragStart={this.handleSlideDragStart}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                autoActivate={autoActivate}\n            />\n                   \n        );\n    }\n    \n  }\n\n  export default Dice;","import React, {Component} from 'react';\nimport MultiTool from './multiTool';\nimport { store } from '../../../context/tools';\n\nimport Slide from \"./slide\";\nimport Link from \"./link\";\nimport PDF from \"./pdf\";\nimport Iframe from \"./iframe\";\nimport Youtube from \"./youtube\";\nimport Timer from \"./timer\";\nimport Poll from \"./poll\";\nimport Dice from \"./dice\";\n\nimport './styles.css';\n\n\n\nclass More extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.subMenuType = \"more\";\n    }\n  \n    render() {\n        const {\n            handleDrawCanvasShow,\n            registerDragHandler,\n            handleDragMove,\n            handleDragEnd,\n            currentSelectedTool,\n            handleDeselectAllElements\n        } = this.props;\n\n        const subMenuTools = [\n            <Slide\n                key={\"tool_slide\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Link\n                key={\"tool_link\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <PDF\n                key={\"tool_pdf\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n\n            />,\n            <Iframe\n                key={\"tool_iframe\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Youtube\n                key={\"tool_youtube\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Timer\n                key={\"tool_timer\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Poll\n                key={\"tool_poll\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />,\n            <Dice\n                key={\"tool_dice\"}\n                handleDeselectAllElements={handleDeselectAllElements}\n                handleDrawCanvasShow={handleDrawCanvasShow}\n                registerDragHandler={registerDragHandler}\n                handleDragMove={handleDragMove}\n                handleDragEnd={handleDragEnd}\n                currentSelectedTool={currentSelectedTool}\n            />\n        ];\n\n        return (\n\n            <MultiTool \n                type={this.subMenuType}\n                subMenuItems={subMenuTools}\n                defaultTool={\"slide\"}\n                noIconChange={true}\n            />\n                   \n        );\n    }\n    \n  }\n\n  More.contextType = store;\n\n  export default More;","import React, {Component} from 'react';\n\nimport Select from './select';\nimport Shape from './shape';\nimport Postit from './postit';\nimport Text from './text';\nimport Line from './line';\nimport Emojis from './emojis';\nimport Image from './image';\nimport More from './more';\n\nimport './styles.css';\n\nclass Toolbar extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          openSubMenu : null\n        };\n    }\n\n\n    handleSetCurrentOpenSubMenu = (openSubMenu) => {\n        this.props.handleDeselectAllElements();\n        this.setState({openSubMenu});\n    }\n\n    handleElementDragMove(e) {\n        const currentState = this.state;\n        const newState = {};\n        if(currentState.elementBeingDrawn !== null) {\n            const newElementGraph = {...currentState.elements};\n            const newStyles = {...newElementGraph[currentState.elementBeingDrawn].styles};\n            newElementGraph[currentState.elementBeingDrawn].styles = newStyles;\n            if(newElementGraph[currentState.elementBeingDrawn].fixedRatio) {\n                let multiplier = e.movementX;\n                if(e.movementY > multiplier) {\n                    multiplier = e.movementY;\n                }\n                newElementGraph[currentState.elementBeingDrawn].styles.width += multiplier*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += multiplier*currentState.zoomLevel;\n\n            } else {\n                newElementGraph[currentState.elementBeingDrawn].styles.width += e.movementX*currentState.zoomLevel;\n                newElementGraph[currentState.elementBeingDrawn].styles.height += e.movementY*currentState.zoomLevel;\n            }\n            newState.elements = newElementGraph;\n        }\n        this.setState(newState);\n    }\n\n    handleDragEnd() {\n        const newState = {};\n\n        newState.tool = \"pan\";\n\n        this.setState(newState);\n    }\n  \n    render() {\n        const {\n            handleDeselectAllElements,\n            registerDragHandler,\n            handleShowSelectionArea,\n            handleUpdateSelectionArea,\n            handleDrawCanvasShow,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n\n        return (\n            <div className=\"toolbar_container\"\n            >\n                <div className=\"toolbar\">\n                    <Select \n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleShowSelectionArea={handleShowSelectionArea}\n                        handleUpdateSelectionArea={handleUpdateSelectionArea}\n                        handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Shape\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Postit\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Text\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Line\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Emojis\n                        handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                        openSubMenu={this.state.openSubMenu}\n                        handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                    <Image handleDeselectAllElements={handleDeselectAllElements}\n                        handleDrawCanvasShow={handleDrawCanvasShow}\n                        registerDragHandler={registerDragHandler}\n                        handleDragMove={this.handleElementDragMove}\n                        handleDragEnd={this.handleDragEnd}\n                        currentSelectedTool={currentSelectedTool}\n                    />\n                    <More \n                         handleDeselectAllElements={handleDeselectAllElements}\n                         handleDrawCanvasShow={handleDrawCanvasShow}\n                         registerDragHandler={registerDragHandler}\n                         handleDragMove={this.handleElementDragMove}\n                         handleDragEnd={this.handleDragEnd}\n                         currentSelectedTool={currentSelectedTool}\n                         openSubMenu={this.state.openSubMenu}\n                         handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(\n            this.props.currentSelectedTool === \"pan\" &&\n            this.state.openSubMenu !== null && \n            prevState.openSubMenu === this.state.openSubMenu\n        ) {\n            this.setState({openSubMenu : null});\n        }\n    }\n    \n  }\n\n  export default Toolbar;","import React, {PureComponent} from 'react';\n\nimport Toolbar from './toolbar';\n\nimport './styles.css';\n\nclass Tools extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          selectAreaPosition : {\n            x : 0,\n            y : 0,\n            width : 0,\n            height : 0,\n          }\n        };\n    }\n\n    render() {\n        const {\n            handleDeselectAllElements,\n            registerDragHandler,\n            handleSelectElementsWithinArea,\n            currentSelectedTool\n        } = this.props;\n        return (\n            <div className=\"tools\">\n                <Toolbar\n                    handleDeselectAllElements={handleDeselectAllElements} \n                    registerDragHandler={registerDragHandler}\n                    handleDrawCanvasShow={this.handleDrawCanvasShow}\n                    handleShowSelectionArea={this.handleShowSelectionArea}\n                    handleUpdateSelectionArea={this.handleUpdateSelectionArea}\n                    handleSelectElementsWithinArea={handleSelectElementsWithinArea}\n                    currentSelectedTool={currentSelectedTool}\n\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default Tools;","import React, {PureComponent} from 'react';\nimport { store } from '../../context/tools';\n\nimport './styles.css';\n\nclass DrawCanvas extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n    }\n\n    handleDrawCanvasHide = (e) => {\n        const resetSelectArea = {\n            selectAreaVisible : false,\n            selectAreaPosition : {\n                x : 0,\n                y : 0,\n                width : 0,\n                height : 0,\n            }\n        };\n        const resetDrawCanvas = {\n            drawCanvasVisible : false\n        };\n        this.props.removeDragHandler(\"drawCanvas\");\n        this.context.dispatch({type : \"resetToolbar\"});\n        this.setState(Object.assign({}, resetSelectArea, resetDrawCanvas));\n    }\n  \n    render() {\n        const {\n            selectAreaVisible,\n            selectAreaPosition\n        } = this.context.state;\n\n        const selectAreaStyle = {\n            display : \"none\"\n        };\n\n        if(selectAreaVisible) {\n            selectAreaStyle.display = \"block\";\n            selectAreaStyle.transform = `translate3d(${(selectAreaPosition.x)}px,${(selectAreaPosition.y)}px, 0)`\n            selectAreaStyle.width = `${selectAreaPosition.width}px`;\n            selectAreaStyle.height = `${selectAreaPosition.height}px`;\n        }\n\n        const drawCanvasStyles = {\n            display : \"none\"\n        };\n        if(this.context.state.tool && this.context.state.tool !== \"pan\") {\n            drawCanvasStyles.display = \"block\";\n        }\n\n        return (\n                <div \n                    id=\"drawCanvas\" \n                    style={drawCanvasStyles}\n                    onPointerUp={this.handleDrawCanvasHide}\n                    //onPointerOut={this.handleDrawCanvasHide}\n                >\n                    <div className={\"selectionArea\"} style={selectAreaStyle}/>\n                </div>\n        );\n    }\n    \n  }\n\n  DrawCanvas.contextType = store;\n\n  export default DrawCanvas;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Altimeter extends Component {\n  \n    render() {\n        return (\n            <div className={\"zoomLevel\"}>Scale : {this.props.zoomLevel}%</div>\n        );\n    }\n    \n  }\n\n  export default Altimeter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst ELEMENT_TYPE_PROPERTIES = {\n    text : {\n        isExpandToFit : true,\n        isAutoResize : false\n    },\n    shape : {\n        isExpandToFit : false,\n        isAutoResize : false\n    },\n    postit : {\n        isExpandToFit : false,\n        isAutoResize : true\n    }\n};\n\nclass TextEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        fontSize : 24,\n        elementHeight : 0\n      };\n      this.sizeCheckerInterval = null;\n    }\n\n    handleLostFocus = (e) => {\n        this.props.handleUpdatedText({\n            id : this.props.data.id,\n            newText : (this.textInput.innerText || this.textInput.textContent).trim(),\n            fontSize : this.state.fontSize*this.props.gridSpace.zoomLevel\n        });\n    }\n\n    sizeChecker = () => {\n\n        const { isAutoResize, isExpandToFit } = ELEMENT_TYPE_PROPERTIES[this.props.data.type];\n        const textIsTooLarge = (this.textContainer.scrollHeight > this.textContainer.clientHeight);\n        const textIsTooSmall = (this.textInput.clientHeight < this.textContainer.clientHeight);\n        if(isAutoResize && textIsTooLarge) {\n            const newFontSize = (this.state.fontSize/3)*2;\n            this.setState({fontSize : newFontSize});\n        } else if(isAutoResize && textIsTooSmall && this.state.fontSize < 24) {\n            const twoThirds = (1/3*2);\n            const nextExpectedHeight = (this.textInput.clientHeight/(twoThirds*100))*100;\n            if(nextExpectedHeight < this.textContainer.clientHeight) {\n                const newFontSize = (this.state.fontSize/(twoThirds*100))*100;\n                this.setState({fontSize : newFontSize});\n            }\n        } else if(isExpandToFit && (this.textContainer.scrollHeight > this.textContainer.clientHeight)) {\n            if(this.state.elementHeight !== this.textContainer.scrollHeight) {\n                this.props.handleSetElementHeight(this.props.data.id, this.textContainer.scrollHeight);\n                this.setState({elementHeight : this.textContainer.scrollHeight});\n            }\n        }\n    }\n\n    handlePaste = (event) => {\n        event.preventDefault();\n        document.execCommand('inserttext', false, event.clipboardData.getData('text/plain'));\n    }\n\n    handleGotFocus = (e) => {\n        this.setState({\n            fontSize : this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            data\n        } = nextProps;\n\n        const {\n            fontSize,\n            elementHeight\n        } = nextState;\n\n        const needsUpdateData = (data !== this.props.data);\n        const needsUpdateFont = (fontSize !== this.state.fontSize);\n        const needsUpdateLayout = (elementHeight !== this.state.elementHeight);\n\n        if(needsUpdateData || needsUpdateFont || needsUpdateLayout) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        const {data, gridSpace} = this.props\n        \n        const styles = {\n            position : \"absolute\",\n            display : \"flex\",\n            alignItems : \"center\",\n            justifyContent : \"center\",\n            visibility: \"hidden\",\n            borderTop: \"1px solid blue\" //THIS IS A WIERD SAFARI FIX, CARET DOES NOT SHOW FOR EMPTY TEXT WITHOUT THIS?\n        };\n        const textStyles = {\n            fontSize : this.state.fontSize\n        };\n        let starterText = \"\";\n        let editorKey = \"blank\";\n        if(data && data.id && data.styles) {\n        const componentStyles = data.styles;\n        let x = ((componentStyles.x || componentStyles.cx)/gridSpace.zoomLevel)-(gridSpace.offsetX/gridSpace.zoomLevel),\n            y = ((componentStyles.y || componentStyles.cy)/gridSpace.zoomLevel)-(gridSpace.offsetY/gridSpace.zoomLevel),\n            width = componentStyles.width/gridSpace.zoomLevel,\n            height = this.state.elementHeight;\n        styles.top = `${y}px`;\n        styles.left = `${x}px`; \n        styles.height = `${height}px`; \n        styles.width = `${width}px`;\n        styles.visibility = \"visible\";\n        styles.overflow = \"scroll\";\n        if(data.text.length > 0) {\n            starterText = data.text.split(/\\n|\\r/).map((line, i) => {\n                return(<div key={`editor_${data.id}_${line}_${i}`}>{line}</div>);\n            });\n        }\n        if(data.fontStyle.textAlign) {\n            textStyles.textAlign = data.fontStyle.textAlign;\n            if(data.fontStyle.textAlign === \"left\") {\n                styles.justifyContent = \"flex-start\";\n            } else if (data.fontStyle.textAlign === \"right\") {\n                styles.justifyContent = \"flex-end\";\n            }\n        }\n\n        //TOTEST : text aligns correctly\n        if(data.fontStyle.alignItems) {\n            textStyles.alignItems = \"center\";\n            if(data.fontStyle.alignItems === \"top\") {\n                styles.alignItems = \"flex-start\";\n            } else if (data.fontStyle.alignItems === \"bottom\") {\n                styles.alignItems = \"flex-end\";\n            }\n        }\n        if(data.fontStyle.color) {\n            textStyles.color = data.fontStyle.color;\n        }\n\n        editorKey=this.props.data.id;\n            \n        }\n        \n        return (\n            <div\n                style={styles}\n                ref={(container) => { this.textContainer = container; }}\n            >\n                <div\n                    id={\"textEditor\"} \n                    key={`textEditor_${editorKey}`}\n                    contentEditable={true}\n                    ref={(input) => { this.textInput = input; }}\n                    className=\"textContainer\"\n                    onBlur={this.handleLostFocus}\n                    onFocus={this.handleGotFocus}\n                    onPaste={this.handlePaste}\n                    suppressContentEditableWarning={true}\n                    style={textStyles}\n                >\n                    {starterText}\n                </div>\n            </div>\n        );\n    }\n\n   componentDidUpdate(prevProps, prevState) {\n       if(this.props.data && this.props.data.id) {\n           \n            setTimeout(() => {\n                this.textInput.focus();\n                const moveCaretToEnd = this.props.data ? this.props.data.text.length > 0 : false;\n                if(moveCaretToEnd && document.createRange) {\n                    let range = document.createRange();\n                    range.selectNodeContents(this.textInput);\n                    range.collapse(false);\n                    let selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n\n            }, 100); //NEEDED AGAIN FOR SAFARI OTHERWISE FOR SOME REASON DOESN\"T FOCUS\n\n            if(!prevProps.data || (this.props.data.id !== prevProps.data.id)) {\n                this.setState({\n                    fontSize :  this.props.data.fontStyle.fontSize/this.props.gridSpace.zoomLevel,\n                    elementHeight : this.props.data.styles.height/this.props.gridSpace.zoomLevel\n                });\n                this.sizeCheckerInterval = setInterval(this.sizeChecker, 100);\n            }\n            \n       } else {\n           clearInterval(this.sizeCheckerInterval);\n       }\n   }\n    \n  }\n\n  export default TextEditor;","import React from 'react';\n\nexport const themes = {\n  light: {\n    preDefinedColors : [\n      // \"#FC72A6\", //pink\n      // \"#1B8CA6\", //blue\n      // \"#C8DE02\", //green\n      // \"#EBE000\", //yellow\n      // \"#F2A105\" //orange\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n      \"#F28D95\", //pink\n      \"#7EBFD9\", //blue\n      \"#BBF244\", //green\n      \"#F2C744\", //yellow\n      \"#F29C50\" //orange\n    ],\n    primaryColors : [\n      \"#ffffff\", //white\n      \"#000000\", //black\n      \"#999\", //grey\n    ],\n    fontColors : [\n      \"#ffffff\", //white\n      \"#999\", //grey\n      \"#080808\" //text grey/black\n    ],\n  },\n  dark: {\n    \n  },\n};\n\nexport const ThemeContext = React.createContext(\n  themes.light\n);\n","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass PredefinedColorOption extends Component {\n\n  handleSelectColor = () => {\n    this.props.handleUpdateElementProperty({\n      update : {\n        predefinedColor : this.props.colorID\n      }\n    });\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nconst SUBMENU_NAME = \"PredefinedColorPicker\";\n\nclass PredefinedColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          backgroundColor : theme.preDefinedColors[this.props.fillColor] \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <PredefinedColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateElementProperty={this.props.handleUpdateElementProperty}\n                              />\n                      })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  PredefinedColorPicker.contextType = ThemeContext;\n\n  export default PredefinedColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomColorPicker\";\n\nclass CustomColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newFillOpacity = this.props.currentStyles[0].styles.fillOpacity;\n      if (newFillOpacity === 0) {\n        newFillOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            fill : color,\n            fillOpacity : newFillOpacity\n          }\n        }\n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            fillOpacity : e.target.value\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        const fillOpacity = this.props.currentStyles[0].styles.fillOpacity;\n\n        const selectedColor = {\n          backgroundColor : this.props.currentStyles[0].styles.fill \n        };\n\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.preDefinedColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(fillOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomColorPicker.contextType = ThemeContext;\n\n  export default CustomColorPicker;","import React, {Component} from 'react';\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nclass CustomBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass TransparentBorderColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleOpacityChange({target : { value : 0 }});\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: \"#fff\", border: \"1px solid #999\"}}\n              onClick={this.handleSelectColor}  \n            >\n            <div className=\"transparentLine\" />\n            </div>\n  }\n\n}\n\nconst SUBMENU_NAME = \"CustomBorderColorPicker\";\n\nclass CustomBorderColorPicker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleUpdateColor = (color) => {\n      let newStrokeOpacity = this.props.currentStyles.strokeOpacity;\n      if (newStrokeOpacity === 0) {\n        newStrokeOpacity = 1;\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            stroke : color,\n            strokeOpacity : newStrokeOpacity\n          }\n        }\n      });\n    }\n\n    handleOpacityChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeOpacity : e.target.value\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    render() {\n        const theme = this.context;\n        const selectedColor = {\n          borderColor : this.props.currentStyles.stroke \n        };\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n        \n        return (\n            <div className={\"predefinedColorPicker\"}>\n                <div \n                  className={\"selectedBorderColor\"}\n                  style={selectedColor}\n                  onClick={this.handleOpenSubMenu}\n                  title={\"Change border color\"}\n                ></div>\n                <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <TransparentBorderColorOption \n                      key={('customColorOption_transparent')}\n                      handleOpacityChange={this.handleOpacityChange}\n                    />\n                    {\n                      theme.primaryColors.map((color, i) => {\n                        return <CustomBorderColorOption \n                                key={('preDefinedColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div\n                     className=\"opacityPicker\"\n                    >\n                      <div  className=\"opacityLabel\" >Opacity:</div>\n                      <input \n                        type=\"number\" \n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"0\" \n                        max=\"1\"\n                        step=\"0.1\"\n                        onChange={this.handleOpacityChange}\n                        value={(this.props.currentStyles.strokeOpacity || 0)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  CustomBorderColorPicker.contextType = ThemeContext;\n\n  export default CustomBorderColorPicker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"BorderStyle\";\n\nclass BorderStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleSolidChange = () => {\n      const strokeDasharray = \"0\";\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n    handleDashedChange = () => {\n      const strokeDasharray = (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n    handleDottedChange = () => {\n      const strokeDasharray = String(2*this.props.initialZoomLevel);\n      \n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeDasharray\n          }\n        }\n      });\n    }\n\n\n    handleWidthChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          styles : {\n            strokeWidth : (e.target.value*this.props.initialZoomLevel)\n          }\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let solidSelected = (this.props.currentStyles.strokeDasharray === \"0\") ? \"selected\" : null,\n            dashedSelected = (this.props.currentStyles.strokeDasharray === (4*this.props.initialZoomLevel)+\" \"+(2*this.props.initialZoomLevel)) ? \"selected\" : null,\n            dottedSelected = (this.props.currentStyles.strokeDasharray === String(2*this.props.initialZoomLevel)) ? \"selected\" : null;\n\n        const computedStrokeWidth = Math.ceil(this.props.currentStyles.strokeWidth/this.props.initialZoomLevel);\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change border styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path fill={iconColor} d=\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${solidSelected}`} onClick={this.handleSolidChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,10l0,4l18,0l0,-4l-18,0z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dashedSelected}`} onClick={this.handleDashedChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"m3,13l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2zm6.5,0l5,0l0,-2l-5,0l0,2z\" />\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${dottedSelected}`} onClick={this.handleDottedChange}>\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <path fill={iconColor} d=\"m3,13l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2zm4,0l2,0l0,-2l-2,0l0,2z\"/>\n                      </svg>\n                    </div>\n                    <div className=\"opacityPicker\">\n                      <div  className=\"opacityLabel\" >Width:</div>\n                      <input \n                        type=\"number\"\n                        id=\"opacity\" \n                        name=\"opacity\" \n                        min=\"1\" \n                        max=\"10\"\n                        step=\"1\"\n                        onChange={this.handleWidthChange}\n                        value={computedStrokeWidth}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default BorderStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextFormat\";\n\nclass TextFormat extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleBoldChange = () => {\n      let newFontWeight = \"normal\";\n      if(this.props.fontStyle.fontWeight === \"normal\") {\n        newFontWeight = \"bold\";\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"fontWeight\" : newFontWeight\n          }\n        }\n      });\n    }\n\n    handleItalicChange = () => {\n      let newFontStyle = \"normal\";\n      if(this.props.fontStyle.fontStyle === \"normal\") {\n        newFontStyle = \"italic\";\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"fontStyle\" : newFontStyle\n          }\n        }\n      });\n    }\n\n    handleUnderlineChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"underline\") === -1) {\n        textDecorationLine = \"underline \" + textDecorationLine;\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"underline\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            textDecorationLine\n          }\n        }\n      });\n    }\n\n    handleStrikeThroughChange = () => {\n      let textDecorationLine = this.props.fontStyle.textDecorationLine;\n      if(this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") === -1) {\n        textDecorationLine = textDecorationLine + \" line-through\";\n      } else {\n        textDecorationLine = textDecorationLine.replace(\"line-through\", \"\");\n      }\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            textDecorationLine\n          }\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let boldSelected = (this.props.fontStyle.fontWeight === \"bold\") ? \"selected\" : null,\n            italicSelected = (this.props.fontStyle.fontStyle === \"italic\") ? \"selected\" : null,\n            underlineSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"underline\") !== -1) ? \"selected\" : null,\n            strikeThroughSelected = (this.props.fontStyle.textDecorationLine.indexOf(\"line-through\") !== -1) ? \"selected\" : null;\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text format\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    <div className={`editor_subMenu_icon ${boldSelected}`} onClick={this.handleBoldChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${italicSelected}`} onClick={this.handleItalicChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${underlineSelected}`} onClick={this.handleUnderlineChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n                      </svg>\n                    </div>\n                    <div className={`editor_subMenu_icon ${strikeThroughSelected}`} onClick={this.handleStrikeThroughChange}>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                        <path fill={iconColor} d=\"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z\"/>\n                      </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextFormat;","import React, {Component} from 'react';\n\nimport {ThemeContext} from '../../../../../theme-context';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"FontStyle\";\n\nconst FONT_FAMILIES = [\n  \"Arial\",\n  \"Arial Black\",\n  \"Arial Narrow\",\n  \"Arial Rounded MT Bold\",\n  \"Baskerville\",\n  \"Courier New\",\n  \"Georgia\",\n  \"Lucida Bright\",\n  \"Lucida Sans Typewriter\",\n  \"Palatino\",\n  \"Tahoma\",\n  \"Times New Roman\",\n  \"Trebuchet MS\",\n  \"Verdana\"\n];\n\nclass CustomColorOption extends Component {\n\n  handleSelectColor = () => {\n   this.props.handleUpdateColor(this.props.color);\n  }\n\n  render() {\n      return <div \n              className={\"availableColor\"} \n              style={{backgroundColor: this.props.color}}\n              onClick={this.handleSelectColor}  \n            />\n  }\n\n}\n\nclass FontStyle extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleUpdateColor = (color) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            color\n          }\n        }\n      });\n    }\n\n    handleFontChange = (e) => {\n      let {fontFamily} = this.props.fontStyle;\n      if(fontFamily !== e.target.value) {\n        this.props.handleUpdateElementProperty({\n          update : {\n            fontStyle : {\n              fontFamily : e.target.value\n            }\n          }\n        });\n      }\n    }\n\n    handleSizeChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            fontSize : (e.target.value*this.props.initialZoomLevel)\n          }\n        }\n      });\n    }\n\n    render() {\n        const theme = this.context;\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change font styles\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >\n                    <div className={\"arrow\"} />\n                    {\n                      theme.fontColors.map((color, i) => {\n                        return <CustomColorOption \n                                key={('fontColorOption_'+color)}\n                                color={color} \n                                colorID={i}\n                                handleUpdateColor={this.handleUpdateColor}\n                              />\n                      })\n                    }\n                    <div className=\"fontFamily\">\n                        <select \n                          value={this.props.fontStyle.fontFamily}\n                          onChange={this.handleFontChange}\n                        >\n                          {FONT_FAMILIES.map(font => <option key={`fontSelector_${font}`}>{font}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"picker\">\n                      <div  className=\"picker_label\" >size:</div>\n                      <input \n                        type=\"number\"\n                        id=\"fontSize\" \n                        name=\"fontSize\" \n                        step=\"2\"\n                        max=\"104\"\n                        min=\"0\"\n                        onChange={this.handleSizeChange}\n                        value={Math.round(this.props.fontStyle.fontSize/this.props.initialZoomLevel)}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  FontStyle.contextType = ThemeContext;\n\n  export default FontStyle;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"TextAlignment\";\n\nfunction CenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction LeftIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction RightIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n    </svg>\n  );\n}\n\nfunction AlignTopIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignCenterIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\nfunction AlignBottomIcon(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n      <path fill={props.iconColor} d=\"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z\"/>\n    </svg>\n  );\n}\n\n\nclass TextAlignment extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    handleLeftChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"left\"\n          }\n        }\n      });\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleRightChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"right\"\n          }\n        }\n      });\n    }\n\n    handleCenterChange = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"textAlign\" : \"center\"\n          }\n        }\n      });\n    }\n\n    handleAlignTop = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"top\"\n          }\n        }\n      });\n    }\n\n    handleAlignCenter = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"center\"\n          }\n        }\n      });\n    }\n\n    handleAlignBottom = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          fontStyle : {\n            \"alignItems\" : \"bottom\"\n          }\n        }\n      });\n    }\n\n    render() {\n\n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        let leftSelected = (this.props.fontStyle.textAlign === \"left\") ? \"selected\" : null,\n            centerSelected = (this.props.fontStyle.textAlign === \"center\") ? \"selected\" : null,\n            rightSelected = (this.props.fontStyle.textAlign === \"right\") ? \"selected\" : null,\n            topAlignSelected = (this.props.fontStyle.alignItems === \"top\") ? \"selected\" : null,\n            centerAlignSelected = (this.props.fontStyle.alignItems === \"center\") ? \"selected\" : null,\n            bottomAlignSelected = (this.props.fontStyle.alignItems === \"bottom\") ? \"selected\" : null;\n        \n        let currentIcon = <CenterIcon iconColor={iconColor} />;\n\n        if(leftSelected) {\n          currentIcon = <LeftIcon iconColor={iconColor} />;\n        } else if (rightSelected) {\n          currentIcon = <RightIcon iconColor={iconColor} />;\n        }\n        \n        return (\n            <div className={\"editor_option\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change text alignment\"}\n              >\n                {currentIcon}\n              </div>\n              <div \n                  className={submenuCSS}\n                  onClick={this.handleOpenSubMenu}\n                >\n                    <div className={\"arrow\"} />\n                    <div \n                      className={`editor_subMenu_icon ${leftSelected}`} \n                      onClick={this.handleLeftChange}\n                      title={\"Align text left\"}\n                    >\n                      <LeftIcon iconColor={iconColor} />\n                    </div>\n                    <div \n                      className={`editor_subMenu_icon \n                      ${centerSelected}`} \n                      onClick={this.handleCenterChange}\n                      title={\"Align text center\"}\n                    >\n                      <CenterIcon iconColor={iconColor} />\n                    </div>\n                    <div \n                      className={`editor_subMenu_icon ${rightSelected}`} \n                      onClick={this.handleRightChange}\n                      title={\"Align text right\"}\n                    >\n                      <RightIcon iconColor={iconColor} />\n                    </div>\n                    <div \n                      className={`editor_subMenu_icon \n                      ${topAlignSelected}`} \n                      onClick={this.handleAlignTop}\n                      title={\"Align text to top\"}\n                    >\n                      <AlignTopIcon iconColor={iconColor} />\n                    </div>\n                    <div \n                      className={`editor_subMenu_icon ${centerAlignSelected}`} \n                      onClick={this.handleAlignCenter}\n                      title={\"Align text to middle\"}\n                    >\n                      <AlignCenterIcon iconColor={iconColor} />\n                    </div>\n                    <div \n                      className={`editor_subMenu_icon ${bottomAlignSelected}`} \n                      onClick={this.handleAlignBottom}\n                      title={\"Align text to bottom\"}\n                    >\n                      <AlignBottomIcon iconColor={iconColor} />\n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default TextAlignment;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"LINK\";\n\nclass Link extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      subMenuOpen : false\n    };\n  }\n\n  handleOpenSubMenu = () => {\n    this.setState({subMenuOpen : !this.state.subMenuOpen});\n    this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n  }\n\n  componentDidUpdate() {\n    if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n      this.setState({subMenuOpen : false});\n    }\n  }\n\n  handleLinkChange = (e) => {\n\n    this.props.handleUpdateElementProperty({\n      update : {\n        link : e.target.value\n      }\n    });\n\n  }\n\n  render() {\n\n      let submenuCSS = \"predefinedColorPicker_submenu\";\n      if(this.state.subMenuOpen) {\n        submenuCSS += \" isVisible\";\n      }\n      \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"} \n              onClick={this.handleOpenSubMenu}\n              title={\"Add link to this element\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n              </svg>\n            </div>\n            <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >link:</div>\n                      <input  \n                        name=\"link\" \n                        onChange={this.handleLinkChange}\n                        value={this.props.link}\n                        list={\"frameNames\"}\n                      />\n                      <datalist id=\"frameNames\">\n                        {this.props.getSlides().map((slide, i) =>  <option value={`element://${slide.id}`} key={`linkOption_${slide.id}`}>Slide {(i+1)}</option>)}\n                      </datalist>\n                    </div>\n                </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default Link;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass DepthSetter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    handleBringForward = () => {\n      this.props.handleShiftElementPosition(\"forward\", this.props.ids);\n    }\n\n    handleSendBackward = () => {\n      this.props.handleShiftElementPosition(\"backward\", this.props.ids);\n    }\n\n    render() {\n        \n        const isForward = (this.props.type === \"forward\");\n        return (\n          <div className={\"editor_option\"}>\n            \n              {isForward ?\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Bring to front\"}\n                  onClick={this.handleBringForward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path fill={iconColor} d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm12 12h2v-2h-2v2zm6-18H7v14h14V3zm-2 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2zm-4 0h2v-2H3v2z\"/>\n                  </svg>\n                </div>\n                :\n                <div \n                  className={\"editor_icon\"}\n                  title={\"Send to back\"}\n                  onClick={this.handleSendBackward}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm4 4h-2v2h2v-2zm0-12h-2v2h2V3zM9 3H7v2h2V3zm12 0h-2v2h2V3zm0 12h-2v2h2v-2zM9 15H7v2h2v-2zm10-2h2v-2h-2v2zm0-4h2V7h-2v2zM5 7H3v14h14v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n                  </svg>\n                </div>\n              }\n          </div>\n        );\n    }\n\n    \n  }\n\n  export default DepthSetter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementLocker extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleToggleLock = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          locked : !this.props.isLocked\n        }\n      });\n    }\n\n    render() {\n        \n      const {isLocked} = this.props;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Lock this element from changes\"}\n          >\n            {isLocked ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <g fill=\"none\">\n                  <path d=\"M0 0h24v24H0V0z\"/>\n                  <path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/>\n                </g>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16V8zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16V8zm-2 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementLocker;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementDeleter extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"Delete this element\"}\n              onClick={this.props.handleDeleteElements}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementDeleter;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementEditorMenu extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    render() {\n        \n      return (\n          <div className={\"editor_option\"}>\n            <div \n              className={\"editor_icon\"}\n              title={\"More options\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                <path fill={iconColor} d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\n              </svg>\n            </div>\n          </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementEditorMenu;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nconst SUBMENU_NAME = \"URL\";\n\nclass URL extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        subMenuOpen : false\n      };\n    }\n\n    handleOpenSubMenu = () => {\n      this.setState({subMenuOpen : !this.state.subMenuOpen});\n      this.props.handleSetCurrentOpenSubMenu(SUBMENU_NAME);\n    }\n\n    componentDidUpdate() {\n      if(this.state.subMenuOpen && this.props.currentOpenSubMenu !== SUBMENU_NAME) {\n        this.setState({subMenuOpen : false});\n      }\n    }\n\n    handleURLChange = (e) => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          URL : e.target.value\n        }\n      });\n    }\n\n    render() {\n        \n        let submenuCSS = \"predefinedColorPicker_submenu\";\n        if(this.state.subMenuOpen) {\n          submenuCSS += \" isVisible\";\n        }\n\n        return (\n            <div className={\"fontStyle\"}>\n              <div \n                className={\"editor_icon\"} \n                onClick={this.handleOpenSubMenu}\n                title={\"Change image URL\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path fill={iconColor} d=\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zM23 9h-5v6h1.5v-2H23V9zm-1.5 2.5h-2v-1h2v1z\"/>\n                </svg>\n              </div>\n              <div \n                  className={submenuCSS}\n                >   \n                    <div className={\"arrow\"} />\n                    <div className=\"urlLocation\">\n                      <div  className=\"urlLocation_label\" >URL:</div>\n                      <input  \n                        name=\"imgURL\" \n                        onChange={this.handleURLChange}\n                        value={this.props.URL}\n                      />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default URL;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementVisibility extends Component {\n\n    handleToggleLock = () => {\n      this.props.handleUpdateElementProperty({\n        update : {\n          hidden : !this.props.isHidden\n        }\n      });\n    }\n\n    render() {\n        \n      const {isHidden} = this.props;\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleLock}\n            title={\"Make this element not visible\"}\n          >\n            {isHidden ?\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M12 6.5c2.76 0 5 2.24 5 5 0 .51-.1 1-.24 1.46l3.06 3.06c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l2.17 2.17c.47-.14.96-.24 1.47-.24zM3.42 2.45L2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.97-.3 4.31-.82l3.43 3.43 1.41-1.41L3.42 2.45zM12 16.5c-2.76 0-5-2.24-5-5 0-.77.18-1.5.49-2.14l1.57 1.57c-.03.18-.06.37-.06.57 0 1.66 1.34 3 3 3 .2 0 .38-.03.57-.07L14.14 16c-.65.32-1.37.5-2.14.5zm2.97-5.33c-.15-1.4-1.25-2.49-2.64-2.64l2.64 2.64z\"/>\n              </svg>\n              :\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path fill={iconColor} d=\"M12 4C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementVisibility;","import React, {Component} from 'react';\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\nconst iconColor = \"#333\";\n\nclass ElementGroup extends Component {\n\n    areElementsAlreadyGrouped = () => {\n      const { elements } = this.props;\n        \n      let areGrouped = true;\n\n      if(elements[0].groups.length) {\n        const lastGroup = elements[0].groups[elements[0].groups.length-1]; \n        elements.forEach(element => {\n          if(element.groups.length) {\n            if(element.groups[element.groups.length-1] !== lastGroup) {\n              areGrouped = false;\n            }\n          } else {\n            areGrouped = false;\n          }\n          \n        })\n      } else {\n        areGrouped = false;\n      }\n      return areGrouped;\n    }\n\n    handleToggleGroup = () => {\n      const areGrouped = this.areElementsAlreadyGrouped();\n\n      if(!areGrouped) {\n        this.props.handleUpdateElementProperty({\n          update : {\n            groups : [Shortid.generate()]\n          }\n        });\n      } else {\n        const { elements } = this.props;\n        const lastGroup = elements[0].groups[elements[0].groups.length-1];\n        this.props.handleUpdateElementProperty({\n          remove : {\n            groups : [lastGroup]\n          }\n        });\n      }\n      \n    }\n\n    render() {\n      \n      const areGrouped = this.areElementsAlreadyGrouped();\n\n      return (\n        <div className={\"editor_option\"}>\n          <div \n            className={\"editor_icon\"} \n            onClick={this.handleToggleGroup}\n            title={(!areGrouped ? \"Group these elements\" : \"Ungroup these elements\")}\n          >\n            {!areGrouped ?\n              <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"m23,7l0,-6l-6,0l0,2l-10,0l0,-2l-6,0l0,6l2,0l0,10l-2,0l0,6l6,0l0,-2l10,0l0,2l6,0l0,-6l-2,0l0,-10l2,0zm-20,-4l2,0l0,2l-2,0l0,-2zm2,18l-2,0l0,-2l2,0l0,2zm12,-2l-10,0l0,-2l-2,0l0,-10l2,0l0,-2l10,0l0,2l2,0l0,10l-2,0l0,2zm4,2l-2,0l0,-2l2,0l0,2zm-2,-16l0,-2l2,0l0,2l-2,0z\" fill={iconColor}/>\n                <rect fill=\"none\" height=\"5.5\" id=\"svg_2\" stroke={iconColor} width=\"5.5\" x=\"8\" y=\"10.22656\"/>\n                <rect fill=\"none\" height=\"5.5\" id=\"svg_3\" stroke={iconColor} width=\"5.5\" x=\"11.25\" y=\"7.72656\"/>\n              </svg>\n              :\n              <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect fill=\"none\" height=\"9.25\"  stroke={iconColor} width=\"9\" x=\"5.25\" y=\"9.47656\"/>\n                <rect fill=\"none\" height=\"9.25\"stroke={iconColor} width=\"9\" x=\"11\" y=\"3.72656\"/>\n              </svg>\n            }\n          </div>\n        </div>\n      );\n  }\n\n    \n  }\n\n  export default ElementGroup;","import React, {Component} from 'react';\n\n//Editors\n\nimport PredefinedColorPicker from './editors/predefinedColorPicker';\nimport CustomColorPicker from './editors/customColorPicker';\nimport CustomBorderColorPicker from './editors/customBorderColorPicker';\nimport BorderStyle from './editors/borderStyle';\nimport TextFormat from './editors/textFormat';\nimport FontStyle from './editors/fontStyle';\nimport TextAlignment from './editors/textAlignment';\nimport Link from './editors/link';\nimport DepthSetter from './editors/depthSetter';\nimport ElementLocker from './editors/elementLocker';\nimport ElementDeleter from './editors/elementDeleter';\nimport ElementEditorMenu from './editors/elementEditorMenu';\nimport Url from './editors/url';\nimport ElementVisibility from './editors/elementVisibility';\nimport ElementGroup from './editors/elementGroup';\n\n\nimport './styles.css';\n\nconst shapeTypeEditableFeatures = {\n    \"postit\" : [\"predefinedColor\", \"textFormat\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"shape\" : [\"customColor\", \"customBorderColor\", \"borderStyle\", \"fontStyle\", \"textFormat\",  \"textAlignment\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"text\" : [\"fontStyle\", \"textFormat\", \"textAlignment\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"line\" : [\"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"image\" : [\"url\", \"customBorderColor\", \"borderStyle\", \"bringForward\", \"sendBackward\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"slide\" : [\"customColor\", \"bringForward\", \"sendBackward\", \"lock\", \"delete\", \"menu\"],\n    \"link\" : [\"link\", \"visibility\", \"lock\", \"delete\", \"menu\"],\n    \"youtube\" : [\"url\", \"lock\", \"delete\", \"menu\"],\n    \"emoji\" : [ \"visibility\", \"lock\", \"delete\", \"menu\"]\n};\n\nconst multiElementEditableFeatures = [\"bringForward\", \"sendBackward\", \"lock\", \"group\", \"delete\", \"menu\"];\n\nclass ElementEditor extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentOpenSubMenu : null\n      };\n    }\n\n    handleUpdateElementProperty = (data) => {\n        data.id = this.props.selectedElements.map((element) => element.id);\n        this.props.handleUpdateElementProperty(data);\n    }\n\n    handleSetCurrentOpenSubMenu = (currentOpenSubMenu) => {\n        this.setState({currentOpenSubMenu});\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const shouldUpdate = (this.props.selectedElements.length !== nextProps.selectedElements.length) || (nextProps.selectedElements.length > 0);\n        if(shouldUpdate) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.handleDuplicateElements();\n        }\n        \n    }\n\n    render() {\n        const containerPosition = {},\n            {\n                selectedElements,\n                boundingBox,\n                getSlides\n            } = this.props;\n        let containerClass = \"elementEditor\",\n            editButtonTypes = null,\n            editButtons = null;\n        \n        const selectedIDs = selectedElements.map(element => {\n            return element.id;\n        });\n        \n        if(selectedElements.length === 1) {\n            editButtonTypes = shapeTypeEditableFeatures[selectedElements[0].type];\n        } else if (selectedElements.length > 1) {\n            editButtonTypes = [...multiElementEditableFeatures];\n            let areAllShapes = true;\n            selectedElements.forEach(element => {\n                if(element.type !== \"shape\") {\n                    areAllShapes = false;\n                }\n            });\n            if(areAllShapes) {\n                editButtonTypes.unshift(\"customColor\");\n            }\n        }\n        if(editButtonTypes) {\n            editButtons = editButtonTypes.map(button => {\n                switch (button) {\n                    case 'predefinedColor':\n                        return <PredefinedColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fillColor={selectedElements[0].predefinedColor}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customColor':\n                        return <CustomColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'customBorderColor':\n                        return <CustomBorderColorPicker \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'borderStyle':\n                        return <BorderStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    currentStyles={selectedElements[0].styles}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textFormat':\n                    return <TextFormat \n                                key={`${selectedElements[0].id}_${button}`}\n                                fontStyle={selectedElements[0].fontStyle}\n                                initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                currentOpenSubMenu={this.state.currentOpenSubMenu}\n                            />;\n                    case 'fontStyle':\n                        return <FontStyle \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    initialZoomLevel={selectedElements[0].initialZoomLevel}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'textAlignment':\n                        return <TextAlignment \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    fontStyle={selectedElements[0].fontStyle}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'link':\n                        return <Link \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    link={selectedElements[0].link}\n                                    getSlides={getSlides}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'bringForward':\n                        return <DepthSetter \n                                    type=\"forward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'sendBackward':\n                        return <DepthSetter \n                                    type=\"backward\" \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    handleShiftElementPosition={this.props.handleShiftElementPosition}\n                                    ids={selectedIDs}\n                                />;\n                    case 'group':\n                        return <ElementGroup \n                            key={`${selectedElements[0].id}_${button}`}\n                            elements={selectedElements}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        />;\n                    case 'visibility':\n                        return <ElementVisibility \n                            key={`${selectedElements[0].id}_${button}`}\n                            isHidden={selectedElements[0].hidden}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                        />;\n                    case 'lock':\n                        return <ElementLocker \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    isLocked={selectedElements[0].locked}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                />;\n                    case 'delete':\n                        return <ElementDeleter \n                                    key={`${selectedElements[0].id}_${button}`} \n                                    handleDeleteElements={this.props.handleDeleteElements}\n                                />;\n                    case 'url':\n                        return <Url \n                                    key={`${selectedElements[0].id}_${button}`}\n                                    URL={selectedElements[0].URL}\n                                    handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                    handleSetCurrentOpenSubMenu={this.handleSetCurrentOpenSubMenu}\n                                    currentOpenSubMenu={this.state.currentOpenSubMenu}\n                                />;\n                    case 'menu':\n                        return <ElementEditorMenu options={shapeTypeEditableFeatures[selectedElements[0].type]} key={`${selectedElements[0].id}_${button}`} />;\n                    default:\n                      return null;\n                  }\n            });\n            \n            containerClass += \" isVisible\";\n\n            const editorHeightPlusMargin = 40+56,\n                  halfEditorWidth = (editButtons.length*40)/2,\n                  halfElementWidth = boundingBox.width/2,\n                  finalLeft = (boundingBox.x+halfElementWidth)-halfEditorWidth,\n                  finalTop = boundingBox.y-editorHeightPlusMargin;\n\n            containerPosition.left = `${finalLeft}px`;\n            containerPosition.top = `${finalTop}px`;\n\n        }\n        \n        return (\n            <div className={containerClass} style={containerPosition}>\n               {editButtons}\n            </div>\n        );\n    }\n\n    \n  }\n\n  export default ElementEditor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Guides extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          leftGuideVisible : false,\n          rightGuideVisible : false,\n          topGuideVisible : false,\n          bottomGuideVisible : false\n        };\n        this.hideGuidesTimeout = null;\n    }\n\n    hideGuides = () => {\n        this.setState({\n            leftGuideVisible : false,\n            rightGuideVisible : false,\n            topGuideVisible : false,\n            bottomGuideVisible : false,\n        });\n    }\n\n    render() {\n        const {\n            boundingBox\n        } = this.props;\n\n        const {\n            leftGuideVisible,\n            rightGuideVisible,\n            topGuideVisible,\n            bottomGuideVisible\n        } = this.state;\n\n        const leftGuideStyles = {\n            height : `100vh`,\n            width : `1px`,\n            transform : `translate3d(${(boundingBox.x)}px, 0px, 0)`\n        };\n\n        const rightGuideStyles = {\n            height : `100vh`,\n            width : `1px`,\n            transform : `translate3d(${(boundingBox.x+boundingBox.width)}px, 0px, 0)`\n        };\n\n        const topGuideStyles = {\n            height : `1px`,\n            width : `100vw`,\n            transform : `translate3d(0px, ${(boundingBox.y)}px, 0)`\n        };\n\n        const bottomGuideStyles = {\n            height : `1px`,\n            width : `100vw`,\n            transform : `translate3d(0px, ${(boundingBox.y+boundingBox.height)}px, 0)`\n        };\n\n        if(leftGuideVisible) {\n            leftGuideStyles.opacity = 0.3;\n        }\n\n        if(rightGuideVisible) {\n            rightGuideStyles.opacity = 0.3;\n        }\n\n        if(topGuideVisible) {\n            topGuideStyles.opacity = 0.3;\n        }\n\n        if(bottomGuideVisible) {\n            bottomGuideStyles.opacity = 0.3;\n        }\n\n        return (\n            <div className=\"guides\">\n                <div className=\"guide\" style={leftGuideStyles} />\n                <div className=\"guide\" style={rightGuideStyles} />\n                <div className=\"guide\" style={topGuideStyles} />\n                <div className=\"guide\" style={bottomGuideStyles} />\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        const movingRight = this.props.boundingBox.x > prevProps.boundingBox.x,\n              movingLeft = this.props.boundingBox.x < prevProps.boundingBox.x,\n              resizingWidth = (this.props.boundingBox.width !== prevProps.boundingBox.width),\n              movingUp = this.props.boundingBox.y < prevProps.boundingBox.y,\n              movingDown = this.props.boundingBox.y > prevProps.boundingBox.y,\n              resizingHeight = (this.props.boundingBox.height !== prevProps.boundingBox.height),\n              newState = {},\n              hideTimeout = 3500;\n        \n        if(movingRight) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if (movingLeft) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if (resizingWidth) {\n            newState.rightGuideVisible = true;\n            newState.leftGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        }\n\n        if (movingUp) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if(movingDown) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        } else if(resizingHeight) {\n            newState.topGuideVisible = true;\n            newState.bottomGuideVisible = true;\n            clearTimeout(this.hideGuidesTimeout);\n            this.hideGuidesTimeout = window.setTimeout(this.hideGuides, hideTimeout);\n        }\n\n        if(Object.keys(newState).length > 0) {\n            this.setState(newState);\n        }\n    }\n}\n\nclass Resizer extends Component {\n\n    handleMouseMove(e) {\n        const currentState = this.state;\n        const selectedElements = [];\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.state.elementState[item].selected === this.state.userID) {\n                selectedElements.push(this.state.elements[item]);\n            }\n        });\n        const newState = {};\n        if(selectedElements) {\n            const newElementsData = {...currentState.elements};\n            if(selectedElements.length > 1) {\n                const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, currentState.zoomLevel, currentState.offsetX, currentState.offsetY);\n                const xPercentageIncrease = (boundingBox.rawWidth + (e.movementX*currentState.zoomLevel))/boundingBox.rawWidth,\n                      yPercentageIncrease = (boundingBox.rawHeight + (e.movementY*currentState.zoomLevel))/boundingBox.rawHeight;\n                selectedElements.forEach(item => {\n                    const newElement = {...newElementsData[item.id]};\n                    newElementsData[item.id] = newElement;\n                    const newElementStyles = {...newElement.styles};\n                    newElement.styles = newElementStyles;\n                    //TOTEST : Multi-selected elements resize correctly \n                    newElement.styles.width *= xPercentageIncrease;\n                    newElement.styles.height *= yPercentageIncrease;\n                    const relativeXOffset = newElement.styles.x-boundingBox.rawX,\n                          relativeYOffset = newElement.styles.y-boundingBox.rawY;\n\n                    newElement.styles.x = (newElement.styles.x-relativeXOffset)+(relativeXOffset*xPercentageIncrease);\n                    newElement.styles.y = (newElement.styles.y-relativeYOffset)+(relativeYOffset*yPercentageIncrease);\n\n                    if(newElement.fontSizeAuto) {\n                        newElement.fontStyle = {...newElement.fontStyle};\n                        const fontStyleIncreaseMultiplier = (newElementsData[item.id].styles.width + (e.movementX*currentState.zoomLevel)) / newElementsData[item.id].styles.width;\n                        newElementsData[item.id].fontStyle.fontSize = fontStyleIncreaseMultiplier * newElementsData[item.id].fontStyle.fontSize;\n                    }\n                });\n            } else if(selectedElements.length === 1 && selectedElements[0].fixedRatio) {\n                //TOTEST : Fixed ratio elements resize correctly \n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElementStyles.width += e.movementX*currentState.zoomLevel;\n                newElementStyles.height += e.movementX*currentState.zoomLevel;\n                if(element.fontSizeAuto) {\n                    newElement.fontStyle = {...newElement.fontStyle};\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width + (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            } else if(selectedElements.length === 1) {\n                //TOTEST : Single elements resize correctly\n                let element = newElementsData[selectedElements[0].id];\n                const newElement = {...element};\n                newElementsData[selectedElements[0].id] = newElement;\n                const newElementStyles = {...newElement.styles};\n                newElement.styles = newElementStyles;\n                newElement.styles.width += e.movementX*currentState.zoomLevel;\n                newElement.styles.height += e.movementY*currentState.zoomLevel;\n                if(newElement.fontSizeAuto) {\n                    const fontStyleIncreaseMultiplier = (newElement.styles.width+ (e.movementX*currentState.zoomLevel)) / newElement.styles.width;\n                    newElement.fontStyle.fontSize = fontStyleIncreaseMultiplier * newElement.fontStyle.fontSize;\n                }\n            }\n            newState.elements = newElementsData;\n            this.setState(newState);\n        }\n        \n    }\n\n    handleResizeEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.height !== this.props.boundingBox.height) ||\n        (nextProps.boundingBox.width !== this.props.boundingBox.width) ||\n        (nextProps.boundingBox.x !== this.props.boundingBox.x) ||\n        (nextProps.boundingBox.y !== this.props.boundingBox.y) ||\n        (nextProps.boundingBox.cx !== this.props.boundingBox.cx) ||\n        (nextProps.boundingBox.cy !== this.props.boundingBox.cy) ||\n        (nextProps.isVisible !== this.props.isVisible) ||\n        (nextProps.isLocked !== this.props.isLocked);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox, isVisible, isLocked } = this.props;\n        const wrapperStyles = {\n            display: \"none\"\n        };\n\n        if(isVisible && !isLocked) {\n            wrapperStyles.display = \"block\";\n        }\n        const resizerStyles = {\n            position : \"absolute\",\n            height : `16px`,\n            width : `16px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(boundingBox.cx-8)}px,${(boundingBox.cy-8)}px, 0)`\n        };\n\n        const highlightBoxPosition = {\n            x : boundingBox.x,\n            y : boundingBox.y,\n            height : boundingBox.height,\n            width : boundingBox.width\n        };\n\n        if(highlightBoxPosition.width < 0) {\n            highlightBoxPosition.x += highlightBoxPosition.width;\n            highlightBoxPosition.width = highlightBoxPosition.width * -1;\n        }\n\n        if(highlightBoxPosition.height < 0) {\n            highlightBoxPosition.y += highlightBoxPosition.height;\n            highlightBoxPosition.height = highlightBoxPosition.height * -1;\n        }\n\n        const elementHighlightStyles = {\n            position : \"absolute\",\n            height : `${highlightBoxPosition.height}px`,\n            width : `${highlightBoxPosition.width}px`,\n            top : `0`,\n            left : `0`,\n            transform : `translate3d(${(highlightBoxPosition.x)}px,${(highlightBoxPosition.y)}px, 0)`\n        };\n\n        return (\n            <>\n            <Guides \n                boundingBox={boundingBox}\n            />\n            <div className=\"resizerWrapper\" style={wrapperStyles}>\n                <div className=\"elementsHightlight\" style={elementHighlightStyles}/>\n                <svg style={resizerStyles} height=\"16\" width=\"16\" viewBox=\"-8 -8 16 16\">\n                    <circle\n                    id={\"resizerHandle\"}\n                    cx={0} \n                    cy={0} \n                    r={6}\n                    fill={\"white\"}\n                    stroke={\"grey\"}\n                    strokeWidth={2}\n                    strokeOpacity={0.5} \n                    cursor={\"nwse-resize\"}>\n                    </circle>\n                </svg>\n            </div>\n            \n           </>\n        );\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"resizerHandle\", {\n            \"dragMoveHandler\" : this.handleMouseMove,\n            \"dragEndHandler\" : this.handleResizeEnd\n        });\n    }\n}\n\nexport default Resizer;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass ElementDrag extends Component {\n\n    handleSelect(e) {\n        const elementID = e.target.id;\n        const isMultiSelect = e.metaKey;\n        this.handleSetCurrentElement(elementID, isMultiSelect);\n    }\n\n    handleElementDragStart() {\n        console.log(\"drag started\");\n        const selectedElementIds = this.getSelectedElements(this.state.elementState).map(element => element.id);\n        this.handleShiftElementPosition(\"forward\", selectedElementIds);\n    }\n\n    updateElementDragPosition(e) {\n        const {\n            zoomLevel\n        } = this.state;\n\n        const newElementsData = {...this.state.elements};\n        const selectedItemKeys = Object.keys(this.state.elementState).filter(item => {\n            if(this.isSelected(item)) {\n                return true;\n            }\n            return false;\n        });\n        if(selectedItemKeys.length) {\n            selectedItemKeys.forEach(element => {\n                const newElement = {...newElementsData[element]};\n                const newStyles = {...newElementsData[element].styles};\n                newStyles.x += e.movementX*zoomLevel;\n                newStyles.y += e.movementY*zoomLevel;\n                newElement.styles = newStyles;\n                newElementsData[element] = newElement;\n            });\n            this.setState({\n                elements : newElementsData\n            });\n        }\n    }\n\n    handleElementDragEnd() {\n        this.setState({\n            storeUndo : true\n        });\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const needsUpdate = (nextProps.boundingBox.rawHeight !== this.props.boundingBox.rawHeight) ||\n        (nextProps.boundingBox.rawWidth !== this.props.boundingBox.rawWidth) ||\n        (nextProps.boundingBox.rawX !== this.props.boundingBox.rawX) ||\n        (nextProps.boundingBox.rawY !== this.props.boundingBox.rawY) ||\n        (nextProps.elementKeys.length !== this.props.elementKeys.length);\n\n        return needsUpdate;\n    }\n\n    render() {\n        const { boundingBox } = this.props;\n        return (\n            <rect \n                id={\"elementSelectionArea\"}\n                height={boundingBox.rawHeight}\n                width={boundingBox.rawWidth}\n                x={boundingBox.rawX}\n                y={boundingBox.rawY}\n                fillOpacity={0}\n            />\n        );\n    }\n    \n    componentDidUpdate(prevProps) {\n        \n        const currentElements = this.props.elementKeys,\n              prevElements = prevProps.elementKeys;\n\n        const removedElements = prevElements.filter(element => {\n            if(currentElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        const addedElements = currentElements.filter(element => {\n            if(prevElements.indexOf(element) === -1) {\n                return true;\n            }\n            return false;\n        });\n\n        if(removedElements.length > 0) {\n            removedElements.forEach(id => {\n                this.props.removeDragHandler(id);\n            });\n        }\n\n        if(addedElements.length > 0) {\n            addedElements.forEach(id => {\n                this.props.registerDragHandler(id, {\n                    \"dragStartHandler\" : this.handleElementDragStart,\n                    \"dragMoveHandler\" : this.updateElementDragPosition,\n                    \"dragEndHandler\" : this.handleElementDragEnd,\n                    \"clickHandler\" : this.handleSelect\n                });\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.props.registerDragHandler(\"elementSelectionArea\", {\n            \"dragMoveHandler\" : this.updateElementDragPosition,\n            \"dragEndHandler\" : this.handleElementDragEnd\n        });\n    }\n}\n\nexport default ElementDrag;","export function objectClone(obj) {\n    const clone = Object.assign({}, obj);\n      Object.keys(clone).forEach(subPropertyKey => {\n        if(Array.isArray(clone[subPropertyKey])) {\n          clone[subPropertyKey] = [].concat(clone[subPropertyKey]);\n        } else if(typeof clone[subPropertyKey] === 'object') {\n          clone[subPropertyKey] = objectClone(clone[subPropertyKey]);\n      }\n    });\n    return clone;\n}\n\nexport function createNewObjectsForChangedElements(newData, patch) {\n  if(patch.length > 0) {\n      patch.forEach(change => {\n          const changePath = change.path.split(\"/\");\n          newData[changePath[1]][changePath[2]] = {...newData[changePath[1]][changePath[2]]};\n\n      })\n  }\n  return newData;\n}\n\nexport function isObjectAndNotNull(item) {\n  return typeof item === 'object' && item !== null;\n};\n\nexport function mergeObjects(primaryObject, mergeObject) {\n  const mergedObject = {...primaryObject};\n  Object.keys(mergeObject).forEach(key => {\n    if(Array.isArray(mergeObject[key]) && Array.isArray(primaryObject[key])) {\n      mergedObject[key] = mergedObject[key].concat(mergeObject[key]);\n    } else if(isObjectAndNotNull(mergeObject[key]) && isObjectAndNotNull(primaryObject[key])) {\n      mergedObject[key] = mergeObjects(primaryObject[key], mergeObject[key]);\n    } else {\n      mergedObject[key] = mergeObject[key];\n    }\n  });\n  return mergedObject;\n}\n\nexport function removeData(primaryObject, mergeObject) {\n  const mergedObject = {...primaryObject};\n  Object.keys(mergeObject).forEach(key => {\n    \n    if(Array.isArray(mergeObject[key]) && Array.isArray(primaryObject[key])) {\n      mergeObject[key].forEach(itemToRemove => {\n        mergedObject[key] = mergedObject[key].filter(item => item !== itemToRemove);\n      });\n    } else if(isObjectAndNotNull(mergeObject[key]) && isObjectAndNotNull(primaryObject[key])) {\n      mergedObject[key] = removeData(primaryObject[key], mergeObject[key]);\n    } else {\n      delete mergedObject[key];\n    }\n  });\n  return mergedObject;\n}\n\nexport function updateDocumentTitle(newTitle) {\n  document.title = \"Workshoppr.com - \"+newTitle;\n}","const replaceAsync = async (str, regex, asyncFn) => {\n  const promises = [];\n  str.replace(regex, (match, ...args) => {\n      const promise = asyncFn(match, ...args);\n      promises.push(promise);\n  });\n  const data = await Promise.all(promises);\n  return str.replace(regex, () => data.shift());\n}\n\nconst getBase64FromUrl = async (match, group1, url, group2) => {\n  const proxiedURL = `http://localhost:3001/imageProxy/${encodeURIComponent(url)}`;\n  const data = await fetch(proxiedURL);\n  const blob = await data.blob();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob); \n    reader.onloadend = function() {\n      const base64data = reader.result;   \n      resolve(group1+base64data+group2);\n    }\n  });\n}\n\nfunction getSvgUrl(svg) {\n  return  URL.createObjectURL(new Blob([svg], { type: 'image/svg+xml' }));\n}\n\nfunction svgUrlToPng(svgUrl, options, callback) {\n  const svgImage = new Image(options.width, options.height);\n  svgImage.onload = function () {\n      const canvas = document.createElement('canvas');\n      canvas.width = this.width;\n      canvas.height = this.height;\n      const canvasCtx = canvas.getContext('2d');\n      const newHeight = (this.width/this.naturalWidth) * this.naturalHeight;\n      const verticalOffset = (this.height-newHeight)/2;\n      canvasCtx.drawImage(svgImage, 0, verticalOffset, options.width, newHeight);\n      const imgData = canvas.toDataURL('image/png');\n      callback(imgData);\n  };\n  svgImage.src = svgUrl;\n}\n\nasync function cleanSVG(svg) {\n  let finalSVG = svg;\n  finalSVG = finalSVG.replace(/<foreignObject\\b[^<]*(?:(?!<\\/foreignObject>)<[^<]*)*<\\/foreignObject>/gi, \"\");\n  finalSVG = await replaceAsync(finalSVG, /(<image .*? href=\")(.+?)(\")/g, getBase64FromUrl);\n  return finalSVG;\n}\n\nexport async function svgToPng(svg, options, callback) {\n  const url = getSvgUrl(await cleanSVG(svg));\n  svgUrlToPng(url, options, (imgData) => {\n      callback(imgData);\n      URL.revokeObjectURL(url);\n  });\n}","import React, {Component, PureComponent} from 'react';\n\nimport { updateDocumentTitle } from './../../utils';\n\nimport { svgToPng } from './../../utils-svg2png';\n\nimport './styles.css';\n\nconst autosave_fileName = `miral_autoSave`;\n\nclass ExportSVG extends Component {\n\n    render() {\n        return(\n        <div \n            className={\"navBar_menu_item\"}\n            onClick={this.props.onClick}\n        >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M19,9h-4V3H9v6H5l7,7L19,9z M5,18v2h14v-2H5z\"/>\n            </svg>\n            <span>Export as SVG</span>\n        </div>\n        );\n    }\n}\n\nclass ExportPNG extends Component {\n\n    render() {\n        return(\n        <div \n            className={\"navBar_menu_item\"}\n            onClick={this.props.onClick}\n        >   \n             <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M19,9h-4V3H9v6H5l7,7L19,9z M5,18v2h14v-2H5z\"/>\n            </svg>\n            <span>Export as PNG</span>\n        </div>\n        );\n    }\n}\n\nclass ExportTemplate extends Component {\n\n    render() {\n        return(\n        <div \n            className={\"navBar_menu_item\"}\n            onClick={this.props.onClick}\n        >   \n             <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M19,9h-4V3H9v6H5l7,7L19,9z M5,18v2h14v-2H5z\"/>\n            </svg>\n            <span>Export as Template</span>\n        </div>\n        );\n    }\n}\n\nclass FileOption extends Component {\n\n    handleClick = (e) => {\n        this.props.loadFile(`miralFile_${this.props.fileName}`);\n    }\n\n    render() {\n        return(<div\n            className={\"navBar_menu_item\"}\n            onClick={this.handleClick}\n            onDoubleClick={this.handleDblClick}\n        >\n            {this.props.fileName}\n        </div>);\n    }\n}\n\nclass Navbar extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          menuVisible : false,\n          subMenu : [],\n          mondaySaveAvailable : false,\n        };\n      }\n\n    deselectElements(elementState) {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(item.selected !== false) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n\n    exportAsPNG = () => {\n        const applicationState = this.props.getState();\n        const rawSVG = this.props.getRawSVG();\n        svgToPng(rawSVG, {width: this.props.windowWidth, height: this.props.windowHeight}, (data) => {\n            console.log(\"hello\");\n            const modData = data.replace(\"image/png\", \"image/octet-stream\");\n            var evt = new MouseEvent(\"click\", {\n                view: window,\n                bubbles: false,\n                cancelable: true\n            });\n            var a = document.createElement(\"a\");\n            a.setAttribute(\"download\", applicationState.boardName+\"-export.png\");\n            a.setAttribute(\"href\", modData);\n            a.dispatchEvent(evt);\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        });\n    }\n\n    savePreviewImage = () => {\n        return new Promise((resolve, reject) => {\n            const rawSVG = this.props.getRawSVG();\n            svgToPng(rawSVG, {width: 125, height: 56}, (data) => {\n                const modData = data.replace(\"image/png\", \"image/octet-stream\");\n                resolve(modData);\n            });\n        });\n    }\n\n    exportAsSVG = () => {\n        const rawSVG = this.props.getRawSVG();\n\n        const rawSVGWithoutForeignObject = rawSVG.replace(/<foreignObject\\b[^<]*(?:(?!<\\/foreignObject>)<[^<]*)*<\\/foreignObject>/gi, \"\");\n        const applicationState = this.props.getState();\n        var a = document.createElement(\"a\");\n        var file = new Blob([rawSVGWithoutForeignObject], {type: 'image/svg+xml;charset=utf-8'});\n        a.href = URL.createObjectURL(file);\n        a.download = applicationState.boardName+\"-export.svg\";\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n    \n    handleOpenMenu = (e) => {\n        e.stopPropagation();\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n\n    autoSave = () => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        if(Object.keys(applicationState.elements).length > 0) {\n            const stateToSave = {\n                elements : applicationState.elements,\n                elementState : applicationState.elementState,\n                boardName : applicationState.boardName,\n                zoomLevel : applicationState.zoomLevel,\n                offsetX : applicationState.offsetX,\n                offsetY : applicationState.offsetY\n            };\n            window.localStorage.setItem(autosave_fileName, JSON.stringify(stateToSave));\n        } else {\n            window.localStorage.removeItem(autosave_fileName);\n        }\n       \n        \n    }\n    \n    saveToBrowser = (e) => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        this.savePreviewImage().then(preview => {\n            const stateToSave = {\n                previewImage : preview,\n                elements : applicationState.elements,\n                elementState : applicationState.elementState,\n                boardName : applicationState.boardName,\n                zoomLevel : applicationState.zoomLevel,\n                offsetX : applicationState.offsetX,\n                offsetY : applicationState.offsetY\n            };\n            \n            let fileName = `miralFile_${applicationState.boardName}`;\n            window.localStorage.setItem(fileName, JSON.stringify(stateToSave));\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        });\n        \n    }\n\n    saveToFile = () => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n        var a = document.createElement(\"a\");\n        var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    exportAsTemplate = () => {\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        this.savePreviewImage().then(preview => {\n            const stateToSave = {\n                previewImage : preview,\n                elements : applicationState.elements,\n                elementState : applicationState.elementState,\n                boardName : applicationState.boardName,\n                zoomLevel : applicationState.zoomLevel,\n                offsetX : applicationState.offsetX,\n                offsetY : applicationState.offsetY\n            };\n            \n            let fileName = `whiteboardFile_${applicationState.boardName}.wswb`;\n            var a = document.createElement(\"a\");\n            var file = new Blob([JSON.stringify(stateToSave)], {type: 'text/plain'});\n            a.href = URL.createObjectURL(file);\n            a.download = fileName;\n            a.click();\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        });\n    }\n\n    loadFileFromBrowser = (fileName) => {\n        const file = window.localStorage.getItem(fileName);\n        const dataToLoad = JSON.parse(file);\n        const state = Object.assign({}, this.props.applicationState, dataToLoad);\n        this.loadNewBoard(state);\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    loadFile = () => {\n        const readFile = (e) => {\n            var file = e.target.files[0];\n            if (!file) {\n                return;\n            }\n            var reader = new FileReader();\n            const loader = (e) => {\n                var file = e.target.result;\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(file));\n                this.loadNewBoard(state);\n            }\n            reader.onload = loader;\n            reader.readAsText(file);\n        }\n        const fileInput = document.createElement(\"input\");\n        fileInput.type='file';\n        fileInput.accept=\".wswb\";\n        fileInput.onchange=readFile;\n        fileInput.click();\n\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    getSavedFromBrowser = (e) => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                files.push(\n                    <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromBrowser} \n                        deleteFile={this.deleteFileFromLocalStorage}\n                    />\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        this.setState({\n            subMenu : files\n        });\n    }\n\n    saveToMonday = (e) => {\n        const monday = window.mondaySdk();\n        const applicationState = this.props.getState();\n        applicationState.elementState = this.deselectElements(applicationState.elementState);\n        const stateToSave = {\n            elements : applicationState.elements,\n            elementState : applicationState.elementState,\n            boardName : applicationState.boardName,\n            zoomLevel : applicationState.zoomLevel,\n            offsetX : applicationState.offsetX,\n            offsetY : applicationState.offsetY\n        };\n        let fileName = `miralFile_${applicationState.boardName}`;\n        const checkIfAlreadyExists = monday.storage.instance.getItem(fileName);\n        if(checkIfAlreadyExists) {\n            fileName = fileName+\"_\"+new Date().getHours()+new Date().getMinutes();\n        }\n        monday.storage.instance.setItem(fileName, JSON.stringify(stateToSave));\n        monday.storage.instance.getItem(\"miralFileList\")\n            .then((request) => {\n                let checkFileList = [];\n                if(request.data.value === null) {\n                    checkFileList = [fileName];\n                } else {\n                    checkFileList = JSON.parse(request.data.value);\n                    checkFileList.push(fileName);\n                }\n            monday.storage.instance.setItem(\"miralFileList\", JSON.stringify(checkFileList));\n        });\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n        \n    }\n\n    getSavedFromMonday = (e) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(\"miralFileList\").then(request => {\n            let files = [];\n            if(request.data.value) {\n                const fileNames = JSON.parse(request.data.value);\n                files = fileNames.map(fileName => {\n                    return <FileOption \n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                        loadFile={this.loadFileFromMonday} \n                    />\n                });\n            } else {\n                files.push(<div className=\"navMenu_error\">\n                    No saved files found on this browser.\n                </div>);\n            }\n            this.setState({\n                subMenu : files\n            });\n        });\n    }\n\n    loadFileFromMonday = (fileName) => {\n        const monday = window.mondaySdk();\n        monday.storage.instance.getItem(fileName)\n        .then(request => {\n            if(request.data.value) {\n                const state = Object.assign({}, this.props.applicationState, JSON.parse(request.data.value));\n                this.loadNewBoard(state);\n                this.setState({\n                    menuVisible : false,\n                    subMenu : []\n                });\n            }\n        });\n        \n    }\n\n    loadNewBoard = (newState) => {\n        //NEED TO WRITE TESTS FOR ALL THIS!\n        updateDocumentTitle(newState.boardName);\n        this.props.handleUpdateElementsAndState(newState);\n    }\n\n    deleteFileFromLocalStorage = () => {\n        const applicationState = this.props.getState();\n        const {\n            boardName \n        } = applicationState;\n\n        window.localStorage.removeItem(`miralFile_${boardName}`);\n        this.newFile();\n    }\n\n    newFile = () => {\n        //TODO write robust mechanism to determine whether file has changed.\n        const checkWillLoseChanges = window.localStorage.getItem(autosave_fileName);\n        let userConfirmation = true;\n        if(checkWillLoseChanges) {\n            userConfirmation = window.confirm(\"All changes in current board will be lost, are you sure?\");\n        }\n        if(userConfirmation) {\n            const applicationState = this.props.getState();\n            const blankState = {\n                elements : {},\n                elementState : {},\n                dragHandlers : {},\n                boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n                zoomLevel : 100,\n                offsetX : 0,\n                offsetY : 0\n            };\n            const state = Object.assign({}, applicationState, blankState);\n            this.props.handleUpdateElementsAndState(state);\n            this.setState({\n                menuVisible : false,\n                subMenu : []\n            });\n        }\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.props.loadTemplatesAndTutorials();\n        this.setState({\n            menuVisible : false,\n            subMenu : []\n        });\n    }\n\n    exportAs = () => {\n\n        this.setState({\n            subMenu : [\n                <ExportSVG\n                    onClick={this.exportAsSVG}\n                />,\n                <ExportPNG\n                    onClick={this.exportAsPNG}\n                />,\n                <ExportTemplate\n                    onClick={this.exportAsTemplate}\n                />\n            ]\n        });\n    }\n  \n    render() {\n        const { \n            menuVisible,\n            subMenu,\n            mondaySaveAvailable\n        } = this.state;\n        let menuCSS = \"navBar_menu\",\n            letFirstMenuHidden = \"\";\n        if( menuVisible ) {\n            menuCSS += \" navBar_menu_open\";\n        }\n        if(subMenu.length > 0) {\n            letFirstMenuHidden = \"slideLeft\";\n        }\n        return (\n            <div className={\"navBar\"}>\n                <span className={\"companyName\"}>Workshoppr</span>\n                <span className={\"burgerMenu\"} onClick={this.handleOpenMenu}></span>\n                <div className={menuCSS}>\n                    <div className={\"navBar_menu_arrow\"} />\n                    <div className={`navBar_menu_sliderWrapper`} >\n                        <div className={`navBar_menu_slider ${letFirstMenuHidden}`} >\n                            <div className={`navBar_menu_items`} >\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.newFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M4.01 2L4 22h16V8l-6-6H4.01zM13 9V3.5L18.5 9H13z\"/>\n                                    </svg>\n                                    <span>New board</span>\n                                </div>\n                                {(mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Save to Monday.com</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromMonday}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 64 64\">\n                                                <g transform=\"matrix(3.208255 0 0 3.208255 -35.559129 -63.587202)\">\n                                                    <path d=\"M13.513 35.76a2.433 2.433 0 0 1-2.059-3.723l4.377-6.99a2.432 2.432 0 1 1 4.123 2.582l-4.378 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ff3d57\"/>\n                                                    <path d=\"M21.056 35.76a2.433 2.433 0 0 1-2.063-3.723l4.38-6.99a2.432 2.432 0 1 1 4.117 2.582l-4.372 6.99a2.43 2.43 0 0 1-2.063 1.141z\" fill=\"#ffcb00\"/>\n                                                    <ellipse ry=\"2.375\" rx=\"2.436\" cy=\"33.384\" cx=\"28.597\" fill=\"#00d647\"/>\n                                                </g>\n                                            </svg>\n                                            <span>Load from Monday.com</span>\n                                        </div>\n                                    </>\n                                )}\n                                {(!mondaySaveAvailable &&\n                                    <>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.saveToBrowser}\n                                        >   \n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                                <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                                <path d=\"M19 12v7H5v-7H3v9h18v-9h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2v9.67z\"/>\n                                            </svg>\n                                            <span>Save to Browser</span>\n                                        </div>\n                                        <div \n                                            className={\"navBar_menu_item\"}\n                                            onClick={this.getSavedFromBrowser}\n                                        >\n                                            <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"m19,12l0,7l-14,0l0,-7l-2,0l0,9l18,0l0,-9l-2,0z\" fill=\"black\" id=\"svg_2\"/>\n                                                <path d=\"m12.75,11.67l2.59,-2.58l1.41,1.41l-5,5l-5,-5l1.41,-1.41l2.59,2.58l0,-9.67l2,0c0,3.223333 0,6.446667 0,9.67z\" fill=\"black\" id=\"svg_3\" transform=\"rotate(180 11.75 8.75)\"/>\n                                            </svg>\n                                            <span>Load from Browser</span>\n                                        </div>\n                                    </>\n                                )}\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.saveToFile}\n                                >   \n                                   \n                                    <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m2.59,15.12475l2.97298,-3.17475l-2.97298,-3.17475l0.91526,-0.97525l3.89474,4.15l-3.89474,4.15l-0.91526,-0.97525z\"  />\n                                    </svg>\n                                    <span>Save to file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadFile}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"m19.4,5.7l-9.8,0l0,12.6l12.6,0l0,-9.8l-2.8,-2.8zm-3.5,11.2c-1.162,0 -2.1,-0.938 -2.1,-2.1s0.938,-2.1 2.1,-2.1s2.1,0.938 2.1,2.1s-0.938,2.1 -2.1,2.1zm2.1,-7l-7,0l0,-2.8l7,0l0,2.8z\" />\n                                        <path d=\"m7.4,8.77525l-2.97298,3.17475l2.97298,3.17475l-0.91526,0.97525l-3.89474,-4.15l3.89474,-4.15l0.91526,0.97525z\" />\n                                    </svg>\n                                    <span>Load from file</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.deleteFileFromLocalStorage}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M6 21h12V7H6v14zm2.46-9.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4h-3.5z\"/>\n                                    </svg>\n                                    <span>Delete board</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.exportAs}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M19,9h-4V3H9v6H5l7,7L19,9z M5,18v2h14v-2H5z\"/>\n                                    </svg>\n                                    <span>Export as...</span>\n                                </div>\n                                <div \n                                    className={\"navBar_menu_item\"}\n                                    onClick={this.loadTemplatesAndTutorials}\n                                >   \n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                                        <path d=\"M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 8v12H2V10h20zm-6 6l-6-3.27v6.53L16 16z\"/>\n                                    </svg>\n                                    <span>Templates &amp; Guides</span>\n                                </div>\n                            </div>\n                            <div className={\"navBar_menu_items\"} >\n                                {subMenu.map(item => {\n                                    return item;\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        //enable monday.com save options & disable browser save\n        const url = document.location.ancestorOrigins[0];\n        if(url) {\n            const isMonday = url.indexOf(\"monday.com\") !== -1;\n            if(isMonday) {\n                this.setState({\n                    mondaySaveAvailable : true\n                });\n            }\n        }\n        //load previous autosave\n        const checkIfAlreadyExists = window.localStorage.getItem(autosave_fileName);\n        if(checkIfAlreadyExists) {\n            //this.loadFileFromBrowser(autosave_fileName);\n        }\n        //start autosave\n        //setInterval(this.autoSave, 5000);\n\n    }\n    \n  }\n\n  export default Navbar;","import React, {Component} from 'react';\n\nimport Shortid from 'shortid';\n\nimport './styles.css';\n\n//const server = \"https://workshoppr.com\";\n//const server = \"http://localhost:3000/miral\";\nconst server = \"https://workshoppr.com\";\n\nclass Share extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            menuVisible : false,\n            sessionActive : false,\n            boardID : null,\n            name : \"\",\n            initials : \"\",\n            securityCode : Math.floor(1000 + Math.random() * 90000)\n        };\n    }\n\n    handleOpenShareMenu = () => {\n        this.setState({\n            menuVisible : !this.state.menuVisible,\n            subMenu : []\n        });\n    }\n    \n    handleShareBoard = () => {\n        //TODO : crude flag for local dev, needs removing to config vars\n        //if(window.location.href.indexOf(\":3000\") !== -1) {\n\n            const {\n                name,\n                initials,\n                securityCode\n            } = this.state;\n\n            let {\n                boardID\n            } = this.state;\n\n            if(!boardID) {\n                boardID = this.removeDifficultCharactersToReadForPeople(Shortid.generate());\n            }\n\n            window.location.hash = `h=${boardID}&o=unfoldbio`\n\n\n            this.setState({\n                sessionActive : true,\n                boardID\n            });\n        \n            this.props.toggleBoardShare({\n                boardID,\n                name,\n                initials,\n                securityCode\n            });\n        //}\n    }\n\n    removeDifficultCharactersToReadForPeople(boardID) {\n        return boardID.replace(/l/g, \"L\").replace(/I/g, \"i\");\n    }\n\n    handleCopyToClipBoard = () => {\n        const {\n            boardID,\n            securityCode\n        } = this.state;\n        const newClip = `Join : ${server}/#j=${boardID}&o=unfoldbio \\nPasscode : ${securityCode}`;\n        navigator.clipboard.writeText(newClip);\n    }\n\n    handleNameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleNameBoardID = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleJoinBoard = (e) => {\n        window.workshoppr.joinBoard(this.state.organisation, this.state.boardID);\n    }\n  \n    render() {\n\n        const { \n            menuVisible,\n            sessionActive,\n            boardID,\n            name,\n            initials,\n            securityCode\n        } = this.state;\n\n        let menuCSS = \"share_menu\",\n            letFirstMenuHidden = \"\",\n            iconAnimation = \"\",\n            iconFillColor = \"#333\";\n\n        if( menuVisible ) {\n            menuCSS += \" share_menu_open\";\n        }\n\n        if(sessionActive) {\n            letFirstMenuHidden = \"slideLeft\";\n            iconFillColor= \"#33CC7F\";\n            iconAnimation = \"pulse\";\n        }\n\n        const link = `${server}/#j=${boardID}&o=unfoldbio`;\n\n        return (\n            <div className=\"share_menu_wrapper\">\n            <div \n                className={`iconButton share ${iconAnimation}`}\n                onClick={this.handleOpenShareMenu}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                    <path fill={iconFillColor} d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n            </div>\n            <div className={menuCSS}>\n                    <div className={\"share_menu_arrow\"} />\n                    <div className={`share_menu_sliderWrapper`} >\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Collaboration session setup:</h3>\n                            {boardID && (\n                            <div className=\"share_menu_fieldrow\">\n                                 <label>Board ID : </label>\n                                 <input \n                                     id=\"share_menu_input_boardID\"\n                                     className=\"share_menu_input\"\n                                     placeholder=\"xxxxxxxx\"\n                                     value={boardID}\n                                     onChange={this.handleNameBoardID}\n                                 />\n                            </div>\n                            )}\n                           \n                            <div className=\"share_menu_fieldrow\">\n                                <label>name : </label>\n                                <input\n                                    id=\"share_menu_input_userName\" \n                                    className=\"share_menu_input\"\n                                    placeholder=\"e.g. john\"\n                                    value={name}\n                                    onChange={this.handleNameUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Initials : </label>\n                                <input\n                                    id=\"share_menu_input_initials\"  \n                                    className=\"share_menu_input\"\n                                    placeholder=\"js\"\n                                    value={initials}\n                                    onChange={this.handleInitalsUpdate}\n                                />\n                            </div>\n                            {/*<div className=\"share_menu_fieldrow\">\n                                <label>Session duration (mins): </label>\n                                <input \n                                    className=\"share_menu_input\"\n                                    defaultValue=\"40\"\n                                />\n                            </div> */}\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label>\n                                <input\n                                    id=\"share_menu_input_securityCode\" \n                                    className=\"share_menu_input\"\n                                    defaultValue={securityCode}\n                                    onChange={this.handleSecurityCodeUpdate}\n                                />\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button\n                                    id=\"share_menu_input_shareNow\" \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleShareBoard}\n                                >Share board now</button>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button\n                                    id=\"share_menu_input_joinExisting\" \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleJoinBoard}\n                                >Join existing session</button>\n                            </div>\n                        </div>\n                        <div className={`share_menu_slider ${letFirstMenuHidden}`} >\n                            <h3>Sharing session active!</h3>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Join here : </label><a className=\"share_menu_link\" href={link}>{link}</a>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <label>Security code : </label><div>{securityCode}</div>\n                            </div>\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                    className=\"share_menu_button\"\n                                    onClick={this.handleCopyToClipBoard}\n                                >Copy invite to clipboard</button>\n                            </div>\n                            {/*TODO : <div className=\"share_menu_fieldrow\">\n                                <textarea defaultValue=\"Share with these emails\"></textarea>\n                                <button \n                                        className=\"share_menu_button\"\n                                    >Send invite</button>\n                        </div> */}\n                            {/*TODO: <div className=\"share_menu_fieldrow\">\n                                <label>Time remaining : 40 minutes</label>\n                    </div>*/}\n                            <div className=\"share_menu_fieldrow\">\n                                <button \n                                        className=\"share_menu_button\"\n                                    >End session for all</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(window.location.hash.indexOf(\"h=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/h=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        } else if (window.location.href.indexOf(\"boardId=\") !== -1) {\n            const organisation = window.location.href.match(/boardViewId=([^&$]*)/m)[1];\n            const boardID = window.location.href.match(/boardId=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID\n            });\n        }\n    }\n    \n  }\n\n  export default Share;","import React, {PureComponent} from 'react';\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\nclass UndoRedo extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          undo : [],\n          redo : [],\n          updates : [],\n          prevCombinedData : {\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n          }\n        };\n      }\n\n    handleUndo = () => {\n\n        const newUndo = [...this.state.undo];\n        const newUpdates = [...this.state.updates];\n        const lastUndoAction = newUndo.pop();\n        const lastUpdateAction = newUpdates.pop();\n        const newRedo = [...this.state.redo, lastUpdateAction];\n        \n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastUndoAction);\n\n        rfc6902.applyPatch(newCombinedData, lastUndoAction);\n\n        this.setState({\n            undo : newUndo,\n            redo : newRedo,\n            updates : newUpdates\n        })\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n        });\n    }\n\n    handleRedo = () => {\n        const newRedo = [...this.state.redo];\n        const lastRedoAction = newRedo.pop();\n\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, lastRedoAction);\n        \n        rfc6902.applyPatch(newCombinedData, lastRedoAction);\n        \n        this.setState({\n            redo : newRedo\n        });\n\n        this.props.handleUpdateElementsAndState({\n            elementState :  newCombinedData.elementState,\n            elements : newCombinedData.elements,\n            storeUndo : true\n        });\n    }\n  \n    render() {\n\n        const undoIsPossible = this.state.undo.length > 0,\n              redoIsPossible = this.state.redo.length > 0;\n\n        const undoRedoStyles = {\n            visibility : \"hidden\"\n        };\n\n        if(undoIsPossible || redoIsPossible) {\n            undoRedoStyles.visibility = \"visible\";\n        }\n\n        const redoStyles = {\n            pointerEvents : \"none\",\n            opacity : 0.5\n        };\n\n        if(redoIsPossible) {\n            redoStyles.opacity = 1;\n            redoStyles.pointerEvents = \"all\";\n        }\n\n        const undoStyles = {\n            opacity : 0.5,\n            pointerEvents : \"none\"\n        };\n\n        if(undoIsPossible) {\n            undoStyles.opacity = 1;\n            undoStyles.pointerEvents = \"all\";\n        }\n\n        return (\n\n            <div className={\"undoControls\"} style={undoRedoStyles}>\n                <span \n                    className={\"iconButton undo\"}\n                    onClick={this.handleUndo}\n                    style={undoStyles}\n                />\n                <span \n                    className={\"iconButton redo\"}\n                    onClick={this.handleRedo}\n                    style={redoStyles}\n                />\n            </div>\n\n        );\n    }\n\n    componentDidUpdate() {\n        const {\n            storeUndo\n        } = this.props;\n        const {\n            prevCombinedData\n        } = this.state;\n\n        if(storeUndo) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedData, currentCombinedData);\n            const elementsDiffUndo = rfc6902.createPatch(currentCombinedData, prevCombinedData);\n            if(elementsDiffUndo.length > 0 && elementsDiffUpdates.length > 0) {\n                this.setState({\n                    prevCombinedData : {\n                        elements : {...this.props.elements},\n                        elementState : {...this.props.elementState}\n                    },\n                    undo : [...this.state.undo, elementsDiffUndo],\n                    updates : [...this.state.updates, elementsDiffUpdates]\n                });\n                this.props.handleUpdateElementsAndState({storeUndo : false})\n            }\n        }\n    }\n\n    handleKeyPress = (e) => {\n        \n        if(\n            (e.ctrlKey === true && e.key === \"z\") ||\n            (e.metaKey === true && e.key === \"z\")\n        ) {\n            e.preventDefault();\n            const undoIsPossible = this.state.undo.length > 0;\n              \n            if(undoIsPossible) {\n                this.handleUndo();\n            }\n            \n        } else if (\n            (e.ctrlKey === true && e.key === \"y\") ||\n            (e.metaKey === true && e.key === \"y\")\n        ) {\n            e.preventDefault();\n            const redoIsPossible = this.state.redo.length > 0;\n            if(redoIsPossible) {\n                this.handleRedo();\n            }\n            \n        }\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default UndoRedo;","import React, {PureComponent} from 'react';\n\nimport Share from './share';\nimport UndoRedo from './undoRedo';\n\nimport { updateDocumentTitle } from './../../utils';\n\nimport './styles.css';\n\n\nclass BoardControls extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n          editBoardName : false,\n        };\n      }\n    \n    handleEditBoardName = () => {\n        this.setState({\n            editBoardName : true\n        });\n    };\n\n    handleBlur = (e) => {\n        this.props.updateBoardName(e.target.innerText);\n        updateDocumentTitle(e.target.innerText);\n        this.setState({\n            editBoardName : false\n        });\n    }\n    \n    render() {\n        const {\n            editBoardName\n        } = this.state;\n\n        let contentEditable = false;\n\n        if(editBoardName) {\n            contentEditable = true;\n        }\n\n        return (\n            <div className={\"boardControls\"}>\n                <div className={\"primaryControls\"}>\n                    <span \n                        className={\"boardName\"} \n                        contentEditable={contentEditable}\n                        onClick={this.handleEditBoardName}\n                        onBlur={this.handleBlur}\n                        suppressContentEditableWarning={true}\n                    >{this.props.boardName}</span>\n                    <Share \n                        toggleBoardShare={this.props.toggleBoardShare}\n                    />\n                </div>\n                <UndoRedo \n                    handleUpdateElementsAndState={this.props.handleUpdateElementsAndState}\n                    elements={this.props.elements}\n                    elementState={this.props.elementState}\n                    storeUndo={this.props.storeUndo}\n                />\n            </div>\n        );\n    }\n    \n  }\n\n  export default BoardControls;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass InteractionManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        drag: \"normal\",\n        dragStartX : 0,\n        dragStartY : 0\n      };\n      this.SAFARIHACK_SCREENX = 0;\n      this.SAFARIHACK_SCREENY = 0;\n      this.containerElement = null;\n      this.pointers = [];\n      this.previousPinchZoomDistance = 0;\n    }\n\n    handleMouseWheel = (e) => {\n        if (e.ctrlKey) {\n            e.preventDefault();\n            this.handleZoom(e);\n        } else {\n            const simulatedPanEvent = {\n                movementX : e.deltaX*-1,\n                movementY : e.deltaY*-1\n            };\n            this.props.handlePanMove(simulatedPanEvent);\n        }\n    }\n\n    handleZoom = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.props;\n\n        const dir = Math.sign(e.deltaY),\n        nextZoomLevel = zoomLevel + dir > 0 ? zoomLevel + (dir*2) : 1,\n        currentCursorPositionX = e.clientX*zoomLevel,\n        currentCursorPositionY = e.clientY*zoomLevel,\n        cursorPositionXAfterZoom = e.clientX*nextZoomLevel,\n        cursorPositionYAfterZoom = e.clientY*nextZoomLevel,\n        newOffsetX = offsetX - (cursorPositionXAfterZoom - currentCursorPositionX),\n        newOffsetY = offsetY - (cursorPositionYAfterZoom - currentCursorPositionY);\n\n        this.props.updateBoardPosition({\n            offsetX : newOffsetX,\n            offsetY : newOffsetY,\n            zoomLevel : nextZoomLevel\n        });\n\n    }\n  \n    handlePointerDown = (e) => {\n        e.stopPropagation();\n        if(this.state.drag === \"normal\") {\n            this.setState({\n                dragStartX : e.clientX,\n                dragStartY : e.clientY,\n                dragStartTime : Date.now(),\n                drag : \"mouseDown\",\n                isSelected : this.props.isSelected(e.target.id),\n                isLocked : this.props.isLocked(e.target.id),\n                elementID : e.target.id\n            });\n            this.pointers = [{...e}];\n            this.SAFARIHACK_SCREENX = e.screenX;\n            this.SAFARIHACK_SCREENY = e.screenY;\n        } else if (this.state.drag === \"mouseDown\" || this.state.drag === \"dragging\") {\n            const isSecondPointer  = (e.pointerId !== this.pointers[0].pointerId);\n            if(isSecondPointer) {\n                this.pointers = [...this.pointers, {...e}];\n            }\n        }\n        \n    }\n\n    handlePointerMove = (e) => {\n\n        if(this.pointers.length === 1) {\n            this.handleSinglePointerMove(e);\n        } else if (this.pointers.length > 1) {\n            this.handleMultiPointerMove(e);\n        }\n\n    }\n\n    handleSinglePointerMove = (e) => {\n        const {\n            drag,\n            elementID,\n            isSelected,\n            isLocked,\n            dragStartX,\n            dragStartY\n        } = this.state;\n        \n        this.props.updatePointerPosition({\n            x : (e.clientX*this.props.zoomLevel)+this.props.offsetX,\n            y : (e.clientY*this.props.zoomLevel)+this.props.offsetY\n        });\n        \n        if(drag === \"mouseDown\" || drag === \"dragging\") {\n            let dragHandlers = this.props.dragHandlers[elementID];\n            const wasAccidentalMovement = this.wasAccidentalMovement(dragStartX, dragStartY, e.clientX, e.clientY);\n            e.stopPropagation();\n            const wasStartOfDrag = (drag === \"mouseDown\" && !wasAccidentalMovement);\n            const wasMiddleOfDrag = (dragHandlers && dragHandlers.handleDragMove && !wasAccidentalMovement);\n            const wasCanvasDrag = (!wasAccidentalMovement && !isSelected && elementID !== \"drawCanvas\" && elementID !== \"resizerHandle\" && elementID !== \"elementSelectionArea\");\n            if(wasCanvasDrag || isLocked) {\n                dragHandlers = this.props.dragHandlers[\"board\"];\n                this.setState({elementID : \"board\"});\n            }\n            if(wasStartOfDrag) {\n                this.setState({\n                    drag : \"dragging\"\n                });\n                if(dragHandlers &&\n                    dragHandlers.handleDragStart) {\n                    dragHandlers.handleDragStart(e, dragStartX, dragStartY, e.movementX, e.movementY);\n                }\n               \n            } else if(wasMiddleOfDrag) {\n                //THIS BROWSER HACK IS NEEDED BECAUSE SAFARI POINTERMOVE EVENT DOES NOT SUPPORT MOVEMENTX or MOVEMENTY - PLEASE REMOVE IF NO LONGER NEEDED (i raised a ticket with apple)\n                const movementX = e.screenX-this.SAFARIHACK_SCREENX;\n                const movementY = e.screenY-this.SAFARIHACK_SCREENY;\n                this.SAFARIHACK_SCREENX = e.screenX;\n                this.SAFARIHACK_SCREENY = e.screenY;\n                e.movementX = movementX;\n                e.movementY = movementY;\n                //END BROWSER HACK\n                dragHandlers.handleDragMove(e, dragStartX, dragStartY);\n            }\n        }\n    }\n\n    handleMultiPointerMove = (e) => {\n\n        const newPointers = this.pointers;\n        let previousE;\n\n        for (var i = 0; i < newPointers.length; i++) {\n            if (e.pointerId === newPointers[i].pointerId) {\n                previousE = {...newPointers[i]};\n                newPointers[i] = {...e};\n                break;\n            }\n        }\n\n        var dist = Math.hypot(\n            newPointers[0].clientX - newPointers[1].clientX,\n            newPointers[0].clientY - newPointers[1].clientY);\n\n        const highestX = Math.max(newPointers[0].clientX, newPointers[1].clientX),\n              lowestX = Math.min(newPointers[0].clientX, newPointers[1].clientX),\n              highestY = Math.max(newPointers[0].clientY, newPointers[1].clientY),\n              lowestY = Math.max(newPointers[0].clientY, newPointers[1].clientY);\n        \n        const delta = this.previousPinchZoomDistance - dist;\n\n        if(delta > 0.1 || delta < -0.1) {\n            this.handleZoom({\n                deltaY : delta,\n                clientX : lowestX + ((highestX - lowestX)/2),\n                clientY : lowestY + ((highestY - lowestY)/2)\n            });\n        } else {\n            //TODO would be really nice if 2 finger pan worked on touch.\n            // const simulatedPanEvent = {\n            //     movementX : previousE.clientX-e.clientX,\n            //     movementY : previousE.clientY-e.clientY\n            // };\n            // console.log(previousE.clientX, e.clientX);\n            // this.props.handlePanMove(simulatedPanEvent);\n            console.log(previousE);\n        }\n\n        this.previousPinchZoomDistance = dist;\n    }\n\n    handlePointerUp = (e) => {\n        if(this.pointers.length === 1) {\n            this.handleSinglePointerUp(e);\n        } else if (this.pointers.length > 1) {\n            this.handleMultiPointerUp(e);\n        }\n    }\n\n    handleSinglePointerUp = (e) => {\n        const dragHandlers = this.props.dragHandlers[this.state.elementID];\n        const interactionTime = Date.now() - this.state.dragStartTime;\n        const wasAccidentalMovement = this.wasAccidentalMovement(this.state.dragStartX, this.state.dragStartY, e.clientX, e.clientY);\n        const wasProbablyClick =  wasAccidentalMovement && interactionTime < 200;\n        if(this.state.drag === \"dragging\" && !wasProbablyClick) {\n            e.stopPropagation();\n            if(dragHandlers && dragHandlers.handleDragEnd) {\n                dragHandlers.handleDragEnd(e);\n            }\n            \n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n            \n        } else if(this.state.drag === \"normal\" || this.state.drag === \"mouseDown\" || (this.state.drag === \"dragging\" && wasProbablyClick)) {\n            if(dragHandlers && dragHandlers.handleClick) {\n                dragHandlers.handleClick(e, this.state.dragStartX, this.state.dragStartY);\n            }\n            this.setState({\n                drag : \"normal\",\n                dragStartX : 0,\n                dragStartY : 0\n            });\n        }\n    }\n\n    handleMultiPointerUp = (e) => {\n        this.pointers.pop();\n    }\n\n    wasAccidentalMovement(dragStartX, dragStartY, currentX, currentY) {\n        const interactionMovement = (dragStartX+dragStartY)-(currentX+currentY);\n        return (interactionMovement > -3 && interactionMovement < 3)\n    }\n\n    render() {\n\n        const styles={\n            cursor : \"pointer\",\n            position : \"absolute\",\n            top : 0,\n            left : 0,\n            height : \"100vh\",\n            width : \"100vw\",\n            touchAction : \"none\"\n        }\n        \n        return (\n            <div\n                style={styles}\n                onPointerDown={this.handlePointerDown}\n                onPointerMove={this.handlePointerMove}\n                onPointerUp={this.handlePointerUp}\n                id=\"interActionManager\"\n                ref={(container) => { this.containerElement = container; }}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mouseleave\", (e) => {\n            const {\n                drag\n            } = this.state;\n            if(drag === \"mouseDown\" || drag === \"dragging\") {\n                //this.handleMouseUp(e); TODO Figure out how to do this while still keeping toolbar happy.\n            }\n        });\n        this.containerElement.addEventListener('wheel', this.handleMouseWheel,{ passive: false });\n    }\n    \n  }\n\n  export default InteractionManager;","import React, {PureComponent} from 'react';\n\n\nclass KeyboardManager extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n      };\n    }\n\n    handleKeyPress = (e) => {\n        \n        const isTextBox = this.props.textEditor !== null || e.target.tagName === \"INPUT\" || e.target.getAttribute(\"contentEditable\") === \"true\";\n        if(e.key === \"Backspace\" && !isTextBox) {\n            e.preventDefault();\n            this.props.handleDeleteElements();\n        } else if(\n            (e.ctrlKey === true && e.key === \"d\") ||\n            (e.metaKey === true && e.key === \"d\")\n        ) {\n            e.preventDefault();\n            this.props.handleDuplicateElements();\n        } else if (e.key === \"ArrowDown\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"down\");\n        } else if (e.key === \"ArrowUp\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"up\");\n        } else if (e.key === \"ArrowLeft\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"left\");\n        } else if (e.key === \"ArrowRight\" && !isTextBox) {\n            this.props.shuntSelectedElements(\"right\");\n        } else if (\n            ((e.ctrlKey === true && e.key === \"c\") ||\n            (e.metaKey === true && e.key === \"c\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.copy();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"x\") ||\n            (e.metaKey === true && e.key === \"x\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.cut();\n        } else if (\n            ((e.ctrlKey === true && e.key === \"v\") ||\n            (e.metaKey === true && e.key === \"v\")) && !isTextBox\n        ) {\n            e.preventDefault();\n            this.props.paste();\n        }\n        //TAB THROUGH ELEMENTS\n    }\n\n    render() {\n        return (\n            <div\n                id=\"keyboardManager\"\n                styles={{\n                    display: \"none\"\n                }}\n            />\n            \n        );\n    }\n\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n  }\n\n  export default KeyboardManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Avatar extends Component {\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            backgroundColor : color\n        };\n\n        return (\n            <div className=\"multiUser_UserDockAvatar\" style={wrapperCSS}>\n                {this.props.data.name}\n            </div>\n        );\n    }\n}\n\nexport default Avatar;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Cursor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n        this.cursorRef = React.createRef();\n        this.cursorAnimation = null;\n        this.lastUpdate = null;\n    }\n\n    render() {\n        const { color } = this.props.data;\n\n        const wrapperCSS = {\n            color\n        };\n\n        return (\n            <div className=\"multiUser_UserCursorWrapper\" ref={this.cursorRef} style={wrapperCSS}>\n                <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" className=\"multiUser_UserCursor\">\n                    <path fill={color} d=\"m0.2125,0.101564l5.116674,15.552611c1.603039,-5.720502 1.863999,-7.627336 10.401108,-9.534169l-15.517782,-6.018442z\" />\n                </svg>\n                {this.props.data.initials}\n            </div>\n        );\n    }\n    \n    animateMouse = (prevX, prevY, currentX, currentY) => {\n        this.cursorRef.current.animate(\n            [\n                {transform : `translate3d(${prevX}px, ${prevY}px, 0px)`},\n                {transform : `translate3d(${currentX}px, ${currentY}px, 0px)`}\n            ]\n        , {\n            fill: 'forwards',\n            easing: 'ease-out',\n            duration: 500\n          });\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel,\n            data\n        } = this.props;\n\n        const currentX = data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel),\n              prevX = prevProps.data.pointerPosition.x/prevProps.zoomLevel-(prevProps.offsetX/prevProps.zoomLevel),\n              prevY = prevProps.data.pointerPosition.y/prevProps.zoomLevel-(prevProps.offsetY/prevProps.zoomLevel);\n        \n        const mouseXDidUpdate = (prevX !== currentX);\n        const mouseYDidUpdate =  (prevY !== currentY);\n        const mouseDidUpdate = mouseXDidUpdate || mouseYDidUpdate;\n        if(mouseDidUpdate) {\n            \n            this.animateMouse(prevX, prevY, currentX, currentY);\n\n        }\n    }\n\n    componentDidMount() {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel,\n            data\n        } = this.props;\n\n        const currentX = data.pointerPosition.x/zoomLevel-(offsetX/zoomLevel),\n              currentY = data.pointerPosition.y/zoomLevel-(offsetY/zoomLevel);\n        this.animateMouse(0, 0, currentX, currentY);\n    }\n}\n\nexport default Cursor;","import React, {Component} from 'react';\n\nimport './styles.css';\n\n\nclass Credentials extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      \n      this.state = {\n          boardID : this.props.boardID,\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n      };\n    }\n\n    handleNicknameUpdate = (e) => {\n        this.setState({\n            name : e.target.value\n        });\n    }\n\n    handleBoardIDUpdate = (e) => {\n        this.setState({\n            boardID : e.target.value\n        });\n    }\n\n    handleInitalsUpdate = (e) => {\n        this.setState({\n            initials : e.target.value\n        });\n    }\n\n    handleSecurityCodeUpdate = (e) => {\n        this.setState({\n            securityCode : e.target.value\n        });\n    }\n\n    handleSubmitCredentials = () => {\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n\n        const creds = {\n            securityCode,\n            name,\n            initials,\n            boardID\n        };\n       this.props.setJoinCreds(creds);\n\n    }\n\n    render() {\n\n        const {\n            securityCode,\n            name,\n            initials,\n            boardID\n        } = this.state;\n        \n        return (\n            <div className={\"multiUser_requestCreds\"}>\n                <h3>Enter session credentials</h3>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Board ID : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"xxxxxx\"\n                        value={boardID}\n                        onChange={this.handleBoardIDUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your nickname : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"e.g. john\"\n                        value={name}\n                        onChange={this.handleNicknameUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>your initials : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        placeholder=\"js\"\n                        value={initials}\n                        onChange={this.handleInitalsUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <label>Security code : </label>\n                    <input \n                        className=\"share_menu_input\"\n                        defaultValue={securityCode}\n                        onChange={this.handleSecurityCodeUpdate}\n                    />\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.handleSubmitCredentials}\n                    >Join board</button>\n                </div>\n                <div className=\"share_menu_fieldrow\">\n                    <button \n                        className=\"share_menu_button\"\n                        onClick={this.props.cancelJoinCreds}\n                    >Cancel</button>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Credentials;","import React, {Component} from 'react';\n\nimport Avatar from \"./avatar\";\nimport Cursor from \"./cursor\";\nimport Credentials from \"./credentials\";\n\nimport {createNewObjectsForChangedElements} from \"../../utils\";\n\nimport './styles.css';\n\nconst rfc6902 = require('rfc6902');\n\n//const colors = [\"#A5DDE8\", \"#2B9DD6\", \"#F7DA34\", \"#F79854\", \"#E8553F\"];\nconst colors = [\"#F2275A\", \"#1B73B8\", \"#58BF3B\", \"#FFE800\", \"#F26130\"];\n\n//const HOST = \"http://192.168.178.30:3001/\";\nconst HOST = \"https://miral-server.herokuapp.com/\";\n\nclass MultiUserManager extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      let min = 0,\n          max = 4;\n      this.state = {\n          isParticipant : false,\n          requestCreds : false,\n          boardError : null,\n          socket : null,\n          boardUsers : {},\n          companyName : \"unfoldbio\",\n          boardID : \"\",\n          securityCode : \"\",\n          name : \"\",\n          initials : \"\",\n          id : this.props.userID,\n          color : colors[Math.floor(Math.random(Date.now()) * (max - min + 1)) + min],\n          prevCombinedBoardData : {\n              elements : {...this.props.elements},\n              elementState : {...this.elementState}\n          }\n      };\n      this.emitQueue = {};\n    }\n\n    getJoinCreds = (organisation, boardID) => {\n        const newState = {\n            requestCreds : true\n        };\n        if(organisation) {\n            newState.organisation = organisation;\n        }\n        if(boardID) {\n            newState.boardID = boardID;\n        }\n        this.setState(newState);\n    }\n\n    setJoinCreds = (creds) => {\n        const newState = Object.assign({}, creds, {requestCreds : false});\n        this.setState(newState);\n        this.setupJoinBoardSocketConnection(creds);\n    }\n\n    cancelJoinCreds = () => {\n        const newState =  {requestCreds : false};\n        this.setState(newState);\n    }\n\n    setupShareBoardSocketConnection = (meetingData) => {\n        const {\n            companyName\n        } = this.state;\n\n        const {\n            boardID,\n            securityCode,\n            name,\n            initials\n        } = meetingData;\n\n        const io = window.io;\n        \n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        window.workshoppr.socket = socket; //FOR AUTOM. TESTING ONLY\n\n        this.setState({\n            socket,\n            boardID,\n            securityCode,\n            name,\n            initials\n        });\n\n        socket.on(\"connect\", this.shareBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n        \n    }\n\n    setupJoinBoardSocketConnection = (creds) => {\n        const {\n            securityCode,\n            name,\n            initials\n        } = creds;\n\n        const {\n            companyName\n        } = this.state;\n\n        const io = window.io;\n        const socket = io(`${HOST}${companyName}`, {'reconnectionAttempts': 10});\n        window.workshoppr.socket = socket; //FOR AUTOM. TESTING ONLY\n        \n        this.setState({\n            securityCode,\n            name,\n            initials,\n            socket,\n            isParticipant : true\n        });\n\n        socket.on(\"connect\", this.joinBoard);\n        socket.on(\"connect_error\", this.connectionFailed);\n        socket.on('initializeBoard', this.initializeBoard)\n        socket.on('userJoin', this.userJoin);\n        socket.on('userLeft', this.userLeft);\n        socket.on('updatePointer', this.updatePointer);\n        socket.on('updateBoard', this.updateBoard);\n\n        socket.on('shareEnded', this.shareEnded);\n       \n    }\n\n    shareBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const owner = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition,\n        };\n\n        const boardContents = {\n            elements : this.props.elements,\n            elementState : this.props.elementState\n        };\n        \n        socket.emit(\"shareBoard\", {\n            boardID,\n            boardContents,\n            owner,\n            securityCode,\n            duration : 40\n        });\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    connectionFailed = (error) => {\n        console.log(error);\n        this.state.socket.disconnect();\n        this.setState({\n            boardError : \"connection to sharing server failed\"\n        });\n    }\n\n    joinBoard = () => {\n        const {\n            id,\n            color,\n            boardID,\n            securityCode,\n            name,\n            initials,\n            socket\n        } = this.state;\n\n        const user = {\n            id,\n            color,\n            name,\n            initials,\n            pointerPosition : this.props.pointerPosition\n        };\n\n        socket.emit(\"joinBoard\", {\n            boardID,\n            user,\n            securityCode\n        });\n\n        setInterval(this.purgeEmitQueue, 500);\n        setInterval(this.checkBoardForUpdates, 1000);\n    }\n\n    hideErrorScreen = () => {\n        //this.props.clearSharingData();\n        this.setState({\n            boardError : null\n        });\n    }\n\n    initializeBoard = (boardData) => {\n        this.props.handleUpdateElementsAndState(boardData.boardContents);\n        this.setState({\n           boardUsers : boardData.users \n        });\n    }\n\n    updatePointer = (data) => {\n        const testIfUserJoinedYet = this.state.boardUsers[data.id];\n        if(testIfUserJoinedYet) {\n            const newBoardUsers = {...this.state.boardUsers};\n            const newBoardUser = {...newBoardUsers[data.id]};\n            newBoardUser.pointerPosition = data.pointerPosition;\n            newBoardUsers[data.id] = newBoardUser;\n            this.setState({\n                boardUsers : newBoardUsers\n            });\n        }\n    }\n\n    userJoin = (userData) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        newBoardUsers[userData.id] = userData;\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    userLeft = (userID) => {\n        const newBoardUsers = {...this.state.boardUsers};\n        delete newBoardUsers[userID];\n        this.setState({\n            boardUsers : newBoardUsers\n        });\n    }\n\n    updateBoard = (data) => {\n        const newCombinedData = createNewObjectsForChangedElements({\n            elements : {...this.props.elements},\n            elementState : {...this.props.elementState}\n        }, data.elementsDiffUpdates);\n        rfc6902.applyPatch(newCombinedData, data.elementsDiffUpdates);\n        // console.log(\"new patch\", data.elementsDiffUpdates);\n        // console.log(\"recieved update\", newCombinedData);\n        this.setState({\n            prevCombinedBoardData : newCombinedData\n        });\n        this.props.handleUpdateElementsAndState(newCombinedData);\n    }\n\n    shareEnded = (data) => {\n        this.setState({\n            boardError : data.reason\n        });\n    }\n\n    addToEmitQueue = (event, payload) => {\n        const {\n            emitQueue\n        } = this;\n        if(!emitQueue[event]) {\n            emitQueue[event] = [];\n        }\n        emitQueue[event].push(payload);\n    }\n\n    purgeEmitQueue = () => {\n        const {\n            socket\n        } = this.state;\n        Object.keys(this.emitQueue).forEach(event => {\n            const lastItem = this.emitQueue[event].pop();\n            socket.emit(event, lastItem);\n            delete this.emitQueue[event];\n        });\n    }\n\n    render() {\n\n        const {\n            boardID,\n            boardUsers,\n            isParticipant,\n            requestCreds,\n            socket,\n            boardError\n        } = this.state;\n\n        const {\n            shareBoard\n        } = this.props;\n\n        let userDockItems = [];\n        let userCursors = [];\n\n        const containerStyles = {\n            pointerEvents: \"none\",\n            position: \"fixed\",\n            left : 0,\n            top: 0,\n            height: \"100vh\",\n            width : \"100vw\"\n        };\n\n        const isInSharedMeeting = (shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            if(Object.keys(boardUsers).length > 0) {\n                Object.keys(boardUsers).forEach(boardUser => {\n                    userDockItems.push(<Avatar key={boardUser} data={boardUsers[boardUser]}/>);\n                    if(boardUser !== this.state.id) {\n                        userCursors.push(<Cursor \n                            key={boardUsers[boardUser].id+\"_key\"} \n                            data={boardUsers[boardUser]}\n                            offsetX={this.props.offsetX}\n                            offsetY={this.props.offsetY}\n                            zoomLevel={this.props.zoomLevel}\n                        />);\n                    }\n                })\n            }\n            if(boardError) {\n                containerStyles.pointerEvents = \"auto\";\n            }\n        }\n\n        if(boardError || requestCreds) {\n            containerStyles.pointerEvents = \"auto\";\n        }\n        \n        return (\n            <div\n                id=\"mutliUserManager\"\n                style={containerStyles}\n            >\n            {((Object.keys(boardUsers).length > 0) &&\n                <> \n                <div className={\"multiUser_UserDock\"}>\n                    {userDockItems}\n                </div>\n                <div className={\"multiUser_UserCursors\"}>\n                    {userCursors}\n                </div>\n                </>\n            )}\n            {(boardError && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <span className={\"multiUser_boardErrorText\"}>Board unavailable : {boardError}</span>\n                    <div \n                        className={\"multiUser_boardErrorReturn\"}\n                        onClick={this.hideErrorScreen} \n                    >Back</div>\n                </div>\n            )}\n            {(requestCreds && \n                <div className={\"multiUser_boardOverlay\"}>\n                    <Credentials\n                        boardID={boardID}\n                        setJoinCreds={this.setJoinCreds}\n                        cancelJoinCreds={this.cancelJoinCreds}\n                    />\n                </div>\n            )}\n            </div>\n            \n        );\n    }\n\n    checkBoardForUpdates = () => {\n        const {\n            boardID,\n            socket,\n            isParticipant,\n            boardError,\n            prevCombinedBoardData\n        } = this.state;\n\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n\n        if(isInSharedMeeting) {\n            const currentCombinedData = {\n                elements : this.props.elements,\n                elementState : this.props.elementState \n            };\n            const elementsDiffUpdates = rfc6902.createPatch(prevCombinedBoardData, currentCombinedData);\n            if(elementsDiffUpdates.length > 0) {\n                socket.emit(\"updateBoard\", {boardID, elementsDiffUpdates});\n                this.setState({\n                    prevCombinedBoardData : currentCombinedData\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            boardID,\n            socket,\n            id,\n            isParticipant,\n            boardError\n        } = this.state;\n        \n        if(prevProps.shareBoard !== this.props.shareBoard) {\n            if(this.props.shareBoard && !socket) {\n                this.setupShareBoardSocketConnection(this.props.shareBoard);\n            } else {\n                //TODO : emit unShareBoard event\n            }\n        }\n        const isInSharedMeeting = (this.props.shareBoard || isParticipant) && socket && boardError === null;\n        //Evaluate mouseData\n        const { pointerPosition } = this.props;\n        const mouseMoved = (pointerPosition.x !== prevProps.pointerPosition.x) || (pointerPosition.y !== prevProps.pointerPosition.y);\n        if(isInSharedMeeting && mouseMoved) {\n            this.addToEmitQueue(\"updatePointer\", {boardID, id, pointerPosition});\n        }\n    }\n\n    componentDidMount(){\n        //check if is joining a remote board\n        if(window.location.hash.indexOf(\"j=\") !== -1) {\n            const organisation = window.location.hash.match(/o=([^&$]*)/m)[1];\n            const boardID = window.location.hash.match(/j=([^&$]*)/m)[1];\n            this.setState({\n                companyName : organisation,\n                boardID,\n                requestCreds : true\n            });\n        }\n        if(!window.workshoppr) {\n            window.workshoppr = {};\n        }\n        window.workshoppr.joinBoard = this.getJoinCreds;\n    }\n\n    componentWillUnmount(){\n        \n    }\n    \n  }\n\n  export default MultiUserManager;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass SlideListItem extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            editMode : false\n        };\n    }\n\n    handleToggleEditMode = (e) => {\n        e.stopPropagation();\n        this.setState({\n            editMode : !this.state.editMode\n        });\n    }\n\n    handleJumpToSlide = () => {\n        this.props.handleJumpToSlide(this.props.slideID, this.props.slideNumber);\n    }\n\n    handleSlideNameChange = (e) => {\n        this.props.changeSlideName(this.props.slideID, e.target.value);\n    }\n\n    render() {\n        const {\n            editMode\n        } = this.state;\n        return (\n            <div\n                className={\"slideList_item\"} \n                key={`slideList_name_${this.props.slideNumber}`} \n            >\n            {editMode \n                ? (\n                    <div\n                        className={\"slideList_name\"}\n                    >\n                        <span className={\"slideList_identifier\"}>\n                            <input value={this.props.slideName} onChange={this.handleSlideNameChange} />\n                        </span>\n                        <div className={\"slideList_tools\"}>\n                            <span className={\"slideList_close\"} onClick={this.handleToggleEditMode} />\n                        </div>\n                    </div>\n                ) : (\n                    <div \n                        className={\"slideList_name\"}\n                        onClick={this.handleJumpToSlide}\n                    >\n                        <span className={\"slideList_identifier\"}>\n                            {this.props.slideNumber+1} - {this.props.slideName}\n                        </span>\n                        <div className={\"slideList_tools\"}>\n                            <span className={\"slideList_editName\"} onClick={this.handleToggleEditMode} />\n                        </div>\n                    </div>\n                ) \n            }\n            \n            </div>)\n    }\n}\n\nclass SlideNavigator extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            currentSlide : 0,\n            slideNav : false\n        };\n    }\n\n    handleSlideForward = () => {\n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide+1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide].id;\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide].id, 1);\n        }\n\n        \n    } \n\n    handleSlideBackwards = () => {\n        \n        const {\n            currentSlide\n        } = this.state;\n\n        const nextSlide = currentSlide-1;\n\n        const slides = this.props.getSlides();\n\n        const nextSlideID = slides[nextSlide].id;\n\n        if(nextSlideID) {\n            this.props.animateToElement(nextSlideID, 1);\n            this.setState({currentSlide : nextSlide});\n        } else {\n            this.props.animateToElement(slides[currentSlide].id, 1);\n        }\n\n    }\n\n    toggleSlideList = () => {\n        this.setState({\n            slideNav : !this.state.slideNav\n        });\n    }\n\n    handleJumpToSlide = (slideID, slideNumber) => {\n        this.props.animateToElement(slideID, 1);\n        this.setState({currentSlide : slideNumber, slideNav : false});\n    }\n  \n    render() {\n\n        const {\n            currentSlide,\n            slideNav\n        } = this.state;\n\n        const slides = this.props.getSlides();\n\n        const slidesPossible = slides.length > 0;\n\n        const slidesNavStyles = {\n            visibility : \"visible\"\n        }\n\n        if(!slidesPossible) {\n            slidesNavStyles.visibility = \"hidden\";\n        }\n        //TOTEST : Buttons are disabled when user cannot go to next slide\n        let slideBackwardsDisabled = \"buttonDisabled\";\n        if(currentSlide !== 0) {\n            slideBackwardsDisabled = \"\";\n        }\n\n        let slideForwardsDisabled = \"buttonDisabled\";\n        if(currentSlide < slides.length-1) {\n            slideForwardsDisabled = \"\";\n        }\n\n        const slideNavVisible = slideNav ? \"dropDown_open\" : \"\",\n              slideNavIcon = slideNav ? \"openIcon\" : \"\";\n\n        const slideNames = slides.map((slide, i) => {\n            return (\n            <SlideListItem \n                key={`slideList_name_${i}`}\n                slideNumber={i}\n                slideName={slide.slideName}\n                slideID={slide.id}\n                handleJumpToSlide={this.handleJumpToSlide}\n                changeSlideName={this.props.changeSlideName}\n            />);\n        });\n\n        return (\n            <div className={\"slideList_controls\"} style={slidesNavStyles}>\n                <span \n                    className={`iconButton backward ${slideBackwardsDisabled}`}\n                    onClick={this.handleSlideBackwards}\n                />\n                <span\n                    className={`dropDown ${slideNavIcon}`}\n                    onClick={this.toggleSlideList}\n                >Slide {(this.state.currentSlide+1)} of {slides.length}\n                </span>\n                <span \n                    className={`iconButton forward ${slideForwardsDisabled}`}\n                    onClick={this.handleSlideForward}\n                />\n                <div className={`slideList ${slideNavVisible}`}>\n                    {slideNames}\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default SlideNavigator;","import React, {Component} from 'react';\n\nimport './styles.css';\n\nclass Item extends Component {\n    render() {\n        return (\n            <div className={`hub_item`}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nclass TutorialTrigger extends Component {\n    render() {\n        return (\n            <div className={`tutorialTrigger`}>\n                <div className={\"tutorialTriggerContent\"}>\n                    <h2 className={\"tutorialTriggerHeading tutorialTriggerHeading_main\"}>First time?</h2>\n                    <h3 className={\"tutorialTriggerHeading tutorialTriggerHeading_subLine\"}>Explore the sandbox...</h3>\n                    <div className={\"tutorialTriggerCta\"}>{\">\"}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Home extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            savedBoards : this.getSavedBoards()\n        };\n    }\n\n    getSavedBoards = () => {\n        const files = [];\n        Object.keys(window.localStorage).forEach(item => {\n            if(item.indexOf(\"miralFile_\") !== -1) {\n                const fileName = item.replace(\"miralFile_\", \"\");\n                const file = window.localStorage.getItem(item);\n                const dataToLoad = JSON.parse(file);\n                files.push(\n                    <Item\n                        key={`fileOption_${fileName}`} \n                        fileName={fileName}\n                    >\n                        <div className={\"itemCtaImage\"}><img alt=\"file preview\" src={dataToLoad.previewImage} /></div>\n                        <div className={\"itemCtaIconText\"}>{fileName}</div>\n                    </Item>\n                );\n            }\n        });\n        if(files.length === 0) {\n            files.push(<div className=\"navMenu_error\">\n                No saved files found on this browser.\n            </div>);\n        }\n        return files;\n    }\n  \n    render() {\n        const {\n            savedBoards\n        } = this.state;\n        return (\n            <div className={`hub_section hub_home`}>\n                <div className={\"hub_subMenu\"}>\n                    <div className={\"hub_subMenu_item\"}>Your boards</div>\n                    <div className={\"hub_subMenu_item\"}>Groups</div>\n                    <div className={\"hub_subMenu_item\"}>Settings</div>\n                </div>\n                <div className={\"hub_scrollWrapper\"}>\n                    <TutorialTrigger />\n                    <h2 className=\"hub_title\">Your boards</h2>\n                    <div className=\"hub_boards\">\n                        <Item>\n                            <div className={\"itemCtaLogo\"}>{\"+\"}</div>\n                            <div className={\"itemCtaText\"}>new board</div>\n                        </Item>\n                        {savedBoards}\n                    </div>\n                    <h2 className=\"hub_title\">Groups</h2>\n                    <div className=\"hub_boards\">\n                        <Item>\n                            <div className={\"itemCtaLogo\"}>{\"+\"}</div>\n                            <div className={\"itemCtaText\"}>new group</div>\n                        </Item>\n                    </div>\n                    <h2 className=\"hub_title\">Settings</h2>\n                    <div className=\"hub_boards\">\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    // componentDidUpdate() {\n    //     this.getSavedBoards();\n    // }\n    \n}\n\nclass Templates extends Component {\n  \n    render() {\n        return (\n            <div className={`hub_section hub_templates`}>\n                <div className={\"hub_subMenu\"}>\n                    <div className={\"hub_subMenu_item\"}>Popular</div>\n                    <div className={\"hub_subMenu_item\"}>Games</div>\n                    <div className={\"hub_subMenu_item\"}>Agile</div>\n                    <div className={\"hub_subMenu_item\"}>Education</div>\n                </div>\n                <div className={\"hub_scrollWrapper\"}>\n                <h2 className=\"hub_title\">Popular</h2>\n                <div className=\"hub_boards\">\n                    <Item>\n                        <div className={\"itemCtaImage\"}></div>\n                        <div className={\"itemCtaIconText\"}>1-day design sprint</div>\n                    </Item>\n                    <Item>\n                        <div className={\"itemCtaIcon\"}>{\"🔧\"}</div>\n                        <div className={\"itemCtaIconText\"}>Worlds simplest retro</div>\n                    </Item>\n                    <Item>\n                        <div className={\"itemCtaIcon\"}>{\"⚖\"}</div>\n                        <div className={\"itemCtaIconText\"}>Lightening descision Jam</div>\n                    </Item>\n                    <Item>\n                        <div className={\"itemCtaIcon\"}>{\"🏆\"}</div>\n                        <div className={\"itemCtaIconText\"}>Team trust building</div>\n                    </Item>\n                    <Item>\n                        <div className={\"itemCtaIcon\"}>{\"📜\"}</div>\n                        <div className={\"itemCtaIconText\"}>Team charter</div>\n                    </Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                </div>\n                <h2 className=\"hub_title\">Games</h2>\n                <div className=\"hub_boards\">\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                </div>\n                <h2 className=\"hub_title\">Agile</h2>\n                <div className=\"hub_boards\">\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                </div>\n                <h2 className=\"hub_title\">Education</h2>\n                <div className=\"hub_boards\">\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                    <Item></Item>\n                </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nclass Guides extends Component {\n  \n    render() {\n        return (\n            <div className={`hub_section hub_guides`}>\n                <div className={\"hub_subMenu\"}>\n                    <div className={\"hub_subMenu_item\"}>Basics</div>\n                    <div className={\"hub_subMenu_item\"}>Intermediate</div>\n                    <div className={\"hub_subMenu_item\"}>Advanced</div>\n                    <div className={\"hub_subMenu_item\"}>Release notes</div>\n                </div>\n                <div className={\"hub_scrollWrapper\"}>\n                    <h2 className=\"hub_title\">Basics</h2>\n                    <h2 className=\"hub_title\">Intermediate</h2>\n                    <h2 className=\"hub_title\">Advanced</h2>\n                    <h2 className=\"hub_title\">Release notes</h2>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\n\nclass Hub extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            hubVisible : true,\n            currentTab : 0,\n        };\n    }\n\n    hideHub = () => {\n        this.setState({hubVisible : false});\n    }\n\n    switchTab = (e) => {\n        const element = e.target;\n        const currentTab = Array.from(element.parentNode.children).indexOf(element)-1;\n        this.setState({currentTab});\n    }\n  \n    render() {\n        let visibleClass = '';\n        const sectionStyles = {};\n\n        const {\n            hubVisible,\n            currentTab\n        } = this.state;\n\n        if(hubVisible) {\n            visibleClass = 'hubVisible';\n        }\n\n        if(currentTab === 1) {\n            sectionStyles.transform = \"translateX(-100%)\";\n        } else if (currentTab === 2) {\n            sectionStyles.transform = \"translateX(-200%)\";\n        }\n\n        return (\n            <div className={`hub ${visibleClass}`}>\n                <div className={`hubBackground`} onPointerUp={this.hideHub}></div>\n                <div className={\"hubContents\"}>\n                    <div className={\"hubTabs\"}>\n                        <div className={\"hubTabLogo\"} >Workshoppr</div>\n                        <div className={`hubTab ${(currentTab === 0 ? \"selected\" : null)}`} onPointerUp={this.switchTab}>Home</div>\n                        <div className={`hubTab ${(currentTab === 1 ? \"selected\" : null)}`} onPointerUp={this.switchTab}>Templates</div>\n                        <div className={`hubTab ${(currentTab === 2 ? \"selected\" : null)}`} onPointerUp={this.switchTab}>Guides</div>\n                    </div>\n                    <div className={\"hubSections\"} style={sectionStyles}>\n                        <Home />\n                        <Templates />\n                        <Guides />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n  }\n\n  export default Hub;","import React, {PureComponent} from 'react';\n\nclass VisibilityOverlay extends PureComponent {\n  \n    render() {\n        const {shapeProps} = this.props;\n        const iconSize = shapeProps.width/5;\n        return (\n            <foreignObject\n                    className=\"svg_textContainer_foreignObject visibilityOverlay\"\n                    x={shapeProps.x}\n                    y={shapeProps.y}\n                    height={shapeProps.height}\n                    width={shapeProps.width}\n                    style={{\n                        backgroundColor : \"#ccc\",\n                        backgroundImage : \"url('/icons/visibility_off-24px.svg')\",\n                        backgroundPosition : \"center center\",\n                        backgroundSize : `${iconSize}px ${iconSize}px`,\n                        backgroundRepeat : \"no-repeat\",\n                        pointerEvents : \"none\"\n                    }}\n                />\n        );\n    }\n    \n  }\n\n  export default VisibilityOverlay;","import React, {PureComponent} from 'react';\n\nclass WrappedText extends PureComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        const {\n            fontStyle,\n            text\n        } = props;\n\n        this.state = {\n            wordLengths : this.calculateWordLength(text, fontStyle.fontSize, fontStyle.fontFamily)\n        };\n    }\n\n    calculateWordLength = (text, fontSize, fontFamily) => {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.position = 'absolute';\n        svg.style.top = '-100%';\n        svg.style.left = '-100%';\n        const textSizeTester = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        textSizeTester.style.fontSize = fontSize;\n        textSizeTester.style.fontFamily = fontFamily;\n        svg.appendChild(textSizeTester);\n        document.body.appendChild(svg);\n\n        const wordLengths = [];\n        text.split(/\\n|\\r/g).forEach(textBlock => {\n            const wordsInBlock = [];\n            textBlock.split(/\\s/g).forEach(word => {\n                textSizeTester.innerHTML = word + \"&nbsp;\";\n                const textSize = textSizeTester.getComputedTextLength();\n                wordsInBlock.push(textSize);\n            });\n            wordLengths.push(wordsInBlock);\n        });\n\n        document.body.removeChild(svg);\n\n        return wordLengths;\n    }\n\n    wrappedText(text, wordLengths, width) {\n        let newLines = [];\n        text.split(/\\n|\\r/g).forEach((textBlock, textBlockIterator) => {\n            const lines = [\"\"];\n            let lineLength = 0;\n            textBlock.split(/\\s/g).forEach((word, wordIterator) => {\n                \n                const textSize = wordLengths[textBlockIterator][wordIterator];\n                lineLength += textSize;\n                if(lineLength < width) {\n                    lines[lines.length-1] += word + \" \";\n                } else {\n                    lines.push(\"\");\n                    lines[lines.length-1] += word + \" \";\n                    lineLength = textSize;\n                }\n            });\n            newLines = newLines.concat(lines);\n        });\n\n        return newLines;\n        \n    }\n  \n    render() {\n\n        const {\n            shapeProps,\n            fontStyle,\n            text,\n            padding\n        } = this.props;\n\n        const wrappedText = this.wrappedText(\n            text,\n            this.state.wordLengths,\n            shapeProps.width-(padding*2)\n        );\n\n        const textXAndPadding = shapeProps.x + padding;\n        const textWidthMinusPadding = shapeProps.width - (padding*2);\n        const textYAndPadding = shapeProps.y + padding;\n        const areaHeightMinusPadding = shapeProps.height - (padding*2);\n\n        let textAnchor = \"middle\";\n        let textAnchorPosition = textXAndPadding + (textWidthMinusPadding/2);\n        if(fontStyle.textAlign === \"left\") {\n            textAnchor = \"start\";\n            textAnchorPosition = textXAndPadding;\n        } else if (fontStyle.textAlign === \"right\") {\n            textAnchor = \"end\";\n            textAnchorPosition = textXAndPadding + textWidthMinusPadding;\n        }\n\n        const textBlockHeight = (wrappedText.length)*(fontStyle.fontSize*1.4);\n        let textBaseline = \"middle\";\n        let textBaseLinePosition = (textYAndPadding + (areaHeightMinusPadding/2));\n        const isMultiLine = (wrappedText.length > 1);\n        if(isMultiLine) {\n            textBaseline = \"text-before-edge\";\n            textBaseLinePosition = (textYAndPadding + (areaHeightMinusPadding/2)) - textBlockHeight/2;\n        }\n        if(fontStyle.alignItems === \"top\") {\n            textBaseline = \"text-before-edge\";\n            textBaseLinePosition = textYAndPadding;\n        } else if(fontStyle.alignItems === \"bottom\") {\n            textBaseline = \"text-before-edge\";\n            \n            textBaseLinePosition = (textYAndPadding + areaHeightMinusPadding)-textBlockHeight;\n        }\n        return (\n            <text\n                    x={(shapeProps.x)}\n                    y={(textBaseLinePosition)}\n                    fontSize={(fontStyle.fontSize)}\n                    fontFamily={(fontStyle.fontFamily || \"sans-serif\")}\n                    pointerEvents={\"none\"}\n                    textAnchor={textAnchor}\n                    dominantBaseline={(textBaseline)}\n                    style={{\n                        letterSpacing : fontStyle.fontSize*0.0083,\n                        userSelect : \"none\"\n                    }}\n                >\n                    {wrappedText.map((line, i) => {\n                        \n                        const dy = i > 0 ? fontStyle.fontSize*1.4 : fontStyle.fontSize*0.1;\n                        return(<tspan pointerEvents={\"none\"} key={`${line}_${i}`} x={textAnchorPosition} dy={dy} textAnchor={textAnchor}>{line}</tspan>);\n                    })}\n            </text>\n        );\n    }\n    \n  }\n\n  export default WrappedText;","import React, {Component} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\nimport WrappedText from '../shared/wrappedText';\n\nimport './styles.css';\n\nclass Shape extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        let visibility = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByUser\";\n        } else if(elementState.selected) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByOtherUser\";\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        \n        if(data.text) {\n            text = (\n                <WrappedText\n                    shapeProps={shapeProps}\n                    fontStyle={data.fontStyle}\n                    text={data.text}\n                    padding={data.padding}\n                />\n            );\n        }\n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n                {visibility}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Shape;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\nimport WrappedText from '../shared/wrappedText';\n\nimport './styles.css';\n\nclass ElementText extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = () => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text) {\n            text = (\n            <WrappedText\n                shapeProps={shapeProps}\n                fontStyle={data.fontStyle}\n                text={data.text}\n                padding={data.padding}\n            />\n            )\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect \n                    id={data.id}\n                    {...shapeProps}\n                />\n                {text}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    componentDidMount() {\n        if(this.props.isUniqueSelected(this.props.data.id)) {\n            setTimeout(() => {\n                    this.handleTextEdit();\n            }, 300);\n        }\n    }\n    \n  }\n\n  export default ElementText;","import React, {PureComponent} from 'react';\nimport {ThemeContext} from '../../../theme-context';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\nimport WrappedText from '../shared/wrappedText';\n\nimport './styles.css';\n\nconst postItShapeTypes = [\n    {\n        path : \"m12.04544,2.07068l737.03703,11.11111l-1.85186,742.5926l-744.44443,-7.40742l9.25926,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.22659l-17.60868,669.47711l-554.68758,28.18226l-67.95662,-707.88596l-0.00001,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.934329,2.07068l761.481475,-0.000001l2.592584,735.925933l-764.44443,10.370358l0.370371,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l640.25289,10.291407l60.169098,684.901871c-233.784749,-16.594366 -465.347276,-42.16213 -681.354247,10.470427l-19.067731,-705.663705l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l753.03703,7.11111l5.14814,727.5926l-751.44443,-0.40742l-6.74074,-734.29629z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l60.169098,684.901871c-220.059258,-34.241425 -433.974727,-12.750366 -685.275815,14.391995l-15.146163,-709.585273l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m16.095067,4.07068l747.987379,9.831012l-6.861786,727.872709l-752.43448,-9.220688l11.308887,-728.483033z\",\n        dropShadow : \"m44.907991,62.874602l640.25289,10.291407l26.126545,667.880594c-220.059258,-34.241425 -365.889621,55.334741 -634.211985,10.136676l-32.16744,-688.308677l-0.000005,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c0,0 -0.000001,0 -0.000001,0c0,0 0,0 -0.000001,0c0,0 0,0 0,0c-0.000001,0 -0.000001,0 -0.000001,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectShapeTypes = [\n    {\n        path : \"m17.62857,2.07068l1181.45387,11.11111l-2.96849,742.5926l-1193.32777,-7.40742l14.84239,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1130.25287,10.22659l-31.085,669.47711l-979.2025,28.18226l-119.96535,-707.88596l-0.00002,0z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m1.1446,2.07068l1193.7993,0l4.06449,735.92593l-1198.44443,10.37036l0.58064,-746.29629z\",\n        dropShadow : \"m38.82956,79.07068l1020.51677,10.29141l95.90519,684.90187c-372.63597,-16.59437 -741.72988,-42.16213 -1086.02936,10.47042l-30.39258,-705.6637l-0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m1.04544,0.07068l1186.07661,7.11111l8.10862,727.5926l-1183.56818,-0.40742l-10.61705,-734.29629z\",\n        dropShadow : \"m44.90799,62.8746l1026.00134,10.29141l96.42061,684.90187c-352.64362,-34.24142 -695.44185,-12.75037 -1098.15031,14.392l-24.27163,-709.58528l0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m22.52924,4.07068l1173.55324,9.83101l-10.76579,727.87271l-1180.53051,-9.22069l17.74306,-728.48303z\",\n        dropShadow : \"m44.90799,62.8746l1076.45309,10.29141l43.9264,667.88059c-369.98423,-34.24142 -615.16788,55.33474 -1066.29656,10.13668l-54.08291,-688.30868l0,0c0,0 0,0 -0.00002,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0c0,0 0,0 0,0z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nconst postItRectVShapeTypes = [\n    {\n        path : \"m1.04585,1195.29546l3.45387,-1192.88889l746.53151,13.5926l-9.32777,1181.59258l-740.65761,-2.29629z\",\n        dropShadow : \"m754.08243,96.29727l27.915,980.47711l-708.2025,119.18226l9.03465,-1130.88596l671.25285,31.22659z\",\n        filter : \"shadow1\"\n        \n    },\n    {\n        path : \"m0.3946,4.07068l736.5493,-3.75l10.06449,1198.42593l-746.44443,-0.87964l-0.16936,-1193.79629z\",\n        dropShadow : \"m73.29892,130.81302l693.9526,-100.54906c-23.63597,115.40563 -48.72988,863.83787 1.97064,1090.47042l-706.15792,32.70747l10.23468,-1022.62883z\",\n        filter : \"shadow2\"\n        \n    },\n    {\n        path : \"m12.04544,11.07068l728.07661,-8.88889l-1.89138,1182.5926l-735.56818,11.59258l9.38295,-1185.29629z\",\n        dropShadow : \"m71.90933,126.41601l690.42061,-99.09813c-47.64362,326.75858 -4.44185,938.24963 9.84969,1099.392l-708.27064,23.63328l8.00034,-1023.92715z\",\n        filter : \"shadow2\"\n    },\n    {\n        path : \"m15.52924,6.07068l732.55324,10.83101l-11.76579,1179.87271l-728.53051,-17.22069l7.74306,-1173.48303z\",\n        dropShadow : \"m83.36108,54.81461l663.9264,-43.76801c-37.98423,384.30965 72.83212,820.15195 1.70344,1168.13671l-591.04146,-3.2778l-74.58838,-1121.0909z\",\n        filter : \"shadow2\"\n    }\n\n];\n\nclass Postit extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const theme = this.context;\n        const {elementState, data, lowDetail} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let postItBaseWidth = 800;\n        let overlay = null;\n        let shadow = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        if(data.text && !lowDetail) {\n            text = (\n            <WrappedText\n                shapeProps={shapeProps}\n                fontStyle={data.fontStyle}\n                text={data.text}\n                padding={data.padding}\n            />\n            )\n        }\n\n        let postItShapeData = \"\";\n        if(data.subType === \"square\") {\n            postItShapeData = postItShapeTypes[(elementState.shapeType || 0)];\n        } else if (data.subType === \"rect\") {\n            postItShapeData = postItRectShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 1200;\n        } else if (data.subType === \"rectv\") {\n            postItShapeData = postItRectVShapeTypes[(elementState.shapeType || 0)];\n            postItBaseWidth = 730;\n        }\n        const postItColor = data.predefinedColor;\n\n        if(!lowDetail) {\n            shadow = (<path \n                d={postItShapeData.dropShadow} \n                fill=\"rgba(0,0,0, 0.4)\" \n                filter={`url(#${postItShapeData.filter})`}\n            />);\n        }\n        \n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                cursor={this.state.cursor}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <rect\n                    id={data.id} \n                    {...shapeProps}\n                />\n                <g \n                    transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/postItBaseWidth)})`}\n                    pointerEvents={\"none\"}\n                >\n                    {shadow}\n                    <path \n                        d={postItShapeData.path} \n                        fill={(theme.preDefinedColors[postItColor])}\n                    />\n                </g>\n                {text}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    \n  }\n\n  Postit.contextType = ThemeContext;\n\n  export default Postit;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Line extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleTextEdit = (e) => {\n        this.props.handleTextEdit(this.props.data.id);\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let text = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        // if(data.text) {\n        //     const textBody = data.text.split(/\\n|\\r/).map((line, i) => {\n        //         return(<div key={`${data.id}_${line}_${i}`}>{line}</div>);\n        //     });\n        //     const fontStyle = {\n        //         ...data.fontStyle,\n        //         lineHeight : `${(shapeProps.fontSize*1.4)}px`,\n        //         padding : `${data.padding}px`,\n        //         width : \"100%\"\n        //     };\n        //     text = (\n        //         <foreignObject\n        //             className=\"svg_textContainer_foreignObject\"\n        //             x={shapeProps.x}\n        //             y={shapeProps.y}\n        //             height={shapeProps.height}\n        //             width={shapeProps.width}\n        //         >\n        //             <div\n        //                 className=\"svg_textContainer\"\n        //             >\n        //                 <div className=\"svg_textContainer_line\" style={fontStyle}>{textBody}</div>\n        //             </div>\n                    \n        //         </foreignObject>\n        //     );\n        // }\n\n        if(data.shapeType === 0) {\n            shapeProps.x1 = shapeProps.x;\n            shapeProps.y1 = shapeProps.y + shapeProps.height;\n            shapeProps.x2 = shapeProps.x + shapeProps.width;\n            shapeProps.y2 = shapeProps.y;\n            shape = <line\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.d = `M ${shapeProps.x} ${shapeProps.y + shapeProps.height} q 0 ${-shapeProps.height} ${(shapeProps.width)} ${(-shapeProps.height)}`;\n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n           \n            shape = <path\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n        \n        return (\n            <g \n                onDoubleClick={this.handleTextEdit}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {text}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Line;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Image extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleCrop = (e) => {\n\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let image = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n            \n        image = (\n            <image\n                className=\"svg_imageContainer\"\n                href={data.URL}\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            />\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                onDoubleClick={this.handleCrop}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {image}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Image;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Slide extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let background = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByUser\";\n        } else if(elementState.selected) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByOtherUser\";\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const fontSize = `${16*data.initialZoomLevel}px`,\n              lineHeight = `${16*data.initialZoomLevel*1.4}px`;\n\n        const slideTitle = (data.slideName === \"Unnamed\") ? `Slide ${this.props.slideNumber}` : data.slideName;\n            \n        background = (\n            <foreignObject\n                className=\"svg_slideContainer_foreignObject\"\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                <div className={\"svg_SlideWrapper\"}>\n                    <div \n                        className=\"svg_slideHeader\"\n                    >\n                        <div\n                            style={{\n                                fontSize,\n                                lineHeight,\n                                padding : `0 ${(16*data.initialZoomLevel)}px`\n                            }}\n                        >{slideTitle}</div>\n                    </div>\n                    <div \n                        className=\"svg_slideBackground\"\n                        style={{\n                            border : `${(data.initialZoomLevel*2)}px outset`,\n                            width : `${(shapeProps.width-(data.initialZoomLevel*4))}px`,\n                            backgroundColor : shapeProps.fill\n                        }}\n                    />\n                </div>\n            </foreignObject>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n            fillOpacity={0}\n        />;\n\n        \n        return (\n            <g\n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {background}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Slide;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Link extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n\n    handleLinkClick = (e) => {\n        if(this.props.data.link.indexOf(\"element://\") !== -1) {\n            const element = this.props.data.link.split(\"://\")[1];\n            this.props.animateToElement(element, 1);\n        } else if (this.props.data.link.indexOf(\"wswb\") !== -1) {\n            const realURL = this.props.data.link.replace(/wswb/, \"http\");\n            this.props.loadRemoteBoard(realURL);\n        } else if (this.props.data.link.indexOf(\"http\") !== -1) {\n            window.open(this.props.data.link,'_blank');\n        }\n        \n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let shape = null;\n        let overlay = null;\n        let linkHitArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 15*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n        \n\n        if(data.shapeType === 0) {\n            shape = <rect\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 1) {\n            shapeProps.r = shapeProps.width/2;\n            shapeProps.cx = shapeProps.x+shapeProps.r;\n            shapeProps.cy = shapeProps.y+shapeProps.r;\n            \n            shape = <circle\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else if (data.shapeType === 2) {\n            const triangleStart = `${shapeProps.x+shapeProps.width/2},${shapeProps.y}`,\n                  triangleMid = `${shapeProps.x},${shapeProps.y+shapeProps.height}`,\n                  triangleEnd = `${shapeProps.x+shapeProps.width},${shapeProps.y+shapeProps.height}`;\n            shapeProps.points = `${triangleStart} ${triangleMid} ${triangleEnd}`;\n            shape = <polygon\n                id={data.id} \n                {...shapeProps}\n            />;\n        } else {\n            shape = <text>No Shape Type Set</text>;\n        }\n\n        if(data.link) {\n            \n            linkHitArea = (<rect \n                height={shapeProps.height-strokeWidth}\n                width={shapeProps.width-strokeWidth}\n                x={shapeProps.x+(strokeWidth/2)}\n                y={shapeProps.y+(strokeWidth/2)}\n                fillOpacity={0}\n                onClick={this.handleLinkClick}\n                cursor={\"pointer\"}\n            />);\n\n        }\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {linkHitArea}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Link;","import React, {PureComponent} from 'react';\n\nimport './styles.css';\n\nclass Youtube extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n          iframePointerEvents : \"none\"\n      };\n      this.iframe = null;\n      this.currentFocus = null;\n    }\n\n    checkFocus = () => {\n        if(document.activeElement.title !== this.currentFocus) {\n          this.disableInteraction();\n        } else {\n            setTimeout(this.checkFocus, 1000);\n        }\n      }\n\n    handlePlayIntent = () => {\n        this.setState({iframePointerEvents : \"auto\"});\n        this.iframe.contentWindow.focus();\n        this.currentFocus = document.activeElement.title;\n        setTimeout(this.checkFocus, 1000);\n    }\n\n    disableInteraction = () => {\n        this.setState({iframePointerEvents : \"none\"});\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let iframe = null;\n        let overlay = null;\n        let hitArea = null;\n        let playArea = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 20*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n\n        let iframeOpacity = 1;\n        if(this.state.iframePointerEvents === \"none\") {\n            iframeOpacity = 0.6;\n        }\n\n        \n        const youtubeIDMatcher = /(?:embed\\/|v=)\\b(.+?)(?![\\w-])/g;\n        const videoID = youtubeIDMatcher.exec(data.URL);\n        const youtubeURL = \"https://www.youtube.com/embed/\"+videoID[1];\n        \n        iframe = \n            <foreignObject\n                x={shapeProps.x}\n                y={shapeProps.y}\n                height={shapeProps.height}\n                width={shapeProps.width}\n                fill=\"#000\"\n                pointerEvents={this.state.iframePointerEvents}\n\n            >\n                <iframe\n                    title={\"youtubeVideo\"+data.id}\n                    width={(shapeProps.width/data.initialZoomLevel)}\n                    height={(shapeProps.height/data.initialZoomLevel)} \n                    src={youtubeURL} \n                    frameBorder=\"0\" \n                    allow=\"clipboard-write; encrypted-media; picture-in-picture\"\n                    allowFullScreen={true}\n                    style={{\n                        transform : `scale(${data.initialZoomLevel})`,\n                        transformOrigin : \"top\",\n                        opacity: iframeOpacity\n                    }}\n                    ref={(container) => { this.iframe = container; }}\n                />\n            \n            </foreignObject>;\n            \n        hitArea = (<rect\n            id={data.id} \n            x={shapeProps.x}\n            y={shapeProps.y}\n            height={shapeProps.height}\n            width={shapeProps.width}\n            fillOpacity={0}\n        />);\n        // CHANGE THIS SO THERE IS TEXT WHEN IT IS GREYED OUT SAYING DOUBLE CLICK TO ACIVATE, \n        if(this.state.iframePointerEvents === \"none\") {\n            playArea = (\n                <rect\n                    x={(shapeProps.x+(shapeProps.width/2)-(68*data.initialZoomLevel)/2)}\n                    y={(shapeProps.y+(shapeProps.height/2)-(48*data.initialZoomLevel)/2)}\n                    height={(48*data.initialZoomLevel)}\n                    width={(68*data.initialZoomLevel)}\n                    fillOpacity={0}\n                    cursor={\"pointer\"}\n                    onClick={this.handlePlayIntent}\n                />\n            );\n        }\n        \n\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {hitArea}\n                {iframe}\n                {playArea}\n                {overlay}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Youtube;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Emoji extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {};\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let emoji = null;\n        let shape = null;\n        let overlay = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px dashed #5086F2`};\n        } else if(elementState.selected) {\n            shapeProps.style = {outline : `${(data.initialZoomLevel)}px solid #666`};\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n        emoji = (\n            <g\n            transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/24)})`}\n            pointerEvents={\"none\"}\n            >\n                <text\n                    fontFamily={\"'Noto Color Emoji', 'Apple Color Emoji', 'Segoe UI Emoji', Times, Symbola, Aegyptus, Code2000, Code2001, Code2002, Musica, serif, LastResort\"}\n                    fontSize={\"24px\"}\n                    x={0}\n                    y={24}\n                    dy={-1}\n                    textLength={24}\n                    pointerEvents={\"none\"}\n                    style={{userSelect: \"none\"}}\n                >\n                    {data.emojiCharacterCode}\n                </text>\n            </g>\n        );\n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        \n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {emoji}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n    \n  }\n\n  export default Emoji;","import React, {PureComponent} from 'react';\nimport VisibilityOverlay from '../shared/visibilityOverlay';\n\nimport './styles.css';\n\nclass Dice extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n          diceAnimation : null\n      };\n      this.audio = new Audio('/sounds/dice.mp3');\n    }\n\n    generateRandomDiceNumber() {\n        return Math.floor(Math.random() * (5 - 0 + 1)) + 0;\n    }\n\n    handleDiceClick = (e) => {\n        e.stopPropagation();\n        this.props.handleUpdateElementProperty({\n            id : [this.props.data.id],\n            update : {\n                diceNumber : this.generateRandomDiceNumber()\n            }\n        });\n    }\n  \n    render() {\n        const {elementState, data} = this.props;\n        const shapeProps = {...this.props.data.styles};\n        let shape = null;\n        let overlay = null;\n        let dice = null;\n        if(this.props.isSelected(data.id)) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByUser\";\n        } else if(elementState.selected) {\n            shapeProps.style = {outlineWidth : `${(data.initialZoomLevel)}px`};\n            shapeProps.className = \"elementSelectedByOtherUser\";\n            overlay = (<rect \n                {...shapeProps}\n                fillOpacity={\"0.3\"}\n                fill=\"#000000\"\n            />);\n        }\n\n        const strokeWidth = 15*data.initialZoomLevel;\n\n        shapeProps.fill = \"url(#diagonalHatch)\";\n        shapeProps.fillOpacity = \"1\";\n        shapeProps.stroke = \"#ccc\";\n        shapeProps.strokeOpacity = \"0.3\";\n        shapeProps.strokeWidth = strokeWidth;\n        \n        shape = <rect\n            id={data.id} \n            {...shapeProps}\n        />;\n\n        const diceFaces = [\n            [[20,20]],\n            [[10,30], [30,10]],\n            [[10,30], [20,20], [30,10]],\n            [[10,10], [10,30], [30,10], [30, 30]],\n            [[10,10], [10,30], [20, 20], [30,10], [30, 30]],\n            [[10,10], [10,20], [10, 30], [30,10], [30, 20], [30, 30]]\n        ];\n\n        const diceNumberToUse = this.state.diceAnimation || data.diceNumber;\n\n        dice = (\n            <g\n            transform={`translate(${shapeProps.x} ${shapeProps.y}) scale(${(shapeProps.width/40)})`}\n            >\n                <rect\n                    x={\"0\"}\n                    y={\"0\"}\n                    width={\"40\"}\n                    height={\"40\"}\n                    cursor={\"pointer\"}\n                    fill={\"#333\"}\n                    onClick={this.handleDiceClick}\n                />\n                {\n                    diceFaces[diceNumberToUse].map(diceCoords => {\n                        return <circle\n                            key={`diceFace_${diceCoords[0]}_${diceCoords[1]}`} \n                            r={4}\n                            cx={diceCoords[0]}\n                            cy={diceCoords[1]}\n                            fill={\"#fff\"}\n                            pointerEvents={\"none\"}\n                        />;\n                    })\n                }\n\n            </g>\n        );\n\n        return (\n            <g \n                height={shapeProps.height}\n                width={shapeProps.width}\n            >\n                {shape}\n                {dice}\n                {overlay}\n                {data.hidden && (\n                    <VisibilityOverlay \n                        shapeProps={shapeProps}\n                    />\n                )}\n            </g>\n        );\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.data.diceNumber !== this.props.data.diceNumber) {\n            const intervalMax = 6;\n            let intervalCount = 0;\n            this.audio.play();\n            const interval = setInterval(() => {\n                if(intervalCount > intervalMax) {\n                    this.setState({diceAnimation : null});\n                    clearInterval(interval);\n                } else {\n                    this.setState({diceAnimation : this.generateRandomDiceNumber()})\n                }\n                intervalCount++; \n            }, 200);\n        }\n    }\n    \n  }\n\n  export default Dice;","import React, {PureComponent} from 'react';\n\n//ELEMENTS\nimport Shape from './shape';\nimport Text from './text';\nimport Postit from './postit';\nimport Line from './line';\nimport Image from './image';\nimport Slide from './slide';\nimport Link from './link';\nimport Youtube from './youtube';\nimport Emoji from './emoji';\nimport Dice from './dice';\n\n\nclass Elements extends PureComponent {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n       \n      };\n    }\n\n    render() {\n        const {\n            elements,\n            elementState,\n            handleTextEdit,\n            handleSetCurrentElement,\n            isSelected,\n            isUniqueSelected,\n            zoomLevel,\n            animateToElement,\n            loadRemoteBoard,\n            handleUpdateElementProperty\n        } = this.props;\n\n        const slides = [];\n\n        const elementNodes = Object.keys(elements).map(elementID => {\n            const element = elements[elementID];\n            const lowDetail = (element.styles.width/zoomLevel < 20) && (element.styles.height/zoomLevel < 20);\n            if (element.type === \"shape\") {\n                return (<Shape\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"text\") {\n                return (<Text \n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    isUniqueSelected={isUniqueSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"postit\") {\n                return (<Postit\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"line\") {\n                return (<Line\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"image\") {\n                return (<Image\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"slide\") {\n                slides.push(element.id);\n                return (<Slide\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    slideNumber={slides.length}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"link\") {\n                slides.push(element.id);\n                return (<Link\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                    animateToElement={animateToElement}\n                    loadRemoteBoard={loadRemoteBoard}\n                />);\n            } else if (element.type === \"youtube\") {\n                return (<Youtube\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleTextEdit={handleTextEdit}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"emoji\") {\n                return (<Emoji\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            } else if (element.type === \"dice\") {\n                return (<Dice\n                    key={element.id}\n                    data={element}\n                    styles={element.styles}\n                    fontStyles={element.fontStyles}\n                    elementState={elementState[element.id]}\n                    handleSetCurrentElement={handleSetCurrentElement}\n                    handleUpdateElementProperty={handleUpdateElementProperty}\n                    isSelected={isSelected}\n                    lowDetail={lowDetail}\n                />);\n            }\n            return null;\n        });\n        \n        return (\n            <>\n                {elementNodes}\n            </>\n        );\n    }\n    \n  }\n\n  export default Elements;","import React, {Component} from 'react';\n\n\n\n\nclass Pattern extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        \n      };\n    }\n\n    \n\n    render() {\n       \n        const widthHeight = 10*this.props.zoomLevel,\n              strokeWidth = 5*this.props.zoomLevel;\n\n        return (\n            <>\n            <pattern id=\"diagonalHatch\" width={widthHeight} height={widthHeight} patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\">\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2={widthHeight} style={{stroke:\"#ccc\", strokeWidth: strokeWidth, strokeOpacity : 0.2 }} />\n            </pattern>\n            </>\n        );\n    }\n    \n  }\n\n  export default Pattern;","import React, {Component} from 'react';\n\n//UI\nimport Tools from './ui/tools';\nimport DrawCanvas from './ui/tools/drawCanvas';\nimport Altimeter from './ui/altimeter';\nimport TextEditor from './ui/textEditor';\nimport ElementEditor from './ui/elementEditor';\nimport Resizer from './ui/resizer';\nimport ElementDrag from './ui/elementDrag';\nimport NavBar from './ui/navbar';\nimport BoardControls from './ui/boardControls';\nimport InteractionManager from './ui/InteractionManager';\nimport KeyboardManager from './ui/KeyboardManager';\nimport MultiUserManager from './ui/MultiUserManager';\nimport SlideNavigator from './ui/slideNavigator';\nimport Hub from './ui/hub';\n\n//ELEMENTS\nimport Elements from './elements';\n\n//HELPERS\nimport Shortid from 'shortid';\nimport {objectClone, mergeObjects, removeData} from './utils';\n\n//SVG\nimport Pattern from './pattern';\n\nimport './styles.css';\n\n\n\nclass Board extends Component {\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        boardName : \"new-board-\"+new Date().toLocaleDateString().replace(/\\//g, \"\"),\n        boardID : Shortid.generate(),\n        userID : Shortid.generate(),\n        zoomLevel : 50,\n        offsetX : 0,\n        offsetY : 0,\n        tool : \"pan\",\n        dragHandlers : {},\n        clickHandler : null,\n        elements : {},\n        elementState : {},\n        textEditor : null,\n        storeUndo : false,\n        shareBoard : false,\n        multiUserUpdate : false,\n        pointerPosition : {x : 0, y : 0},\n        pasteBuffer : {\n            type : null,\n            elements : [],\n            elementState : []\n        }\n      };\n      this.canvasAnimations = [];\n      this.SVGElementRef = null;\n    }\n\n    handlePanStart = (e, dragStartX, dragStartY) => {\n        this.clearCanvasAnimations();\n        this.panEventTimeStamp = Date.now();\n        this.velocityX = 0;\n        this.velocityY = 0;\n    }\n\n    handlePanMove = (e) => {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        this.setState({\n            offsetX : offsetX + ((e.movementX)*-zoomLevel),\n            offsetY : offsetY + ((e.movementY)*-zoomLevel),\n        });\n\n        const currentTimeStamp = Date.now();\n        const elapsedTime = currentTimeStamp - this.panEventTimeStamp;\n        this.velocityX_pixelsPerMilliSecond = e.movementX/elapsedTime;\n        this.velocityY_pixelsPerMilliSecond = e.movementY/elapsedTime;\n        this.panEventTimeStamp = currentTimeStamp;\n    }\n\n    handlePanEnd(e) {\n        // const {\n        //     offsetX,\n        //     offsetY,\n        //     zoomLevel\n        // } = this.state;\n\n        // //calculate velocity of pan and final destination\n        // const momentumDuration = 300;\n\n        // // const finalPosition = {\n        // //     offsetX : offsetX + ((this.velocityX_pixelsPerMilliSecond*momentumDuration)*-zoomLevel),\n        // //     offsetY : offsetY + ((this.velocityY_pixelsPerMilliSecond*momentumDuration)*-zoomLevel)\n        // // };\n\n        // //this.animateToPosition(finalPosition, 1);\n\n    }\n\n    animateToElement = (elementID, duration) => {\n        const {\n            zoomLevel,\n            elements\n        } = this.state;\n\n        \n\n        const elementData = elements[elementID];\n\n        //get correct zoomLevel\n\n        const elementHeightInReal = elementData.styles.height/zoomLevel,\n              elementWidthInReal = elementData.styles.width/zoomLevel;\n\n        let heightZoomLevel = zoomLevel,\n            widthZoomLevel = zoomLevel;\n        \n        heightZoomLevel = ((elementHeightInReal/this.props.height)*1.3)*zoomLevel;\n        widthZoomLevel = ((elementWidthInReal/this.props.width)*1.3)*zoomLevel;\n\n        const finalZoomLevel = Math.round(Math.max(heightZoomLevel, widthZoomLevel));\n\n        //get element position\n\n        const elementCenterPointX = elementData.styles.x+(elementData.styles.width/2),\n              elementCenterPointY = elementData.styles.y+(elementData.styles.height/2);\n\n        const finalPosition = {\n            offsetX : elementCenterPointX-((this.props.width/2)*finalZoomLevel),\n            offsetY : elementCenterPointY-((this.props.height/2)*finalZoomLevel),\n            zoomLevel : finalZoomLevel\n        };\n\n        //call animateToPosition\n        this.animateToPosition(finalPosition, duration);\n\n    }\n\n    animateToPosition(finalPosition, duration) {\n        const {\n            offsetX,\n            offsetY,\n            zoomLevel\n        } = this.state;\n\n        const FPS = 30,\n              durationMs = duration*1000,\n              stepCount = durationMs / FPS,\n              endValueX = finalPosition.offsetX,\n              endValueY = finalPosition.offsetY,\n              endZoomLevel = finalPosition.zoomLevel,\n              valueIncrementX = (endValueX - offsetX) / stepCount,\n              valueIncrementY = (endValueY - offsetY) / stepCount,\n              valueIncrementZoom = (endZoomLevel - zoomLevel) / stepCount,\n              sinValueIncrement = Math.PI / stepCount;\n\n        let currentValueX = offsetX,\n            currentValueY = offsetY,\n            currentZoomLevel = zoomLevel,\n            currentSinValue = 0,\n            counter = 0;\n        \n        this.clearCanvasAnimations();\n\n        do {\n            counter++;\n            currentSinValue += sinValueIncrement;\n            currentZoomLevel += Math.round(valueIncrementZoom * (Math.sin(currentSinValue) ** 2) * 2);\n            currentValueX += valueIncrementX * (Math.sin(currentSinValue) ** 2) * 2;\n            currentValueY += valueIncrementY * (Math.sin(currentSinValue) ** 2) * 2;\n            let time = stepCount*counter;\n\n            (function(newOffsetX, newOffsetY, newZoomLevel, incrementDelay) {\n                this.canvasAnimations.push(setTimeout(() => {\n                    this.setState({\n                        offsetX : newOffsetX,\n                        offsetY : newOffsetY,\n                        zoomLevel : newZoomLevel\n                    });\n                }, incrementDelay));\n            }.bind(this)(currentValueX, currentValueY, currentZoomLevel, time));\n\n        } while (currentSinValue < Math.PI)\n\n    }\n\n    clearCanvasAnimations = () => {\n        this.canvasAnimations.forEach(animation => {\n            clearTimeout(animation);\n        });\n        this.canvasAnimations = [];\n    }\n\n    handleTextEdit = (id) => {\n        const newElements = {...this.state.elements};\n        const prevElementData = {...this.state.elements[id]};\n        const elementData = {...this.state.elements[id]};\n        //clear Text in real element to prevent shadow\n        elementData.text = \"\";\n        newElements[id] = elementData;\n        this.setState({textEditor : prevElementData, elements : newElements});\n    }\n\n    handleUpdatedText = (data) => {\n        const newElementsData = {...this.state.elements};\n        const newElement = {...newElementsData[data.id]};\n        newElement.text = data.newText;\n        newElement.fontStyle.fontSize = data.fontSize;\n        newElement.unScaledFontSize = data.fontSize;\n        newElement.padding = 8*this.state.zoomLevel;\n        \n        newElementsData[data.id] = newElement;\n        this.setState({\n            elements : newElementsData,\n            storeUndo : true,\n            textEditor : null\n        });\n    }\n\n    selectGroupedElements = (newElementState) => {\n        const selectedElements = this.getSelectedElements(newElementState);\n        selectedElements.forEach(element => {\n            if(element.groups.length) {\n                const groups = element.groups;\n                groups.forEach(group => {\n                    const groupElements = Object.keys(this.state.elements).filter(element => this.state.elements[element].groups.indexOf(group) !== -1);\n                    groupElements.forEach(groupedElement => {\n                        newElementState[groupedElement] = {...newElementState[groupedElement]};\n                        newElementState[groupedElement].selected = this.state.userID;\n                    })\n                })\n            }\n        })\n        return newElementState;\n    }\n\n    handleSetCurrentElement = (elementID, isMultiSelect) => {\n        let newElementStateData = {...this.state.elementState};\n        if(!isMultiSelect) {\n            Object.keys(newElementStateData).forEach(item => {\n                if(this.isSelected(item)) {\n                    const newElement = {...newElementStateData[item]};\n                    newElement.selected = false;\n                    newElementStateData[item] = newElement;\n                }\n            });\n        }\n        const newSelectedElement = {...newElementStateData[elementID]};\n        if(this.isSelected(elementID) && isMultiSelect) {\n            newSelectedElement.selected = false;\n        } else if (!this.isSelected(elementID) && newElementStateData[elementID].selected === false) {\n            newSelectedElement.selected = this.state.userID;\n        } else if (this.isSelected(elementID) && !isMultiSelect) {\n            newSelectedElement.selected = this.state.userID;\n        }\n        newElementStateData[elementID] = newSelectedElement;\n        newElementStateData = this.selectGroupedElements(newElementStateData);\n        this.setState({\n            elementState : newElementStateData\n        });\n    };\n\n    handleDeselectAllElements = () => {\n        const newElementStateData = this.deselectElements(this.state.elementState);\n        this.setState({\n            elementState : newElementStateData\n        });\n    }\n\n    deselectElements = (elementState) => {\n        const newElementStateData = {...elementState};\n        Object.keys(newElementStateData).forEach(item => {\n            if(this.isSelected(item)) {\n                const newElement = {...newElementStateData[item]};\n                newElement.selected = false;\n                newElementStateData[item] = newElement;\n            }\n        });\n        return newElementStateData;\n    }\n\n    registerDragHandler = (id, newDragHandlers) => {\n        setTimeout(() => {\n            var newHandlers = {};\n            if(newDragHandlers.dragStartHandler) {\n                newHandlers.handleDragStart =  newDragHandlers.dragStartHandler.bind(this);\n            }\n            if(newDragHandlers.dragMoveHandler) {\n                newHandlers.handleDragMove =  newDragHandlers.dragMoveHandler.bind(this);\n            }\n            if(newDragHandlers.dragEndHandler) {\n                newHandlers.handleDragEnd =  newDragHandlers.dragEndHandler.bind(this);\n            }\n            if(newDragHandlers.clickHandler) {\n                newHandlers.handleClick =  newDragHandlers.clickHandler.bind(this);\n            }\n            const dragHandlers = {...this.state.dragHandlers};\n            dragHandlers[id] = newHandlers;\n            this.setState({dragHandlers});\n        });\n       \n    };\n\n    removeDragHandler = (id) => {\n        const dragHandlers = {...this.state.dragHandlers};\n        if(dragHandlers[id]) {\n            delete dragHandlers[id];\n        }\n        this.setState({dragHandlers});\n    }\n\n    handleSetElementHeight = (elementID, height) => {\n        const newHeight  = Number(height)*this.state.zoomLevel;\n        if(this.state.elements[elementID].styles.height !== newHeight) {\n            const newElementsData = {...this.state.elements};\n            newElementsData[elementID] = {...newElementsData[elementID]};\n            newElementsData[elementID].styles = {...newElementsData[elementID].styles};\n            newElementsData[elementID].styles.height = newHeight;\n            this.setState({elements : newElementsData});\n        }\n    };\n\n    handleUpdateElementProperty = (data) => {\n        const newElementsData = {...this.state.elements};\n        data.id.forEach((id) => {\n\n            if(data.update) {\n                let newElement = mergeObjects(newElementsData[id], data.update);\n                newElementsData[id] = newElement;\n            } else if(data.remove) {\n                let newElement = removeData(newElementsData[id], data.remove);\n                newElementsData[id] = newElement;\n            }\n            \n        });\n        this.setState({elements : newElementsData, storeUndo : true});\n    }\n\n    handleUpdateElementsAndState = (data) => {\n        this.setState(data);\n    }\n\n    handleDeleteElements = () => {\n        const newElementsData = {...this.state.elements};\n        const newElementsState = {...this.state.elementState};\n        Object.keys(this.state.elementState).forEach(item => {\n            if(this.isSelected(item)) {\n                delete newElementsData[item];\n                delete newElementsState[item];\n            }\n        });\n        this.setState({\n                elements : newElementsData,\n                elementState : newElementsState,\n                storeUndo : true\n            });\n    }\n\n    handleShiftElementPosition = (type, ids) => {\n        const newElementsData = {},\n              newElementState = {};\n        const newIdsOrder = Object.keys(this.state.elements);\n        ids.forEach(id => {\n            const arrayPosition = newIdsOrder.indexOf(id);\n            newIdsOrder.splice(arrayPosition, 1);\n            if(type === \"forward\") {\n                newIdsOrder.splice(newIdsOrder.length, 0, id);\n            } else if (type === \"backward\") {\n                newIdsOrder.splice(0, 0, id);\n            }\n        });\n        newIdsOrder.forEach(id => {\n            newElementsData[id] = this.state.elements[id];\n            newElementState[id] = this.state.elementState[id];\n        });\n        this.setState({\n            elementState : newElementState,\n            elements : newElementsData,\n            storeUndo : true\n        });\n    }\n\n    handleSelectElementsWithinArea = (x, y, x1, y1) => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n\n        const newElementsState = {...elementState};\n\n        const realSpaceX = (x*zoomLevel)+offsetX,\n              realSpaceY = (y*zoomLevel)+offsetY,\n              realSpaceX1 = (x1*zoomLevel)+offsetX,\n              realSpaceY1 = (y1*zoomLevel)+offsetY;\n\n        Object.keys(elements).forEach(elementID => {\n            const element = elements[elementID];\n            const isSelectable = this.isSelected(elementID) || newElementsState[elementID].selected === false;\n            let isWithinArea = false;\n            \n            if(\n                element.styles.x >= realSpaceX &&\n                (element.styles.x + element.styles.width) <= realSpaceX1 &&\n                element.styles.y >= realSpaceY &&\n                (element.styles.y + element.styles.height) <= realSpaceY1) \n                {\n                    isWithinArea = true;\n                }\n            if(isWithinArea && isSelectable) {\n                newElementsState[elementID] = {...newElementsState[elementID]};\n                newElementsState[elementID].selected = userID;\n            }\n        });\n        this.setState({elementState : newElementsState});\n    }\n\n    handleDuplicateElements = () => {\n        const {\n            elements,\n            elementState,\n            zoomLevel,\n            userID\n        } = this.state;\n\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        //TOTEST : nothing happens when no elements selected\n        if(selectedElements.length) { \n            const newElements = {...elements};\n            const newElementsState = {...elementState};\n            const duplicatesOffsetMargin = 8;\n\n            const duplicatesOffsetPosition = {\n                x : selectedElements[0].styles.x,\n                x1 : selectedElements[0].styles.x + selectedElements[0].styles.width + (duplicatesOffsetMargin*zoomLevel)\n            };\n\n            //get position for new duplicate elements\n            selectedElements.forEach(element => {\n                if(element.styles.x < duplicatesOffsetPosition.x) {\n                    duplicatesOffsetPosition.x = element.styles.x;\n                }\n                const elementX1 = element.styles.x + element.styles.width;\n                if(elementX1 > duplicatesOffsetPosition.x1) {\n                    duplicatesOffsetPosition.x1 = elementX1+(duplicatesOffsetMargin*zoomLevel);\n                }\n            });\n\n            const newDuplicateElements = [];\n\n            //duplicate elements & state\n            selectedElements.forEach(element => {\n                const newID = Shortid.generate();\n                const duplicateElement = objectClone(element);\n                const duplicateElementState = objectClone(elementState[element.id]);\n                duplicateElement.id = newID;\n                duplicateElement.styles.x = duplicatesOffsetPosition.x1 + (duplicateElement.styles.x - duplicatesOffsetPosition.x);\n                newElements[newID] = duplicateElement;\n                newElementsState[newID] = duplicateElementState;\n                //remove selected status for old items\n                newElementsState[element.id] = {...newElementsState[element.id]};\n                newElementsState[element.id].selected = false;\n                newDuplicateElements.push(duplicateElement);\n            });\n\n            //replace groups with new groups\n            const allPreviousGroupIDs = {};\n            newDuplicateElements.forEach(newDuplicateElement => {\n                newDuplicateElement.groups.forEach(oldGroup => {\n                    allPreviousGroupIDs[oldGroup] = true;\n                });\n            });\n            newDuplicateElements.forEach(newDuplicateElement => {\n                const newGroups = newDuplicateElement.groups.map(oldGroup => {\n                    if(allPreviousGroupIDs[oldGroup] === true) {\n                        const newGroupID = Shortid.generate();\n                        allPreviousGroupIDs[oldGroup] = newGroupID;\n                    }\n                    return allPreviousGroupIDs[oldGroup];\n                });\n                newDuplicateElement.groups = newGroups;\n            });\n\n            this.setState(\n                {\n                    elementState : newElementsState,\n                    elements : newElements\n                }\n            );\n        }\n    }\n\n    updateBoardPosition = (data) => {\n        this.setState(data);\n    }\n\n    updateBoardName = (newBoardName) => {\n        this.setState({\n            boardName : newBoardName\n        });\n    }\n\n    updatePointerPosition = (coOrds) => {\n        this.setState({\n            pointerPosition : coOrds\n        });\n    }\n\n    toggleBoardShare = (data) => {\n        if(data) {\n            this.setState({shareBoard : data});\n        } else {\n            this.setState({shareBoard : false});\n        }\n        \n    }\n\n    calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY) {\n        if(selectedElements && selectedElements.length > 0) {\n            let width = selectedElements[0].styles.width,\n                height = selectedElements[0].styles.height,\n                x = selectedElements[0].styles.cx || selectedElements[0].styles.x,\n                y = selectedElements[0].styles.cy || selectedElements[0].styles.y,\n                cx = x+width,\n                cy = y+height,\n                combinedWidth = 0,\n                combinedHeight = 0;\n            if(selectedElements.length > 1) {\n                selectedElements.forEach(item => {\n                    let itemWidth = item.styles.width,\n                        itemHeight = item.styles.height,\n                        itemX = item.styles.cx || item.styles.x,\n                        itemY = item.styles.cy || item.styles.y,\n                        itemCX = itemX+itemWidth,\n                        itemCY = itemY+itemHeight;\n                    \n                    if (itemX < x) {\n                        x = itemX;\n                    }\n                    if(itemCX > cx) {\n                        cx = itemCX;\n                    }\n                    if (itemY < y) {\n                        y = itemY;\n                    }\n                    if(itemCY > cy) {\n                        cy = itemCY;\n                    }\n                });\n                combinedWidth = cx-x;\n                combinedHeight = cy-y;\n            }\n            return {\n                height : (combinedHeight || height)/zoomLevel,\n                width : (combinedWidth || width)/zoomLevel,\n                x : (x-offsetX)/zoomLevel,\n                y : (y-offsetY)/zoomLevel,\n                cx : (cx-offsetX)/zoomLevel,\n                cy : (cy-offsetY)/zoomLevel,\n                rawX : x,\n                rawY : y,\n                rawHeight : (combinedHeight || height),\n                rawWidth : (combinedWidth || width)\n            };\n        }\n        return {\n            height : 0,\n            width : 0,\n            x : 0,\n            y : 0,\n            cx : 0,\n            cy : 0,\n            rawX : 0,\n            rawY : 0,\n            rawHeight : 0,\n            rawWidth : 0\n        };\n    }\n\n    isSelected = (elementID, elementState) => {\n        const {\n            userID\n        } = this.state;\n\n        if(!elementState) {\n            elementState = this.state.elementState;\n        }\n        \n        let isSelected = false;\n\n        if(elementState[elementID] && elementState[elementID].selected === userID) {\n            isSelected = true;\n        }\n\n        return isSelected;\n    }\n\n    isLocked = (elementID) => {\n        const element = this.state.elements[elementID]; \n        if(element) {\n            return element.locked;\n        } else {\n            return null;\n        }\n    }\n\n    isUniqueSelected = (elementID) => {\n        const {\n            elementState,\n            userID\n        } = this.state;\n        const isSelected = elementState[elementID].selected === userID;\n        let selectedCount = 0;\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID)) {\n                selectedCount++;\n            }\n        });\n        const isUniqueSelcted = isSelected && selectedCount === 1;\n        return isUniqueSelcted;\n    }\n\n    getSelectedElements(elementState) {\n        const selectedElements = [];\n        Object.keys(elementState).forEach(elementID => {\n            if(this.isSelected(elementID, elementState)) {\n                selectedElements.push(this.state.elements[elementID]);\n            }\n        });\n        return selectedElements;\n    }\n\n    getState = () => {\n\n        return {...this.state};\n\n    }\n\n    getSlides = () => {\n        const {\n            elements\n        } = this.state;\n\n        const slideKeys = Object.keys(elements).filter((elementID) => {\n            if(elements[elementID].type === \"slide\") {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        const slides = slideKeys.map(slideKey => {\n            return {\n                id : slideKey,\n                slideName : elements[slideKey].slideName\n            }\n        });\n\n        return slides;\n    }\n\n    changeSlideName = (slideID, newName) => {\n        const {\n            elements\n        } = this.state;\n        const newElements = {...elements};\n        const newSlideElement = {...elements[slideID]};\n        newSlideElement.slideName = newName;\n        newElements[slideID] = newSlideElement;\n        this.setState({elements : newElements});\n    } \n\n    shuntSelectedElements = (direction) => {\n        const {\n            elements,\n            elementState,\n            zoomLevel\n        } = this.state;\n        const newElements = {...elements};\n        const selectedElements = this.getSelectedElements(elementState);\n        selectedElements.forEach(element => {\n            const newElementStyles = {...element.styles};\n            newElements[element.id].styles = newElementStyles;\n            if(direction === \"down\") {\n                newElementStyles.y += zoomLevel;\n            } else if(direction === \"up\") {\n                newElementStyles.y -= zoomLevel;\n            } else if(direction === \"left\") {\n                newElementStyles.x -= zoomLevel;\n            } else if(direction === \"right\") {\n                newElementStyles.x += zoomLevel;\n            }\n        });\n        this.setState({elements : newElements});\n    }\n\n    copy = () => {\n        const {\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n\n        const pasteBuffer = {\n            type : \"copy\",\n            elements : selectedElements,\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        };\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n        });\n\n        this.setState({\n            pasteBuffer\n        });\n\n    }\n\n    cut = () => {\n        const {\n            elements,\n            elementState,\n            userID,\n            zoomLevel,\n            offsetX,\n            offsetY\n        } = this.state;\n        \n        const selectedElements = this.getSelectedElements(elementState, userID);\n        const pasteBuffer = {\n            type : \"cut\",\n            elements : [],\n            elementState : {},\n            boundingBox : this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY)\n        }\n\n        const newElements = {...elements};\n        const newElementState = {...elementState};\n\n        selectedElements.forEach(element => {\n            pasteBuffer.elements.push({...element});\n            pasteBuffer.elementState[element.id] = {...elementState[element.id]};\n            delete newElements[element.id];\n            delete newElementState[element.id]\n        });\n        \n        this.setState({\n            elements : newElements,\n            elementState : newElementState,\n            pasteBuffer\n        });\n    }\n\n    paste = () => {\n        const {\n            elements,\n            elementState,\n            pointerPosition,\n            pasteBuffer\n        } = this.state;\n        \n        const newElements = {...elements};\n        const newElementState = this.deselectElements(elementState);\n\n        pasteBuffer.elements.forEach(element => {\n            const newID = Shortid.generate();\n            newElements[newID] = {...element};\n            newElements[newID].id = newID;\n\n            newElementState[newID] = {...pasteBuffer.elementState[element.id]};\n            newElementState[element.id] = {...newElementState[element.id]};\n            newElementState[element.id].selected = false;\n\n            newElements[newID].styles = {...element.styles};\n            const newX = pointerPosition.x + (element.styles.x - pasteBuffer.boundingBox.rawX);\n            const newY = pointerPosition.y + (element.styles.y - pasteBuffer.boundingBox.rawY);\n            newElements[newID].styles.x = newX;\n            newElements[newID].styles.y = newY;\n        })\n\n        const newState = {\n            elements : newElements,\n            elementState : newElementState\n        };\n\n        if(pasteBuffer.type === \"cut\") {\n            newState.pasteBuffer = {\n                type : null,\n                elements : [],\n                elementState : []\n            };\n        }\n\n        this.setState(newState);\n    }\n\n    loadRemoteBoard = (url) => {\n        fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => {\n                const newState = Object.assign({}, this.state, data);\n                this.setState(newState);\n            })\n            .catch(e => console.log(e));\n    }\n\n    loadTemplatesAndTutorials = () => {\n        this.loadRemoteBoard(\"https://raw.githubusercontent.com/SimonKenyonShepard/miral_templates/main/whiteboardFile_splashScreen.wswb\");\n    }\n\n    getRawSVG = () => {\n        var serializer = new XMLSerializer();\n        var rawSVGString = serializer.serializeToString(this.SVGElementRef);\n        return rawSVGString;\n    }\n\n    render() {\n        const {width, height} = this.props;\n        const {\n            offsetX, \n            offsetY, \n            zoomLevel, \n            tool, \n            elements,\n            elementState,\n            textEditor\n        } = this.state;\n        const zoomedWidth = width*zoomLevel,\n        zoomedHeight = height*zoomLevel;\n        const viewBox = `${offsetX} ${offsetY} ${zoomedWidth} ${zoomedHeight}`;\n\n        const selectedElements = this.getSelectedElements(elementState);\n        const elementKeys = Object.keys(elements);\n        \n        const boundingBox = this.calculateSelectedElementsBoundingBox(selectedElements, zoomLevel, offsetX, offsetY),\n              gridSizeMin = 24,\n              gridSizeMax = 96,\n              gridRange = gridSizeMax-gridSizeMin,\n              percentageGridSize = (zoomLevel-(Math.floor(zoomLevel/100)*100))/100,\n              backgroundGridSize = gridSizeMax-(gridRange*percentageGridSize),\n              backgroundPositionX = ((offsetX)/zoomLevel*-1)-percentageGridSize,\n              backgroundPositionY = ((offsetY)/zoomLevel*-1)-percentageGridSize;\n\n        const gridPosition = {\n            backgroundPosition : `${backgroundPositionX}px ${backgroundPositionY}px`,\n            backgroundSize : `${backgroundGridSize}px ${backgroundGridSize}px`,\n            height : `${height}px`,\n            width : `${width}px`\n        };\n\n        return (\n                <div \n                    className={`boardWrapper ${tool}`} \n                    style={gridPosition}\n                >\n                    <InteractionManager\n                        offsetX={this.state.offsetX}\n                        offsetY={this.state.offsetY}\n                        zoomLevel={this.state.zoomLevel}\n                        updateBoardPosition={this.updateBoardPosition}\n                        dragHandlers={this.state.dragHandlers}\n                        updatePointerPosition={this.updatePointerPosition}\n                        handlePanMove={this.handlePanMove}\n                        isSelected={this.isSelected}\n                        isLocked={this.isLocked}\n                    >\n                        <svg id=\"board\" \n                            width={`${width}px`}\n                            height={`${height}px`}\n                            viewBox={viewBox}\n                            ref={(element) => { this.SVGElementRef = element; }}\n                            >\n                            <defs>\n                                <filter height=\"200%\" id=\"shadow1\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\"/>\n                                </filter>\n                                <filter height=\"200%\" id=\"shadow2\" width=\"200%\" x=\"-50%\" y=\"-50%\">\n                                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\"/>\n                                </filter>\n                                <filter id=\"shadow3\">\n                                    <feDropShadow ddx=\"0\" dy=\"0\" stdDeviation=\"0.5\"/>\n                                </filter>\n                                <marker id=\"arrow\" markerWidth=\"5\" markerHeight=\"5\" refX=\"2.5\" refY=\"2.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                                    <polygon points=\"0,0 0,5 5,2.5\" fill=\"#000\" />\n                                </marker>\n                            </defs>\n                            <Pattern \n                                zoomLevel={zoomLevel}\n                            />\n                            <ElementDrag \n                                boundingBox={boundingBox}\n                                elementKeys={elementKeys}\n                                registerDragHandler={this.registerDragHandler}\n                                removeDragHandler={this.removeDragHandler}\n                            />\n                            <Elements \n                                elements={elements}\n                                elementState={elementState}\n                                handleTextEdit={this.handleTextEdit}\n                                handleSetCurrentElement={this.handleSetCurrentElement}\n                                isSelected={this.isSelected}\n                                isUniqueSelected={this.isUniqueSelected}\n                                animateToElement={this.animateToElement}\n                                loadRemoteBoard={this.loadRemoteBoard}\n                                handleUpdateElementProperty={this.handleUpdateElementProperty}\n                                zoomLevel={zoomLevel}\n                            />\n                        </svg>\n                        <Resizer\n                            isLocked={(selectedElements.filter(item => item.locked).length)} \n                            isVisible={(selectedElements.length > 0)}\n                            registerDragHandler={this.registerDragHandler}\n                            boundingBox={boundingBox}\n                        />\n                        <TextEditor \n                            data={textEditor}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            handleUpdatedText={this.handleUpdatedText}\n                            handleSetElementHeight={this.handleSetElementHeight}\n                        />\n                        <ElementEditor \n                            selectedElements={selectedElements}\n                            gridSpace={{offsetX, offsetY, zoomLevel}}\n                            getSlides={this.getSlides}\n                            handleUpdateElementProperty={this.handleUpdateElementProperty}\n                            handleDeleteElements={this.handleDeleteElements}\n                            handleShiftElementPosition={this.handleShiftElementPosition}\n                            boundingBox={boundingBox}\n                        />\n                        <DrawCanvas \n                            handleSelectElementsWithinArea={this.handleSelectElementsWithinArea}\n                            removeDragHandler={this.removeDragHandler}\n                        />\n                    </InteractionManager>\n                    \n                    <BoardControls\n                        elements={this.state.elements}\n                        elementState={this.state.elementState}\n                        storeUndo={this.state.storeUndo}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        boardName={this.state.boardName}\n                        updateBoardName={this.updateBoardName}\n                        toggleBoardShare={this.toggleBoardShare}\n                    />\n                    <NavBar \n                        getState={this.getState}\n                        handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                        loadTemplatesAndTutorials={this.loadTemplatesAndTutorials}\n                        getRawSVG={this.getRawSVG}\n                        windowWidth={width}\n                        windowHeight={height}\n                    />\n                    <KeyboardManager\n                        keyboardHandlers={this.state.keyboardHandlers}\n                        handleDeleteElements={this.handleDeleteElements}\n                        handleDuplicateElements={this.handleDuplicateElements}\n                        shuntSelectedElements={this.shuntSelectedElements}\n                        textEditor={textEditor}\n                        copy={this.copy}\n                        cut={this.cut}\n                        paste={this.paste}\n                    />\n                    <Tools\n                        handleDeselectAllElements={this.handleDeselectAllElements}\n                        handleSelectElementsWithinArea={this.handleSelectElementsWithinArea} \n                        registerDragHandler={this.registerDragHandler}\n                        removeDragHandler={this.removeDragHandler}\n                        currentSelectedTool={this.state.tool}\n                    />\n                    <div className=\"bottomLeft\">\n                        <SlideNavigator\n                            getSlides={this.getSlides}\n                            changeSlideName={this.changeSlideName}\n                            animateToElement={this.animateToElement}\n                        />\n                    </div>\n                    <div className=\"bottomRight\">\n                        <Altimeter zoomLevel={zoomLevel} />\n                    </div>\n                    <MultiUserManager\n                            userID={this.state.userID} \n                            shareBoard={this.state.shareBoard}\n                            elements={this.state.elements}\n                            elementState={this.state.elementState}\n                            handleUpdateElementsAndState={this.handleUpdateElementsAndState}\n                            multiUserUpdate={this.state.multiUserUpdate}\n                            pointerPosition={this.state.pointerPosition}\n                            offsetX={this.state.offsetX}\n                            offsetY={this.state.offsetY}\n                            zoomLevel={this.state.zoomLevel}\n                        />\n                    <Hub />\n                </div>\n        );\n    }\n\n    componentDidMount(){\n        this.registerDragHandler(\"board\", {\n            \"dragStartHandler\" : this.handlePanStart,\n            \"dragMoveHandler\" : this.handlePanMove,\n            \"dragEndHandler\" : this.handlePanEnd,\n            \"clickHandler\" : this.handleDeselectAllElements\n        });\n        const isNotFirstUse = window.localStorage.getItem(\"miral_isFirstUse\");\n        const isNotShare = (window.location.hash.indexOf(\"j=\") === -1);\n        if(!isNotFirstUse && isNotShare) {\n            this.loadTemplatesAndTutorials();\n            window.localStorage.setItem(\"miral_isFirstUse\", true);\n        }\n        \n    }\n\n    \n  }\n\n  export default Board;","import React from 'react';\nimport './App.css';\nimport Board from './board/';\n\nimport {ThemeContext, themes} from './theme-context';\nimport { ToolsProvider } from './board/context/tools.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: document.body.clientWidth,\n      height : document.body.clientHeight\n    };\n  }\n\n  handleWindowResize = () => {\n    this.setState({\n      width: document.body.clientWidth,\n      height : document.body.clientHeight\n    });\n  }\n\n  render() {\n    const { height, width } = this.state;\n\n    return (\n      <ThemeContext.Provider value={themes.light}>\n        <ToolsProvider>\n          <div className=\"App\">\n              <Board width={width} height={height} />\n          </div>\n        </ToolsProvider>\n      </ThemeContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}